// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// CTRL
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x40 : Data signal of min_duty
//        bit 31~0 - min_duty[31:0] (Read/Write)
// 0x44 : reserved
// 0x48 : Data signal of max_duty
//        bit 31~0 - max_duty[31:0] (Read/Write)
// 0x4c : reserved
// 0x50 : Data signal of period
//        bit 31~0 - period[31:0] (Read/Write)
// 0x54 : reserved
// 0x20 ~
// 0x3f : Memory 'motorCmd_V' (9 * 16b)
//        Word n : bit [15: 0] - motorCmd_V[2n]
//                 bit [31:16] - motorCmd_V[2n+1]
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XPWM_CTRL_ADDR_AP_CTRL         0x00
#define XPWM_CTRL_ADDR_GIE             0x04
#define XPWM_CTRL_ADDR_IER             0x08
#define XPWM_CTRL_ADDR_ISR             0x0c
#define XPWM_CTRL_ADDR_MIN_DUTY_DATA   0x40
#define XPWM_CTRL_BITS_MIN_DUTY_DATA   32
#define XPWM_CTRL_ADDR_MAX_DUTY_DATA   0x48
#define XPWM_CTRL_BITS_MAX_DUTY_DATA   32
#define XPWM_CTRL_ADDR_PERIOD_DATA     0x50
#define XPWM_CTRL_BITS_PERIOD_DATA     32
#define XPWM_CTRL_ADDR_MOTORCMD_V_BASE 0x20
#define XPWM_CTRL_ADDR_MOTORCMD_V_HIGH 0x3f
#define XPWM_CTRL_WIDTH_MOTORCMD_V     16
#define XPWM_CTRL_DEPTH_MOTORCMD_V     9

// TEST
// 0x4000 ~
// 0x7fff : Memory 'test' (4096 * 32b)
//          Word n : bit [31:0] - test[n]
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XPWM_TEST_ADDR_TEST_BASE 0x4000
#define XPWM_TEST_ADDR_TEST_HIGH 0x7fff
#define XPWM_TEST_WIDTH_TEST     32
#define XPWM_TEST_DEPTH_TEST     4096

// TEST2
// 0x4000 ~
// 0x7fff : Memory 'test2_V' (4096 * 32b)
//          Word n : bit [31:0] - test2_V[n]
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XPWM_TEST2_ADDR_TEST2_V_BASE 0x4000
#define XPWM_TEST2_ADDR_TEST2_V_HIGH 0x7fff
#define XPWM_TEST2_WIDTH_TEST2_V     32
#define XPWM_TEST2_DEPTH_TEST2_V     4096

