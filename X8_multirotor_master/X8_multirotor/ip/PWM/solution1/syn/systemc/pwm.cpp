// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pwm.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pwm::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pwm::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> pwm::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<11> pwm::ap_ST_fsm_pp0_stage1 = "10";
const sc_lv<11> pwm::ap_ST_fsm_pp0_stage2 = "100";
const sc_lv<11> pwm::ap_ST_fsm_pp0_stage3 = "1000";
const sc_lv<11> pwm::ap_ST_fsm_pp0_stage4 = "10000";
const sc_lv<11> pwm::ap_ST_fsm_pp0_stage5 = "100000";
const sc_lv<11> pwm::ap_ST_fsm_pp0_stage6 = "1000000";
const sc_lv<11> pwm::ap_ST_fsm_pp0_stage7 = "10000000";
const sc_lv<11> pwm::ap_ST_fsm_pp0_stage8 = "100000000";
const sc_lv<11> pwm::ap_ST_fsm_pp0_stage9 = "1000000000";
const sc_lv<11> pwm::ap_ST_fsm_pp0_stage10 = "10000000000";
const sc_lv<32> pwm::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool pwm::ap_const_boolean_1 = true;
const sc_lv<32> pwm::ap_const_lv32_A = "1010";
const bool pwm::ap_const_boolean_0 = false;
const sc_lv<16> pwm::ap_const_lv16_0 = "0000000000000000";
const int pwm::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> pwm::ap_const_lv32_1 = "1";
const sc_lv<32> pwm::ap_const_lv32_2 = "10";
const sc_lv<32> pwm::ap_const_lv32_3 = "11";
const sc_lv<32> pwm::ap_const_lv32_4 = "100";
const sc_lv<32> pwm::ap_const_lv32_5 = "101";
const sc_lv<32> pwm::ap_const_lv32_6 = "110";
const sc_lv<32> pwm::ap_const_lv32_7 = "111";
const sc_lv<32> pwm::ap_const_lv32_8 = "1000";
const sc_lv<32> pwm::ap_const_lv32_9 = "1001";
const sc_lv<64> pwm::ap_const_lv64_8 = "1000";
const sc_lv<64> pwm::ap_const_lv64_7 = "111";
const sc_lv<64> pwm::ap_const_lv64_9 = "1001";
const sc_lv<64> pwm::ap_const_lv64_2 = "10";
const sc_lv<64> pwm::ap_const_lv64_6 = "110";
const sc_lv<64> pwm::ap_const_lv64_A = "1010";
const sc_lv<64> pwm::ap_const_lv64_3 = "11";
const sc_lv<64> pwm::ap_const_lv64_5 = "101";
const sc_lv<64> pwm::ap_const_lv64_4 = "100";
const sc_lv<64> pwm::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> pwm::ap_const_lv64_1 = "1";
const sc_lv<32> pwm::ap_const_lv32_1000 = "1000000000000";
const sc_lv<32> pwm::ap_const_lv32_333 = "1100110011";
const sc_lv<32> pwm::ap_const_lv32_45 = "1000101";
const sc_lv<32> pwm::ap_const_lv32_C = "1100";
const sc_lv<32> pwm::ap_const_lv32_F = "1111";
const sc_lv<4> pwm::ap_const_lv4_0 = "0000";
const sc_lv<16> pwm::ap_const_lv16_1 = "1";
const sc_lv<32> pwm::ap_const_lv32_D = "1101";
const sc_lv<13> pwm::ap_const_lv13_0 = "0000000000000";
const sc_lv<3> pwm::ap_const_lv3_1 = "1";
const sc_lv<32> pwm::ap_const_lv32_20 = "100000";
const sc_lv<32> pwm::ap_const_lv32_1C = "11100";
const sc_lv<8> pwm::ap_const_lv8_0 = "00000000";

pwm::pwm(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pwm_CTRL_s_axi_U = new pwm_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>("pwm_CTRL_s_axi_U");
    pwm_CTRL_s_axi_U->AWVALID(s_axi_CTRL_AWVALID);
    pwm_CTRL_s_axi_U->AWREADY(s_axi_CTRL_AWREADY);
    pwm_CTRL_s_axi_U->AWADDR(s_axi_CTRL_AWADDR);
    pwm_CTRL_s_axi_U->WVALID(s_axi_CTRL_WVALID);
    pwm_CTRL_s_axi_U->WREADY(s_axi_CTRL_WREADY);
    pwm_CTRL_s_axi_U->WDATA(s_axi_CTRL_WDATA);
    pwm_CTRL_s_axi_U->WSTRB(s_axi_CTRL_WSTRB);
    pwm_CTRL_s_axi_U->ARVALID(s_axi_CTRL_ARVALID);
    pwm_CTRL_s_axi_U->ARREADY(s_axi_CTRL_ARREADY);
    pwm_CTRL_s_axi_U->ARADDR(s_axi_CTRL_ARADDR);
    pwm_CTRL_s_axi_U->RVALID(s_axi_CTRL_RVALID);
    pwm_CTRL_s_axi_U->RREADY(s_axi_CTRL_RREADY);
    pwm_CTRL_s_axi_U->RDATA(s_axi_CTRL_RDATA);
    pwm_CTRL_s_axi_U->RRESP(s_axi_CTRL_RRESP);
    pwm_CTRL_s_axi_U->BVALID(s_axi_CTRL_BVALID);
    pwm_CTRL_s_axi_U->BREADY(s_axi_CTRL_BREADY);
    pwm_CTRL_s_axi_U->BRESP(s_axi_CTRL_BRESP);
    pwm_CTRL_s_axi_U->ACLK(ap_clk);
    pwm_CTRL_s_axi_U->ARESET(ap_rst_n_inv);
    pwm_CTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    pwm_CTRL_s_axi_U->ap_start(ap_start);
    pwm_CTRL_s_axi_U->interrupt(interrupt);
    pwm_CTRL_s_axi_U->ap_ready(ap_ready);
    pwm_CTRL_s_axi_U->ap_done(ap_done);
    pwm_CTRL_s_axi_U->ap_idle(ap_idle);
    pwm_CTRL_s_axi_U->motorCmd_V_address0(motorCmd_V_address0);
    pwm_CTRL_s_axi_U->motorCmd_V_ce0(motorCmd_V_ce0);
    pwm_CTRL_s_axi_U->motorCmd_V_q0(motorCmd_V_q0);
    pwm_CTRL_s_axi_U->min_duty(min_duty);
    pwm_CTRL_s_axi_U->max_duty(max_duty);
    pwm_CTRL_s_axi_U->period(period);
    pwm_TEST_s_axi_U = new pwm_TEST_s_axi<C_S_AXI_TEST_ADDR_WIDTH,C_S_AXI_TEST_DATA_WIDTH>("pwm_TEST_s_axi_U");
    pwm_TEST_s_axi_U->AWVALID(s_axi_TEST_AWVALID);
    pwm_TEST_s_axi_U->AWREADY(s_axi_TEST_AWREADY);
    pwm_TEST_s_axi_U->AWADDR(s_axi_TEST_AWADDR);
    pwm_TEST_s_axi_U->WVALID(s_axi_TEST_WVALID);
    pwm_TEST_s_axi_U->WREADY(s_axi_TEST_WREADY);
    pwm_TEST_s_axi_U->WDATA(s_axi_TEST_WDATA);
    pwm_TEST_s_axi_U->WSTRB(s_axi_TEST_WSTRB);
    pwm_TEST_s_axi_U->ARVALID(s_axi_TEST_ARVALID);
    pwm_TEST_s_axi_U->ARREADY(s_axi_TEST_ARREADY);
    pwm_TEST_s_axi_U->ARADDR(s_axi_TEST_ARADDR);
    pwm_TEST_s_axi_U->RVALID(s_axi_TEST_RVALID);
    pwm_TEST_s_axi_U->RREADY(s_axi_TEST_RREADY);
    pwm_TEST_s_axi_U->RDATA(s_axi_TEST_RDATA);
    pwm_TEST_s_axi_U->RRESP(s_axi_TEST_RRESP);
    pwm_TEST_s_axi_U->BVALID(s_axi_TEST_BVALID);
    pwm_TEST_s_axi_U->BREADY(s_axi_TEST_BREADY);
    pwm_TEST_s_axi_U->BRESP(s_axi_TEST_BRESP);
    pwm_TEST_s_axi_U->ACLK(ap_clk);
    pwm_TEST_s_axi_U->ARESET(ap_rst_n_inv);
    pwm_TEST_s_axi_U->ACLK_EN(ap_var_for_const0);
    pwm_TEST_s_axi_U->test_address0(test_address0);
    pwm_TEST_s_axi_U->test_ce0(test_ce0);
    pwm_TEST_s_axi_U->test_we0(test_we0);
    pwm_TEST_s_axi_U->test_d0(test_d0);
    pwm_TEST2_s_axi_U = new pwm_TEST2_s_axi<C_S_AXI_TEST2_ADDR_WIDTH,C_S_AXI_TEST2_DATA_WIDTH>("pwm_TEST2_s_axi_U");
    pwm_TEST2_s_axi_U->AWVALID(s_axi_TEST2_AWVALID);
    pwm_TEST2_s_axi_U->AWREADY(s_axi_TEST2_AWREADY);
    pwm_TEST2_s_axi_U->AWADDR(s_axi_TEST2_AWADDR);
    pwm_TEST2_s_axi_U->WVALID(s_axi_TEST2_WVALID);
    pwm_TEST2_s_axi_U->WREADY(s_axi_TEST2_WREADY);
    pwm_TEST2_s_axi_U->WDATA(s_axi_TEST2_WDATA);
    pwm_TEST2_s_axi_U->WSTRB(s_axi_TEST2_WSTRB);
    pwm_TEST2_s_axi_U->ARVALID(s_axi_TEST2_ARVALID);
    pwm_TEST2_s_axi_U->ARREADY(s_axi_TEST2_ARREADY);
    pwm_TEST2_s_axi_U->ARADDR(s_axi_TEST2_ARADDR);
    pwm_TEST2_s_axi_U->RVALID(s_axi_TEST2_RVALID);
    pwm_TEST2_s_axi_U->RREADY(s_axi_TEST2_RREADY);
    pwm_TEST2_s_axi_U->RDATA(s_axi_TEST2_RDATA);
    pwm_TEST2_s_axi_U->RRESP(s_axi_TEST2_RRESP);
    pwm_TEST2_s_axi_U->BVALID(s_axi_TEST2_BVALID);
    pwm_TEST2_s_axi_U->BREADY(s_axi_TEST2_BREADY);
    pwm_TEST2_s_axi_U->BRESP(s_axi_TEST2_BRESP);
    pwm_TEST2_s_axi_U->ACLK(ap_clk);
    pwm_TEST2_s_axi_U->ARESET(ap_rst_n_inv);
    pwm_TEST2_s_axi_U->ACLK_EN(ap_var_for_const0);
    pwm_TEST2_s_axi_U->test2_V_address0(test2_V_address0);
    pwm_TEST2_s_axi_U->test2_V_ce0(test2_V_ce0);
    pwm_TEST2_s_axi_U->test2_V_we0(test2_V_we0);
    pwm_TEST2_s_axi_U->test2_V_d0(test2_V_d0);
    pwm_mul_mul_16s_1bkb_U1 = new pwm_mul_mul_16s_1bkb<1,1,16,16,32>("pwm_mul_mul_16s_1bkb_U1");
    pwm_mul_mul_16s_1bkb_U1->din0(motorCmd_V_q0);
    pwm_mul_mul_16s_1bkb_U1->din1(p_Val2_1_7_fu_1339_p1);
    pwm_mul_mul_16s_1bkb_U1->dout(p_Val2_1_7_fu_1339_p2);
    pwm_mul_mul_16s_1bkb_U2 = new pwm_mul_mul_16s_1bkb<1,1,16,16,32>("pwm_mul_mul_16s_1bkb_U2");
    pwm_mul_mul_16s_1bkb_U2->din0(motorCmd_V_q0);
    pwm_mul_mul_16s_1bkb_U2->din1(p_Val2_1_6_fu_1346_p1);
    pwm_mul_mul_16s_1bkb_U2->dout(p_Val2_1_6_fu_1346_p2);
    pwm_mul_mul_16s_1bkb_U3 = new pwm_mul_mul_16s_1bkb<1,1,16,16,32>("pwm_mul_mul_16s_1bkb_U3");
    pwm_mul_mul_16s_1bkb_U3->din0(motorCmd_V_q0);
    pwm_mul_mul_16s_1bkb_U3->din1(p_Val2_1_5_fu_1352_p1);
    pwm_mul_mul_16s_1bkb_U3->dout(p_Val2_1_5_fu_1352_p2);
    pwm_mul_mul_16s_1bkb_U4 = new pwm_mul_mul_16s_1bkb<1,1,16,16,32>("pwm_mul_mul_16s_1bkb_U4");
    pwm_mul_mul_16s_1bkb_U4->din0(motorCmd_V_q0);
    pwm_mul_mul_16s_1bkb_U4->din1(p_Val2_1_4_fu_1358_p1);
    pwm_mul_mul_16s_1bkb_U4->dout(p_Val2_1_4_fu_1358_p2);
    pwm_mul_mul_16s_1bkb_U5 = new pwm_mul_mul_16s_1bkb<1,1,16,16,32>("pwm_mul_mul_16s_1bkb_U5");
    pwm_mul_mul_16s_1bkb_U5->din0(motorCmd_V_q0);
    pwm_mul_mul_16s_1bkb_U5->din1(p_Val2_1_3_fu_1364_p1);
    pwm_mul_mul_16s_1bkb_U5->dout(p_Val2_1_3_fu_1364_p2);
    pwm_mul_mul_16s_1bkb_U6 = new pwm_mul_mul_16s_1bkb<1,1,16,16,32>("pwm_mul_mul_16s_1bkb_U6");
    pwm_mul_mul_16s_1bkb_U6->din0(motorCmd_V_q0);
    pwm_mul_mul_16s_1bkb_U6->din1(p_Val2_1_2_fu_1370_p1);
    pwm_mul_mul_16s_1bkb_U6->dout(p_Val2_1_2_fu_1370_p2);
    pwm_mul_mul_16s_1bkb_U7 = new pwm_mul_mul_16s_1bkb<1,1,16,16,32>("pwm_mul_mul_16s_1bkb_U7");
    pwm_mul_mul_16s_1bkb_U7->din0(motorCmd_V_q0);
    pwm_mul_mul_16s_1bkb_U7->din1(p_Val2_1_fu_1376_p1);
    pwm_mul_mul_16s_1bkb_U7->dout(p_Val2_1_fu_1376_p2);
    pwm_mul_mul_16s_1bkb_U8 = new pwm_mul_mul_16s_1bkb<1,1,16,16,32>("pwm_mul_mul_16s_1bkb_U8");
    pwm_mul_mul_16s_1bkb_U8->din0(motorCmd_V_q0);
    pwm_mul_mul_16s_1bkb_U8->din1(p_Val2_1_1_fu_1382_p1);
    pwm_mul_mul_16s_1bkb_U8->dout(p_Val2_1_1_fu_1382_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_OP1_V_fu_573_p1);
    sensitive << ( tmp_12_reg_1408 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage10);

    SC_METHOD(thread_ap_block_pp0_stage10_11001);

    SC_METHOD(thread_ap_block_pp0_stage10_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_pp0_stage5);

    SC_METHOD(thread_ap_block_pp0_stage5_11001);

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);

    SC_METHOD(thread_ap_block_pp0_stage6);

    SC_METHOD(thread_ap_block_pp0_stage6_11001);

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);

    SC_METHOD(thread_ap_block_pp0_stage7);

    SC_METHOD(thread_ap_block_pp0_stage7_11001);

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);

    SC_METHOD(thread_ap_block_pp0_stage8);

    SC_METHOD(thread_ap_block_pp0_stage8_11001);

    SC_METHOD(thread_ap_block_pp0_stage8_subdone);

    SC_METHOD(thread_ap_block_pp0_stage9);

    SC_METHOD(thread_ap_block_pp0_stage9_11001);

    SC_METHOD(thread_ap_block_pp0_stage9_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage9_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage10_iter0);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state2_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage7_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage8_iter0);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0_reg );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_idle_pp0_1to1);
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_icmp_fu_450_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( tmp_6_fu_440_p4 );

    SC_METHOD(thread_motorCmd_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );

    SC_METHOD(thread_motorCmd_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );

    SC_METHOD(thread_out_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( p_3_fu_1326_p3 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_p_2_fu_548_p3);
    sensitive << ( ret_V_fu_514_p4 );
    sensitive << ( tmp_22_fu_536_p2 );
    sensitive << ( ret_V_1_fu_542_p2 );

    SC_METHOD(thread_p_3_fu_1326_p3);
    sensitive << ( icmp_reg_1403 );
    sensitive << ( p_Result_4_7_fu_1308_p9 );

    SC_METHOD(thread_p_4_fu_556_p3);
    sensitive << ( ret_V_fu_514_p4 );
    sensitive << ( tmp_83_fu_524_p3 );
    sensitive << ( p_2_fu_548_p3 );

    SC_METHOD(thread_p_Repl2_0_trunc_fu_1132_p2);
    sensitive << ( tmp_24_reg_1432 );
    sensitive << ( tmp_1_fu_1127_p2 );

    SC_METHOD(thread_p_Repl2_1_trunc_fu_1161_p2);
    sensitive << ( tmp_24_reg_1432 );
    sensitive << ( tmp_3_fu_1156_p2 );

    SC_METHOD(thread_p_Repl2_2_trunc_fu_1184_p2);
    sensitive << ( tmp_24_reg_1432 );
    sensitive << ( tmp_7_fu_1179_p2 );

    SC_METHOD(thread_p_Repl2_3_trunc_fu_1207_p2);
    sensitive << ( tmp_24_reg_1432 );
    sensitive << ( tmp_8_fu_1202_p2 );

    SC_METHOD(thread_p_Repl2_4_trunc_fu_1230_p2);
    sensitive << ( tmp_24_reg_1432 );
    sensitive << ( tmp_10_fu_1225_p2 );

    SC_METHOD(thread_p_Repl2_5_trunc_fu_1253_p2);
    sensitive << ( tmp_24_reg_1432 );
    sensitive << ( tmp_17_fu_1248_p2 );

    SC_METHOD(thread_p_Repl2_6_trunc_fu_1276_p2);
    sensitive << ( tmp_24_reg_1432 );
    sensitive << ( tmp_18_fu_1271_p2 );

    SC_METHOD(thread_p_Repl2_7_trunc_fu_1299_p2);
    sensitive << ( tmp_24_reg_1432 );
    sensitive << ( tmp_20_fu_1294_p2 );

    SC_METHOD(thread_p_Result_4_7_fu_1308_p9);
    sensitive << ( p_Repl2_0_trunc_reg_1638 );
    sensitive << ( p_Repl2_1_trunc_reg_1643 );
    sensitive << ( p_Repl2_2_trunc_reg_1648 );
    sensitive << ( p_Repl2_3_trunc_reg_1653 );
    sensitive << ( p_Repl2_4_trunc_reg_1658 );
    sensitive << ( p_Repl2_5_trunc_reg_1663 );
    sensitive << ( p_Repl2_6_trunc_reg_1668 );
    sensitive << ( p_Repl2_7_trunc_reg_1673 );

    SC_METHOD(thread_p_Val2_1_1_fu_1382_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( OP1_V_reg_1459 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9 );

    SC_METHOD(thread_p_Val2_1_2_fu_1370_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( OP1_V_reg_1459 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7 );

    SC_METHOD(thread_p_Val2_1_3_fu_1364_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( OP1_V_reg_1459 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );

    SC_METHOD(thread_p_Val2_1_4_fu_1358_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( OP1_V_reg_1459 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );

    SC_METHOD(thread_p_Val2_1_5_fu_1352_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( OP1_V_reg_1459 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_p_Val2_1_6_fu_1346_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( OP1_V_reg_1459 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_p_Val2_1_7_fu_1339_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( p_Val2_1_7_fu_1339_p10 );

    SC_METHOD(thread_p_Val2_1_7_fu_1339_p10);
    sensitive << ( tmp_12_reg_1408 );

    SC_METHOD(thread_p_Val2_1_fu_1376_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( OP1_V_reg_1459 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8 );

    SC_METHOD(thread_p_Val2_s_fu_466_p1);
    sensitive << ( min_duty );

    SC_METHOD(thread_r_V_1_fu_1064_p2);
    sensitive << ( tmp_5_cast_reg_1485 );
    sensitive << ( tmp_9_1_fu_1061_p1 );

    SC_METHOD(thread_r_V_2_fu_936_p2);
    sensitive << ( tmp_5_cast_reg_1485 );
    sensitive << ( tmp_9_2_fu_933_p1 );

    SC_METHOD(thread_r_V_3_fu_870_p2);
    sensitive << ( tmp_5_cast_reg_1485 );
    sensitive << ( tmp_9_3_fu_867_p1 );

    SC_METHOD(thread_r_V_4_fu_804_p2);
    sensitive << ( tmp_5_cast_reg_1485 );
    sensitive << ( tmp_9_4_fu_801_p1 );

    SC_METHOD(thread_r_V_5_fu_738_p2);
    sensitive << ( tmp_5_cast_reg_1485 );
    sensitive << ( tmp_9_5_fu_735_p1 );

    SC_METHOD(thread_r_V_6_fu_672_p2);
    sensitive << ( tmp_5_cast_reg_1485 );
    sensitive << ( tmp_9_6_fu_669_p1 );

    SC_METHOD(thread_r_V_7_fu_601_p2);
    sensitive << ( tmp_5_cast_fu_591_p1 );
    sensitive << ( tmp_9_7_fu_598_p1 );

    SC_METHOD(thread_r_V_fu_1003_p2);
    sensitive << ( tmp_5_cast_reg_1485 );
    sensitive << ( tmp_9_fu_1000_p1 );

    SC_METHOD(thread_ret_V_1_fu_542_p2);
    sensitive << ( ret_V_fu_514_p4 );

    SC_METHOD(thread_ret_V_fu_514_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( motorCmd_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_ret_V_fu_514_p4);
    sensitive << ( ret_V_fu_514_p1 );

    SC_METHOD(thread_test2_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage10 );

    SC_METHOD(thread_test2_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );

    SC_METHOD(thread_test2_V_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_4_7_reg_1454 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage10 );
    sensitive << ( tmp_4_6_fu_579_p1 );
    sensitive << ( tmp_4_5_fu_661_p1 );
    sensitive << ( tmp_4_4_fu_727_p1 );
    sensitive << ( tmp_4_3_fu_793_p1 );
    sensitive << ( tmp_4_2_fu_859_p1 );
    sensitive << ( tmp_4_fu_925_p1 );
    sensitive << ( tmp_4_1_fu_995_p1 );
    sensitive << ( tmp_4_8_fu_1304_p1 );

    SC_METHOD(thread_test2_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );

    SC_METHOD(thread_test_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );

    SC_METHOD(thread_test_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );

    SC_METHOD(thread_test_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( tmp_25_fu_564_p1 );
    sensitive << ( tmp_23_fu_991_p1 );
    sensitive << ( tmp_21_fu_1334_p1 );

    SC_METHOD(thread_test_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );

    SC_METHOD(thread_tmp_10_fu_1225_p2);
    sensitive << ( tmp_16_reg_1506 );
    sensitive << ( tmp_22_4_fu_1220_p2 );

    SC_METHOD(thread_tmp_11_1_fu_1077_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( tmp_60_reg_1628 );

    SC_METHOD(thread_tmp_11_2_fu_949_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_62_reg_1593 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );

    SC_METHOD(thread_tmp_11_3_fu_883_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_64_reg_1573 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );

    SC_METHOD(thread_tmp_11_4_fu_817_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_66_reg_1553 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );

    SC_METHOD(thread_tmp_11_5_fu_751_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_68_reg_1533 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );

    SC_METHOD(thread_tmp_11_6_fu_685_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_70_reg_1501 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );

    SC_METHOD(thread_tmp_11_7_fu_615_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_72_reg_1475 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_tmp_11_fu_1031_p2);
    sensitive << ( tmp_fu_1021_p4 );

    SC_METHOD(thread_tmp_12_fu_462_p1);
    sensitive << ( tmp_2_fu_456_p2 );

    SC_METHOD(thread_tmp_13_fu_488_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( acc );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( tmp_82_fu_484_p1 );

    SC_METHOD(thread_tmp_14_fu_494_p2);
    sensitive << ( acc );

    SC_METHOD(thread_tmp_15_fu_500_p3);
    sensitive << ( tmp_13_fu_488_p2 );
    sensitive << ( tmp_14_fu_494_p2 );

    SC_METHOD(thread_tmp_16_fu_652_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( p_Val2_s_reg_1413 );
    sensitive << ( acc_load_reg_1419 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_tmp_17_fu_1248_p2);
    sensitive << ( tmp_16_reg_1506 );
    sensitive << ( tmp_22_5_fu_1243_p2 );

    SC_METHOD(thread_tmp_18_fu_1271_p2);
    sensitive << ( tmp_16_reg_1506 );
    sensitive << ( tmp_22_6_fu_1266_p2 );

    SC_METHOD(thread_tmp_19_1_fu_1137_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( acc_load_reg_1419 );
    sensitive << ( tmp_31_fu_1106_p3 );

    SC_METHOD(thread_tmp_19_2_fu_986_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( acc_load_reg_1419 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( tmp_35_fu_978_p3 );

    SC_METHOD(thread_tmp_19_3_fu_920_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( acc_load_reg_1419 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( tmp_39_fu_912_p3 );

    SC_METHOD(thread_tmp_19_4_fu_854_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( acc_load_reg_1419 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( tmp_43_fu_846_p3 );

    SC_METHOD(thread_tmp_19_5_fu_788_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( acc_load_reg_1419 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( tmp_47_fu_780_p3 );

    SC_METHOD(thread_tmp_19_6_fu_722_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( acc_load_reg_1419 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( tmp_51_fu_714_p3 );

    SC_METHOD(thread_tmp_19_7_fu_656_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( acc_load_reg_1419 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( tmp_55_fu_644_p3 );

    SC_METHOD(thread_tmp_19_fu_1056_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( acc_load_reg_1419 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( tmp_27_fu_1045_p3 );

    SC_METHOD(thread_tmp_1_fu_1127_p2);
    sensitive << ( tmp_16_reg_1506 );
    sensitive << ( tmp_22_s_fu_1122_p2 );

    SC_METHOD(thread_tmp_20_fu_1294_p2);
    sensitive << ( tmp_16_reg_1506 );
    sensitive << ( tmp_22_7_fu_1289_p2 );

    SC_METHOD(thread_tmp_21_fu_1334_p1);
    sensitive << ( p_3_fu_1326_p3 );

    SC_METHOD(thread_tmp_22_1_fu_1150_p2);
    sensitive << ( tmp_75_fu_1142_p3 );
    sensitive << ( tmp_19_1_fu_1137_p2 );

    SC_METHOD(thread_tmp_22_2_fu_1174_p2);
    sensitive << ( tmp_19_2_reg_1618 );
    sensitive << ( tmp_76_fu_1166_p3 );

    SC_METHOD(thread_tmp_22_3_fu_1197_p2);
    sensitive << ( tmp_19_3_reg_1598 );
    sensitive << ( tmp_77_fu_1189_p3 );

    SC_METHOD(thread_tmp_22_4_fu_1220_p2);
    sensitive << ( tmp_19_4_reg_1578 );
    sensitive << ( tmp_78_fu_1212_p3 );

    SC_METHOD(thread_tmp_22_5_fu_1243_p2);
    sensitive << ( tmp_19_5_reg_1558 );
    sensitive << ( tmp_79_fu_1235_p3 );

    SC_METHOD(thread_tmp_22_6_fu_1266_p2);
    sensitive << ( tmp_19_6_reg_1538 );
    sensitive << ( tmp_80_fu_1258_p3 );

    SC_METHOD(thread_tmp_22_7_fu_1289_p2);
    sensitive << ( tmp_19_7_reg_1518 );
    sensitive << ( tmp_81_fu_1281_p3 );

    SC_METHOD(thread_tmp_22_fu_536_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( tmp_84_fu_532_p1 );

    SC_METHOD(thread_tmp_22_s_fu_1122_p2);
    sensitive << ( tmp_19_reg_1633 );
    sensitive << ( tmp_74_fu_1118_p1 );

    SC_METHOD(thread_tmp_23_fu_991_p1);
    sensitive << ( p_4_reg_1444 );

    SC_METHOD(thread_tmp_24_fu_478_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( acc );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( tmp_73_fu_470_p1 );

    SC_METHOD(thread_tmp_25_fu_564_p1);
    sensitive << ( icmp_fu_450_p2 );

    SC_METHOD(thread_tmp_26_fu_1037_p3);
    sensitive << ( tmp_fu_1021_p4 );
    sensitive << ( tmp_s_fu_1016_p2 );
    sensitive << ( tmp_11_fu_1031_p2 );

    SC_METHOD(thread_tmp_27_fu_1045_p3);
    sensitive << ( tmp_fu_1021_p4 );
    sensitive << ( tmp_57_fu_1008_p3 );
    sensitive << ( tmp_26_fu_1037_p3 );

    SC_METHOD(thread_tmp_28_fu_1082_p4);
    sensitive << ( r_V_1_fu_1064_p2 );

    SC_METHOD(thread_tmp_29_fu_1092_p2);
    sensitive << ( tmp_28_fu_1082_p4 );

    SC_METHOD(thread_tmp_2_fu_456_p2);
    sensitive << ( min_duty );
    sensitive << ( max_duty );

    SC_METHOD(thread_tmp_30_fu_1098_p3);
    sensitive << ( tmp_28_fu_1082_p4 );
    sensitive << ( tmp_11_1_fu_1077_p2 );
    sensitive << ( tmp_29_fu_1092_p2 );

    SC_METHOD(thread_tmp_31_fu_1106_p3);
    sensitive << ( tmp_28_fu_1082_p4 );
    sensitive << ( tmp_59_fu_1069_p3 );
    sensitive << ( tmp_30_fu_1098_p3 );

    SC_METHOD(thread_tmp_32_fu_954_p4);
    sensitive << ( r_V_2_fu_936_p2 );

    SC_METHOD(thread_tmp_33_fu_964_p2);
    sensitive << ( tmp_32_fu_954_p4 );

    SC_METHOD(thread_tmp_34_fu_970_p3);
    sensitive << ( tmp_32_fu_954_p4 );
    sensitive << ( tmp_11_2_fu_949_p2 );
    sensitive << ( tmp_33_fu_964_p2 );

    SC_METHOD(thread_tmp_35_fu_978_p3);
    sensitive << ( tmp_32_fu_954_p4 );
    sensitive << ( tmp_61_fu_941_p3 );
    sensitive << ( tmp_34_fu_970_p3 );

    SC_METHOD(thread_tmp_36_fu_888_p4);
    sensitive << ( r_V_3_fu_870_p2 );

    SC_METHOD(thread_tmp_37_fu_898_p2);
    sensitive << ( tmp_36_fu_888_p4 );

    SC_METHOD(thread_tmp_38_fu_904_p3);
    sensitive << ( tmp_36_fu_888_p4 );
    sensitive << ( tmp_11_3_fu_883_p2 );
    sensitive << ( tmp_37_fu_898_p2 );

    SC_METHOD(thread_tmp_39_fu_912_p3);
    sensitive << ( tmp_36_fu_888_p4 );
    sensitive << ( tmp_63_fu_875_p3 );
    sensitive << ( tmp_38_fu_904_p3 );

    SC_METHOD(thread_tmp_3_fu_1156_p2);
    sensitive << ( tmp_16_reg_1506 );
    sensitive << ( tmp_22_1_fu_1150_p2 );

    SC_METHOD(thread_tmp_40_fu_822_p4);
    sensitive << ( r_V_4_fu_804_p2 );

    SC_METHOD(thread_tmp_41_fu_832_p2);
    sensitive << ( tmp_40_fu_822_p4 );

    SC_METHOD(thread_tmp_42_fu_838_p3);
    sensitive << ( tmp_40_fu_822_p4 );
    sensitive << ( tmp_11_4_fu_817_p2 );
    sensitive << ( tmp_41_fu_832_p2 );

    SC_METHOD(thread_tmp_43_fu_846_p3);
    sensitive << ( tmp_40_fu_822_p4 );
    sensitive << ( tmp_65_fu_809_p3 );
    sensitive << ( tmp_42_fu_838_p3 );

    SC_METHOD(thread_tmp_44_fu_756_p4);
    sensitive << ( r_V_5_fu_738_p2 );

    SC_METHOD(thread_tmp_45_fu_766_p2);
    sensitive << ( tmp_44_fu_756_p4 );

    SC_METHOD(thread_tmp_46_fu_772_p3);
    sensitive << ( tmp_44_fu_756_p4 );
    sensitive << ( tmp_11_5_fu_751_p2 );
    sensitive << ( tmp_45_fu_766_p2 );

    SC_METHOD(thread_tmp_47_fu_780_p3);
    sensitive << ( tmp_44_fu_756_p4 );
    sensitive << ( tmp_67_fu_743_p3 );
    sensitive << ( tmp_46_fu_772_p3 );

    SC_METHOD(thread_tmp_48_fu_690_p4);
    sensitive << ( r_V_6_fu_672_p2 );

    SC_METHOD(thread_tmp_49_fu_700_p2);
    sensitive << ( tmp_48_fu_690_p4 );

    SC_METHOD(thread_tmp_4_1_fu_995_p1);
    sensitive << ( motorCmd_V_q0 );

    SC_METHOD(thread_tmp_4_2_fu_859_p1);
    sensitive << ( motorCmd_V_q0 );

    SC_METHOD(thread_tmp_4_3_fu_793_p1);
    sensitive << ( motorCmd_V_q0 );

    SC_METHOD(thread_tmp_4_4_fu_727_p1);
    sensitive << ( motorCmd_V_q0 );

    SC_METHOD(thread_tmp_4_5_fu_661_p1);
    sensitive << ( motorCmd_V_q0 );

    SC_METHOD(thread_tmp_4_6_fu_579_p1);
    sensitive << ( motorCmd_V_q0 );

    SC_METHOD(thread_tmp_4_7_fu_569_p1);
    sensitive << ( motorCmd_V_q0 );

    SC_METHOD(thread_tmp_4_8_fu_1304_p1);
    sensitive << ( p_Val2_2_reg_1398 );

    SC_METHOD(thread_tmp_4_fu_925_p1);
    sensitive << ( motorCmd_V_q0 );

    SC_METHOD(thread_tmp_50_fu_706_p3);
    sensitive << ( tmp_48_fu_690_p4 );
    sensitive << ( tmp_11_6_fu_685_p2 );
    sensitive << ( tmp_49_fu_700_p2 );

    SC_METHOD(thread_tmp_51_fu_714_p3);
    sensitive << ( tmp_48_fu_690_p4 );
    sensitive << ( tmp_69_fu_677_p3 );
    sensitive << ( tmp_50_fu_706_p3 );

    SC_METHOD(thread_tmp_52_fu_620_p4);
    sensitive << ( r_V_7_fu_601_p2 );

    SC_METHOD(thread_tmp_53_fu_630_p2);
    sensitive << ( tmp_52_fu_620_p4 );

    SC_METHOD(thread_tmp_54_fu_636_p3);
    sensitive << ( tmp_52_fu_620_p4 );
    sensitive << ( tmp_11_7_fu_615_p2 );
    sensitive << ( tmp_53_fu_630_p2 );

    SC_METHOD(thread_tmp_55_fu_644_p3);
    sensitive << ( tmp_52_fu_620_p4 );
    sensitive << ( tmp_71_fu_607_p3 );
    sensitive << ( tmp_54_fu_636_p3 );

    SC_METHOD(thread_tmp_57_fu_1008_p3);
    sensitive << ( r_V_fu_1003_p2 );

    SC_METHOD(thread_tmp_58_fu_930_p1);
    sensitive << ( p_Val2_1_fu_1376_p2 );

    SC_METHOD(thread_tmp_59_fu_1069_p3);
    sensitive << ( r_V_1_fu_1064_p2 );

    SC_METHOD(thread_tmp_5_cast_fu_591_p1);
    sensitive << ( tmp_5_fu_584_p3 );

    SC_METHOD(thread_tmp_5_fu_584_p3);
    sensitive << ( p_Val2_s_reg_1413 );

    SC_METHOD(thread_tmp_60_fu_1053_p1);
    sensitive << ( p_Val2_1_1_fu_1382_p2 );

    SC_METHOD(thread_tmp_61_fu_941_p3);
    sensitive << ( r_V_2_fu_936_p2 );

    SC_METHOD(thread_tmp_62_fu_864_p1);
    sensitive << ( p_Val2_1_2_fu_1370_p2 );

    SC_METHOD(thread_tmp_63_fu_875_p3);
    sensitive << ( r_V_3_fu_870_p2 );

    SC_METHOD(thread_tmp_64_fu_798_p1);
    sensitive << ( p_Val2_1_3_fu_1364_p2 );

    SC_METHOD(thread_tmp_65_fu_809_p3);
    sensitive << ( r_V_4_fu_804_p2 );

    SC_METHOD(thread_tmp_66_fu_732_p1);
    sensitive << ( p_Val2_1_4_fu_1358_p2 );

    SC_METHOD(thread_tmp_67_fu_743_p3);
    sensitive << ( r_V_5_fu_738_p2 );

    SC_METHOD(thread_tmp_68_fu_666_p1);
    sensitive << ( p_Val2_1_5_fu_1352_p2 );

    SC_METHOD(thread_tmp_69_fu_677_p3);
    sensitive << ( r_V_6_fu_672_p2 );

    SC_METHOD(thread_tmp_6_fu_440_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( motorCmd_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_tmp_6_fu_440_p4);
    sensitive << ( tmp_6_fu_440_p1 );

    SC_METHOD(thread_tmp_70_fu_595_p1);
    sensitive << ( p_Val2_1_6_fu_1346_p2 );

    SC_METHOD(thread_tmp_71_fu_607_p3);
    sensitive << ( r_V_7_fu_601_p2 );

    SC_METHOD(thread_tmp_72_fu_576_p1);
    sensitive << ( p_Val2_1_7_fu_1339_p2 );

    SC_METHOD(thread_tmp_73_fu_470_p1);
    sensitive << ( max_duty );

    SC_METHOD(thread_tmp_74_fu_1118_p1);
    sensitive << ( out_p_V );

    SC_METHOD(thread_tmp_75_fu_1142_p3);
    sensitive << ( out_p_V );

    SC_METHOD(thread_tmp_76_fu_1166_p3);
    sensitive << ( out_p_V );

    SC_METHOD(thread_tmp_77_fu_1189_p3);
    sensitive << ( out_p_V );

    SC_METHOD(thread_tmp_78_fu_1212_p3);
    sensitive << ( out_p_V );

    SC_METHOD(thread_tmp_79_fu_1235_p3);
    sensitive << ( out_p_V );

    SC_METHOD(thread_tmp_7_fu_1179_p2);
    sensitive << ( tmp_16_reg_1506 );
    sensitive << ( tmp_22_2_fu_1174_p2 );

    SC_METHOD(thread_tmp_80_fu_1258_p3);
    sensitive << ( out_p_V );

    SC_METHOD(thread_tmp_81_fu_1281_p3);
    sensitive << ( out_p_V );

    SC_METHOD(thread_tmp_82_fu_484_p1);
    sensitive << ( period );

    SC_METHOD(thread_tmp_83_fu_524_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( motorCmd_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_tmp_83_fu_524_p3);
    sensitive << ( tmp_83_fu_524_p1 );

    SC_METHOD(thread_tmp_84_fu_532_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( motorCmd_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_tmp_84_fu_532_p1);
    sensitive << ( tmp_84_fu_532_p0 );

    SC_METHOD(thread_tmp_8_fu_1202_p2);
    sensitive << ( tmp_16_reg_1506 );
    sensitive << ( tmp_22_3_fu_1197_p2 );

    SC_METHOD(thread_tmp_9_1_fu_1061_p1);
    sensitive << ( p_Val2_1_1_reg_1623 );

    SC_METHOD(thread_tmp_9_2_fu_933_p1);
    sensitive << ( p_Val2_1_2_reg_1588 );

    SC_METHOD(thread_tmp_9_3_fu_867_p1);
    sensitive << ( p_Val2_1_3_reg_1568 );

    SC_METHOD(thread_tmp_9_4_fu_801_p1);
    sensitive << ( p_Val2_1_4_reg_1548 );

    SC_METHOD(thread_tmp_9_5_fu_735_p1);
    sensitive << ( p_Val2_1_5_reg_1528 );

    SC_METHOD(thread_tmp_9_6_fu_669_p1);
    sensitive << ( p_Val2_1_6_reg_1496 );

    SC_METHOD(thread_tmp_9_7_fu_598_p1);
    sensitive << ( p_Val2_1_7_reg_1470 );

    SC_METHOD(thread_tmp_9_fu_1000_p1);
    sensitive << ( p_Val2_1_reg_1608 );

    SC_METHOD(thread_tmp_fu_1021_p4);
    sensitive << ( r_V_fu_1003_p2 );

    SC_METHOD(thread_tmp_s_fu_1016_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_58_reg_1613 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage10_subdone );
    sensitive << ( ap_reset_idle_pp0 );
    sensitive << ( ap_idle_pp0_1to1 );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp0_stage8_subdone );
    sensitive << ( ap_block_pp0_stage9_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    acc = "0000000000000000";
    out_p_V = "11111111";
    ap_enable_reg_pp0_iter0_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pwm_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, out_V, "(port)out_V");
    sc_trace(mVcdFile, s_axi_CTRL_AWVALID, "(port)s_axi_CTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_AWREADY, "(port)s_axi_CTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_AWADDR, "(port)s_axi_CTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_WVALID, "(port)s_axi_CTRL_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_WREADY, "(port)s_axi_CTRL_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_WDATA, "(port)s_axi_CTRL_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_WSTRB, "(port)s_axi_CTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_ARVALID, "(port)s_axi_CTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_ARREADY, "(port)s_axi_CTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_ARADDR, "(port)s_axi_CTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_RVALID, "(port)s_axi_CTRL_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_RREADY, "(port)s_axi_CTRL_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_RDATA, "(port)s_axi_CTRL_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_RRESP, "(port)s_axi_CTRL_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BVALID, "(port)s_axi_CTRL_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BREADY, "(port)s_axi_CTRL_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BRESP, "(port)s_axi_CTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, s_axi_TEST_AWVALID, "(port)s_axi_TEST_AWVALID");
    sc_trace(mVcdFile, s_axi_TEST_AWREADY, "(port)s_axi_TEST_AWREADY");
    sc_trace(mVcdFile, s_axi_TEST_AWADDR, "(port)s_axi_TEST_AWADDR");
    sc_trace(mVcdFile, s_axi_TEST_WVALID, "(port)s_axi_TEST_WVALID");
    sc_trace(mVcdFile, s_axi_TEST_WREADY, "(port)s_axi_TEST_WREADY");
    sc_trace(mVcdFile, s_axi_TEST_WDATA, "(port)s_axi_TEST_WDATA");
    sc_trace(mVcdFile, s_axi_TEST_WSTRB, "(port)s_axi_TEST_WSTRB");
    sc_trace(mVcdFile, s_axi_TEST_ARVALID, "(port)s_axi_TEST_ARVALID");
    sc_trace(mVcdFile, s_axi_TEST_ARREADY, "(port)s_axi_TEST_ARREADY");
    sc_trace(mVcdFile, s_axi_TEST_ARADDR, "(port)s_axi_TEST_ARADDR");
    sc_trace(mVcdFile, s_axi_TEST_RVALID, "(port)s_axi_TEST_RVALID");
    sc_trace(mVcdFile, s_axi_TEST_RREADY, "(port)s_axi_TEST_RREADY");
    sc_trace(mVcdFile, s_axi_TEST_RDATA, "(port)s_axi_TEST_RDATA");
    sc_trace(mVcdFile, s_axi_TEST_RRESP, "(port)s_axi_TEST_RRESP");
    sc_trace(mVcdFile, s_axi_TEST_BVALID, "(port)s_axi_TEST_BVALID");
    sc_trace(mVcdFile, s_axi_TEST_BREADY, "(port)s_axi_TEST_BREADY");
    sc_trace(mVcdFile, s_axi_TEST_BRESP, "(port)s_axi_TEST_BRESP");
    sc_trace(mVcdFile, s_axi_TEST2_AWVALID, "(port)s_axi_TEST2_AWVALID");
    sc_trace(mVcdFile, s_axi_TEST2_AWREADY, "(port)s_axi_TEST2_AWREADY");
    sc_trace(mVcdFile, s_axi_TEST2_AWADDR, "(port)s_axi_TEST2_AWADDR");
    sc_trace(mVcdFile, s_axi_TEST2_WVALID, "(port)s_axi_TEST2_WVALID");
    sc_trace(mVcdFile, s_axi_TEST2_WREADY, "(port)s_axi_TEST2_WREADY");
    sc_trace(mVcdFile, s_axi_TEST2_WDATA, "(port)s_axi_TEST2_WDATA");
    sc_trace(mVcdFile, s_axi_TEST2_WSTRB, "(port)s_axi_TEST2_WSTRB");
    sc_trace(mVcdFile, s_axi_TEST2_ARVALID, "(port)s_axi_TEST2_ARVALID");
    sc_trace(mVcdFile, s_axi_TEST2_ARREADY, "(port)s_axi_TEST2_ARREADY");
    sc_trace(mVcdFile, s_axi_TEST2_ARADDR, "(port)s_axi_TEST2_ARADDR");
    sc_trace(mVcdFile, s_axi_TEST2_RVALID, "(port)s_axi_TEST2_RVALID");
    sc_trace(mVcdFile, s_axi_TEST2_RREADY, "(port)s_axi_TEST2_RREADY");
    sc_trace(mVcdFile, s_axi_TEST2_RDATA, "(port)s_axi_TEST2_RDATA");
    sc_trace(mVcdFile, s_axi_TEST2_RRESP, "(port)s_axi_TEST2_RRESP");
    sc_trace(mVcdFile, s_axi_TEST2_BVALID, "(port)s_axi_TEST2_BVALID");
    sc_trace(mVcdFile, s_axi_TEST2_BREADY, "(port)s_axi_TEST2_BREADY");
    sc_trace(mVcdFile, s_axi_TEST2_BRESP, "(port)s_axi_TEST2_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage10, "ap_CS_fsm_pp0_stage10");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage10_iter0, "ap_block_state11_pp0_stage10_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage10_11001, "ap_block_pp0_stage10_11001");
    sc_trace(mVcdFile, motorCmd_V_address0, "motorCmd_V_address0");
    sc_trace(mVcdFile, motorCmd_V_ce0, "motorCmd_V_ce0");
    sc_trace(mVcdFile, motorCmd_V_q0, "motorCmd_V_q0");
    sc_trace(mVcdFile, min_duty, "min_duty");
    sc_trace(mVcdFile, max_duty, "max_duty");
    sc_trace(mVcdFile, period, "period");
    sc_trace(mVcdFile, test_address0, "test_address0");
    sc_trace(mVcdFile, test_ce0, "test_ce0");
    sc_trace(mVcdFile, test_we0, "test_we0");
    sc_trace(mVcdFile, test_d0, "test_d0");
    sc_trace(mVcdFile, test2_V_address0, "test2_V_address0");
    sc_trace(mVcdFile, test2_V_ce0, "test2_V_ce0");
    sc_trace(mVcdFile, test2_V_we0, "test2_V_we0");
    sc_trace(mVcdFile, test2_V_d0, "test2_V_d0");
    sc_trace(mVcdFile, acc, "acc");
    sc_trace(mVcdFile, out_p_V, "out_p_V");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter1, "ap_block_state12_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage1_iter0, "ap_block_state2_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, p_Val2_2_reg_1398, "p_Val2_2_reg_1398");
    sc_trace(mVcdFile, icmp_fu_450_p2, "icmp_fu_450_p2");
    sc_trace(mVcdFile, icmp_reg_1403, "icmp_reg_1403");
    sc_trace(mVcdFile, tmp_12_fu_462_p1, "tmp_12_fu_462_p1");
    sc_trace(mVcdFile, tmp_12_reg_1408, "tmp_12_reg_1408");
    sc_trace(mVcdFile, p_Val2_s_fu_466_p1, "p_Val2_s_fu_466_p1");
    sc_trace(mVcdFile, p_Val2_s_reg_1413, "p_Val2_s_reg_1413");
    sc_trace(mVcdFile, acc_load_reg_1419, "acc_load_reg_1419");
    sc_trace(mVcdFile, tmp_24_fu_478_p2, "tmp_24_fu_478_p2");
    sc_trace(mVcdFile, tmp_24_reg_1432, "tmp_24_reg_1432");
    sc_trace(mVcdFile, p_4_fu_556_p3, "p_4_fu_556_p3");
    sc_trace(mVcdFile, p_4_reg_1444, "p_4_reg_1444");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage2_iter0, "ap_block_state3_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, tmp_4_7_fu_569_p1, "tmp_4_7_fu_569_p1");
    sc_trace(mVcdFile, tmp_4_7_reg_1454, "tmp_4_7_reg_1454");
    sc_trace(mVcdFile, OP1_V_fu_573_p1, "OP1_V_fu_573_p1");
    sc_trace(mVcdFile, OP1_V_reg_1459, "OP1_V_reg_1459");
    sc_trace(mVcdFile, p_Val2_1_7_fu_1339_p2, "p_Val2_1_7_fu_1339_p2");
    sc_trace(mVcdFile, p_Val2_1_7_reg_1470, "p_Val2_1_7_reg_1470");
    sc_trace(mVcdFile, tmp_72_fu_576_p1, "tmp_72_fu_576_p1");
    sc_trace(mVcdFile, tmp_72_reg_1475, "tmp_72_reg_1475");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage3_iter0, "ap_block_state4_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, tmp_5_cast_fu_591_p1, "tmp_5_cast_fu_591_p1");
    sc_trace(mVcdFile, tmp_5_cast_reg_1485, "tmp_5_cast_reg_1485");
    sc_trace(mVcdFile, p_Val2_1_6_fu_1346_p2, "p_Val2_1_6_fu_1346_p2");
    sc_trace(mVcdFile, p_Val2_1_6_reg_1496, "p_Val2_1_6_reg_1496");
    sc_trace(mVcdFile, tmp_70_fu_595_p1, "tmp_70_fu_595_p1");
    sc_trace(mVcdFile, tmp_70_reg_1501, "tmp_70_reg_1501");
    sc_trace(mVcdFile, tmp_16_fu_652_p2, "tmp_16_fu_652_p2");
    sc_trace(mVcdFile, tmp_16_reg_1506, "tmp_16_reg_1506");
    sc_trace(mVcdFile, tmp_19_7_fu_656_p2, "tmp_19_7_fu_656_p2");
    sc_trace(mVcdFile, tmp_19_7_reg_1518, "tmp_19_7_reg_1518");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage4_iter0, "ap_block_state5_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, p_Val2_1_5_fu_1352_p2, "p_Val2_1_5_fu_1352_p2");
    sc_trace(mVcdFile, p_Val2_1_5_reg_1528, "p_Val2_1_5_reg_1528");
    sc_trace(mVcdFile, tmp_68_fu_666_p1, "tmp_68_fu_666_p1");
    sc_trace(mVcdFile, tmp_68_reg_1533, "tmp_68_reg_1533");
    sc_trace(mVcdFile, tmp_19_6_fu_722_p2, "tmp_19_6_fu_722_p2");
    sc_trace(mVcdFile, tmp_19_6_reg_1538, "tmp_19_6_reg_1538");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage5_iter0, "ap_block_state6_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage5_11001, "ap_block_pp0_stage5_11001");
    sc_trace(mVcdFile, p_Val2_1_4_fu_1358_p2, "p_Val2_1_4_fu_1358_p2");
    sc_trace(mVcdFile, p_Val2_1_4_reg_1548, "p_Val2_1_4_reg_1548");
    sc_trace(mVcdFile, tmp_66_fu_732_p1, "tmp_66_fu_732_p1");
    sc_trace(mVcdFile, tmp_66_reg_1553, "tmp_66_reg_1553");
    sc_trace(mVcdFile, tmp_19_5_fu_788_p2, "tmp_19_5_fu_788_p2");
    sc_trace(mVcdFile, tmp_19_5_reg_1558, "tmp_19_5_reg_1558");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage6_iter0, "ap_block_state7_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_11001, "ap_block_pp0_stage6_11001");
    sc_trace(mVcdFile, p_Val2_1_3_fu_1364_p2, "p_Val2_1_3_fu_1364_p2");
    sc_trace(mVcdFile, p_Val2_1_3_reg_1568, "p_Val2_1_3_reg_1568");
    sc_trace(mVcdFile, tmp_64_fu_798_p1, "tmp_64_fu_798_p1");
    sc_trace(mVcdFile, tmp_64_reg_1573, "tmp_64_reg_1573");
    sc_trace(mVcdFile, tmp_19_4_fu_854_p2, "tmp_19_4_fu_854_p2");
    sc_trace(mVcdFile, tmp_19_4_reg_1578, "tmp_19_4_reg_1578");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage7_iter0, "ap_block_state8_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage7_11001, "ap_block_pp0_stage7_11001");
    sc_trace(mVcdFile, p_Val2_1_2_fu_1370_p2, "p_Val2_1_2_fu_1370_p2");
    sc_trace(mVcdFile, p_Val2_1_2_reg_1588, "p_Val2_1_2_reg_1588");
    sc_trace(mVcdFile, tmp_62_fu_864_p1, "tmp_62_fu_864_p1");
    sc_trace(mVcdFile, tmp_62_reg_1593, "tmp_62_reg_1593");
    sc_trace(mVcdFile, tmp_19_3_fu_920_p2, "tmp_19_3_fu_920_p2");
    sc_trace(mVcdFile, tmp_19_3_reg_1598, "tmp_19_3_reg_1598");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage8, "ap_CS_fsm_pp0_stage8");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage8_iter0, "ap_block_state9_pp0_stage8_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage8_11001, "ap_block_pp0_stage8_11001");
    sc_trace(mVcdFile, p_Val2_1_fu_1376_p2, "p_Val2_1_fu_1376_p2");
    sc_trace(mVcdFile, p_Val2_1_reg_1608, "p_Val2_1_reg_1608");
    sc_trace(mVcdFile, tmp_58_fu_930_p1, "tmp_58_fu_930_p1");
    sc_trace(mVcdFile, tmp_58_reg_1613, "tmp_58_reg_1613");
    sc_trace(mVcdFile, tmp_19_2_fu_986_p2, "tmp_19_2_fu_986_p2");
    sc_trace(mVcdFile, tmp_19_2_reg_1618, "tmp_19_2_reg_1618");
    sc_trace(mVcdFile, p_Val2_1_1_fu_1382_p2, "p_Val2_1_1_fu_1382_p2");
    sc_trace(mVcdFile, p_Val2_1_1_reg_1623, "p_Val2_1_1_reg_1623");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage9, "ap_CS_fsm_pp0_stage9");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage9_iter0, "ap_block_state10_pp0_stage9_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage9_11001, "ap_block_pp0_stage9_11001");
    sc_trace(mVcdFile, tmp_60_fu_1053_p1, "tmp_60_fu_1053_p1");
    sc_trace(mVcdFile, tmp_60_reg_1628, "tmp_60_reg_1628");
    sc_trace(mVcdFile, tmp_19_fu_1056_p2, "tmp_19_fu_1056_p2");
    sc_trace(mVcdFile, tmp_19_reg_1633, "tmp_19_reg_1633");
    sc_trace(mVcdFile, p_Repl2_0_trunc_fu_1132_p2, "p_Repl2_0_trunc_fu_1132_p2");
    sc_trace(mVcdFile, p_Repl2_0_trunc_reg_1638, "p_Repl2_0_trunc_reg_1638");
    sc_trace(mVcdFile, p_Repl2_1_trunc_fu_1161_p2, "p_Repl2_1_trunc_fu_1161_p2");
    sc_trace(mVcdFile, p_Repl2_1_trunc_reg_1643, "p_Repl2_1_trunc_reg_1643");
    sc_trace(mVcdFile, p_Repl2_2_trunc_fu_1184_p2, "p_Repl2_2_trunc_fu_1184_p2");
    sc_trace(mVcdFile, p_Repl2_2_trunc_reg_1648, "p_Repl2_2_trunc_reg_1648");
    sc_trace(mVcdFile, p_Repl2_3_trunc_fu_1207_p2, "p_Repl2_3_trunc_fu_1207_p2");
    sc_trace(mVcdFile, p_Repl2_3_trunc_reg_1653, "p_Repl2_3_trunc_reg_1653");
    sc_trace(mVcdFile, p_Repl2_4_trunc_fu_1230_p2, "p_Repl2_4_trunc_fu_1230_p2");
    sc_trace(mVcdFile, p_Repl2_4_trunc_reg_1658, "p_Repl2_4_trunc_reg_1658");
    sc_trace(mVcdFile, p_Repl2_5_trunc_fu_1253_p2, "p_Repl2_5_trunc_fu_1253_p2");
    sc_trace(mVcdFile, p_Repl2_5_trunc_reg_1663, "p_Repl2_5_trunc_reg_1663");
    sc_trace(mVcdFile, p_Repl2_6_trunc_fu_1276_p2, "p_Repl2_6_trunc_fu_1276_p2");
    sc_trace(mVcdFile, p_Repl2_6_trunc_reg_1668, "p_Repl2_6_trunc_reg_1668");
    sc_trace(mVcdFile, p_Repl2_7_trunc_fu_1299_p2, "p_Repl2_7_trunc_fu_1299_p2");
    sc_trace(mVcdFile, p_Repl2_7_trunc_reg_1673, "p_Repl2_7_trunc_reg_1673");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0_reg, "ap_enable_reg_pp0_iter0_reg");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage10_subdone, "ap_block_pp0_stage10_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, ap_block_pp0_stage5, "ap_block_pp0_stage5");
    sc_trace(mVcdFile, ap_block_pp0_stage6, "ap_block_pp0_stage6");
    sc_trace(mVcdFile, ap_block_pp0_stage7, "ap_block_pp0_stage7");
    sc_trace(mVcdFile, ap_block_pp0_stage8, "ap_block_pp0_stage8");
    sc_trace(mVcdFile, ap_block_pp0_stage9, "ap_block_pp0_stage9");
    sc_trace(mVcdFile, ap_block_pp0_stage10, "ap_block_pp0_stage10");
    sc_trace(mVcdFile, tmp_15_fu_500_p3, "tmp_15_fu_500_p3");
    sc_trace(mVcdFile, p_Result_4_7_fu_1308_p9, "p_Result_4_7_fu_1308_p9");
    sc_trace(mVcdFile, p_3_fu_1326_p3, "p_3_fu_1326_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_4_6_fu_579_p1, "tmp_4_6_fu_579_p1");
    sc_trace(mVcdFile, tmp_4_5_fu_661_p1, "tmp_4_5_fu_661_p1");
    sc_trace(mVcdFile, tmp_4_4_fu_727_p1, "tmp_4_4_fu_727_p1");
    sc_trace(mVcdFile, tmp_4_3_fu_793_p1, "tmp_4_3_fu_793_p1");
    sc_trace(mVcdFile, tmp_4_2_fu_859_p1, "tmp_4_2_fu_859_p1");
    sc_trace(mVcdFile, tmp_4_fu_925_p1, "tmp_4_fu_925_p1");
    sc_trace(mVcdFile, tmp_4_1_fu_995_p1, "tmp_4_1_fu_995_p1");
    sc_trace(mVcdFile, tmp_4_8_fu_1304_p1, "tmp_4_8_fu_1304_p1");
    sc_trace(mVcdFile, tmp_25_fu_564_p1, "tmp_25_fu_564_p1");
    sc_trace(mVcdFile, tmp_23_fu_991_p1, "tmp_23_fu_991_p1");
    sc_trace(mVcdFile, tmp_21_fu_1334_p1, "tmp_21_fu_1334_p1");
    sc_trace(mVcdFile, tmp_6_fu_440_p1, "tmp_6_fu_440_p1");
    sc_trace(mVcdFile, tmp_6_fu_440_p4, "tmp_6_fu_440_p4");
    sc_trace(mVcdFile, tmp_2_fu_456_p2, "tmp_2_fu_456_p2");
    sc_trace(mVcdFile, tmp_73_fu_470_p1, "tmp_73_fu_470_p1");
    sc_trace(mVcdFile, tmp_82_fu_484_p1, "tmp_82_fu_484_p1");
    sc_trace(mVcdFile, tmp_13_fu_488_p2, "tmp_13_fu_488_p2");
    sc_trace(mVcdFile, tmp_14_fu_494_p2, "tmp_14_fu_494_p2");
    sc_trace(mVcdFile, ret_V_fu_514_p1, "ret_V_fu_514_p1");
    sc_trace(mVcdFile, tmp_83_fu_524_p1, "tmp_83_fu_524_p1");
    sc_trace(mVcdFile, tmp_84_fu_532_p0, "tmp_84_fu_532_p0");
    sc_trace(mVcdFile, tmp_84_fu_532_p1, "tmp_84_fu_532_p1");
    sc_trace(mVcdFile, ret_V_fu_514_p4, "ret_V_fu_514_p4");
    sc_trace(mVcdFile, tmp_22_fu_536_p2, "tmp_22_fu_536_p2");
    sc_trace(mVcdFile, ret_V_1_fu_542_p2, "ret_V_1_fu_542_p2");
    sc_trace(mVcdFile, tmp_83_fu_524_p3, "tmp_83_fu_524_p3");
    sc_trace(mVcdFile, p_2_fu_548_p3, "p_2_fu_548_p3");
    sc_trace(mVcdFile, tmp_5_fu_584_p3, "tmp_5_fu_584_p3");
    sc_trace(mVcdFile, tmp_9_7_fu_598_p1, "tmp_9_7_fu_598_p1");
    sc_trace(mVcdFile, r_V_7_fu_601_p2, "r_V_7_fu_601_p2");
    sc_trace(mVcdFile, tmp_52_fu_620_p4, "tmp_52_fu_620_p4");
    sc_trace(mVcdFile, tmp_11_7_fu_615_p2, "tmp_11_7_fu_615_p2");
    sc_trace(mVcdFile, tmp_53_fu_630_p2, "tmp_53_fu_630_p2");
    sc_trace(mVcdFile, tmp_71_fu_607_p3, "tmp_71_fu_607_p3");
    sc_trace(mVcdFile, tmp_54_fu_636_p3, "tmp_54_fu_636_p3");
    sc_trace(mVcdFile, tmp_55_fu_644_p3, "tmp_55_fu_644_p3");
    sc_trace(mVcdFile, tmp_9_6_fu_669_p1, "tmp_9_6_fu_669_p1");
    sc_trace(mVcdFile, r_V_6_fu_672_p2, "r_V_6_fu_672_p2");
    sc_trace(mVcdFile, tmp_48_fu_690_p4, "tmp_48_fu_690_p4");
    sc_trace(mVcdFile, tmp_11_6_fu_685_p2, "tmp_11_6_fu_685_p2");
    sc_trace(mVcdFile, tmp_49_fu_700_p2, "tmp_49_fu_700_p2");
    sc_trace(mVcdFile, tmp_69_fu_677_p3, "tmp_69_fu_677_p3");
    sc_trace(mVcdFile, tmp_50_fu_706_p3, "tmp_50_fu_706_p3");
    sc_trace(mVcdFile, tmp_51_fu_714_p3, "tmp_51_fu_714_p3");
    sc_trace(mVcdFile, tmp_9_5_fu_735_p1, "tmp_9_5_fu_735_p1");
    sc_trace(mVcdFile, r_V_5_fu_738_p2, "r_V_5_fu_738_p2");
    sc_trace(mVcdFile, tmp_44_fu_756_p4, "tmp_44_fu_756_p4");
    sc_trace(mVcdFile, tmp_11_5_fu_751_p2, "tmp_11_5_fu_751_p2");
    sc_trace(mVcdFile, tmp_45_fu_766_p2, "tmp_45_fu_766_p2");
    sc_trace(mVcdFile, tmp_67_fu_743_p3, "tmp_67_fu_743_p3");
    sc_trace(mVcdFile, tmp_46_fu_772_p3, "tmp_46_fu_772_p3");
    sc_trace(mVcdFile, tmp_47_fu_780_p3, "tmp_47_fu_780_p3");
    sc_trace(mVcdFile, tmp_9_4_fu_801_p1, "tmp_9_4_fu_801_p1");
    sc_trace(mVcdFile, r_V_4_fu_804_p2, "r_V_4_fu_804_p2");
    sc_trace(mVcdFile, tmp_40_fu_822_p4, "tmp_40_fu_822_p4");
    sc_trace(mVcdFile, tmp_11_4_fu_817_p2, "tmp_11_4_fu_817_p2");
    sc_trace(mVcdFile, tmp_41_fu_832_p2, "tmp_41_fu_832_p2");
    sc_trace(mVcdFile, tmp_65_fu_809_p3, "tmp_65_fu_809_p3");
    sc_trace(mVcdFile, tmp_42_fu_838_p3, "tmp_42_fu_838_p3");
    sc_trace(mVcdFile, tmp_43_fu_846_p3, "tmp_43_fu_846_p3");
    sc_trace(mVcdFile, tmp_9_3_fu_867_p1, "tmp_9_3_fu_867_p1");
    sc_trace(mVcdFile, r_V_3_fu_870_p2, "r_V_3_fu_870_p2");
    sc_trace(mVcdFile, tmp_36_fu_888_p4, "tmp_36_fu_888_p4");
    sc_trace(mVcdFile, tmp_11_3_fu_883_p2, "tmp_11_3_fu_883_p2");
    sc_trace(mVcdFile, tmp_37_fu_898_p2, "tmp_37_fu_898_p2");
    sc_trace(mVcdFile, tmp_63_fu_875_p3, "tmp_63_fu_875_p3");
    sc_trace(mVcdFile, tmp_38_fu_904_p3, "tmp_38_fu_904_p3");
    sc_trace(mVcdFile, tmp_39_fu_912_p3, "tmp_39_fu_912_p3");
    sc_trace(mVcdFile, tmp_9_2_fu_933_p1, "tmp_9_2_fu_933_p1");
    sc_trace(mVcdFile, r_V_2_fu_936_p2, "r_V_2_fu_936_p2");
    sc_trace(mVcdFile, tmp_32_fu_954_p4, "tmp_32_fu_954_p4");
    sc_trace(mVcdFile, tmp_11_2_fu_949_p2, "tmp_11_2_fu_949_p2");
    sc_trace(mVcdFile, tmp_33_fu_964_p2, "tmp_33_fu_964_p2");
    sc_trace(mVcdFile, tmp_61_fu_941_p3, "tmp_61_fu_941_p3");
    sc_trace(mVcdFile, tmp_34_fu_970_p3, "tmp_34_fu_970_p3");
    sc_trace(mVcdFile, tmp_35_fu_978_p3, "tmp_35_fu_978_p3");
    sc_trace(mVcdFile, tmp_9_fu_1000_p1, "tmp_9_fu_1000_p1");
    sc_trace(mVcdFile, r_V_fu_1003_p2, "r_V_fu_1003_p2");
    sc_trace(mVcdFile, tmp_fu_1021_p4, "tmp_fu_1021_p4");
    sc_trace(mVcdFile, tmp_s_fu_1016_p2, "tmp_s_fu_1016_p2");
    sc_trace(mVcdFile, tmp_11_fu_1031_p2, "tmp_11_fu_1031_p2");
    sc_trace(mVcdFile, tmp_57_fu_1008_p3, "tmp_57_fu_1008_p3");
    sc_trace(mVcdFile, tmp_26_fu_1037_p3, "tmp_26_fu_1037_p3");
    sc_trace(mVcdFile, tmp_27_fu_1045_p3, "tmp_27_fu_1045_p3");
    sc_trace(mVcdFile, tmp_9_1_fu_1061_p1, "tmp_9_1_fu_1061_p1");
    sc_trace(mVcdFile, r_V_1_fu_1064_p2, "r_V_1_fu_1064_p2");
    sc_trace(mVcdFile, tmp_28_fu_1082_p4, "tmp_28_fu_1082_p4");
    sc_trace(mVcdFile, tmp_11_1_fu_1077_p2, "tmp_11_1_fu_1077_p2");
    sc_trace(mVcdFile, tmp_29_fu_1092_p2, "tmp_29_fu_1092_p2");
    sc_trace(mVcdFile, tmp_59_fu_1069_p3, "tmp_59_fu_1069_p3");
    sc_trace(mVcdFile, tmp_30_fu_1098_p3, "tmp_30_fu_1098_p3");
    sc_trace(mVcdFile, tmp_74_fu_1118_p1, "tmp_74_fu_1118_p1");
    sc_trace(mVcdFile, tmp_22_s_fu_1122_p2, "tmp_22_s_fu_1122_p2");
    sc_trace(mVcdFile, tmp_1_fu_1127_p2, "tmp_1_fu_1127_p2");
    sc_trace(mVcdFile, tmp_31_fu_1106_p3, "tmp_31_fu_1106_p3");
    sc_trace(mVcdFile, tmp_75_fu_1142_p3, "tmp_75_fu_1142_p3");
    sc_trace(mVcdFile, tmp_19_1_fu_1137_p2, "tmp_19_1_fu_1137_p2");
    sc_trace(mVcdFile, tmp_22_1_fu_1150_p2, "tmp_22_1_fu_1150_p2");
    sc_trace(mVcdFile, tmp_3_fu_1156_p2, "tmp_3_fu_1156_p2");
    sc_trace(mVcdFile, tmp_76_fu_1166_p3, "tmp_76_fu_1166_p3");
    sc_trace(mVcdFile, tmp_22_2_fu_1174_p2, "tmp_22_2_fu_1174_p2");
    sc_trace(mVcdFile, tmp_7_fu_1179_p2, "tmp_7_fu_1179_p2");
    sc_trace(mVcdFile, tmp_77_fu_1189_p3, "tmp_77_fu_1189_p3");
    sc_trace(mVcdFile, tmp_22_3_fu_1197_p2, "tmp_22_3_fu_1197_p2");
    sc_trace(mVcdFile, tmp_8_fu_1202_p2, "tmp_8_fu_1202_p2");
    sc_trace(mVcdFile, tmp_78_fu_1212_p3, "tmp_78_fu_1212_p3");
    sc_trace(mVcdFile, tmp_22_4_fu_1220_p2, "tmp_22_4_fu_1220_p2");
    sc_trace(mVcdFile, tmp_10_fu_1225_p2, "tmp_10_fu_1225_p2");
    sc_trace(mVcdFile, tmp_79_fu_1235_p3, "tmp_79_fu_1235_p3");
    sc_trace(mVcdFile, tmp_22_5_fu_1243_p2, "tmp_22_5_fu_1243_p2");
    sc_trace(mVcdFile, tmp_17_fu_1248_p2, "tmp_17_fu_1248_p2");
    sc_trace(mVcdFile, tmp_80_fu_1258_p3, "tmp_80_fu_1258_p3");
    sc_trace(mVcdFile, tmp_22_6_fu_1266_p2, "tmp_22_6_fu_1266_p2");
    sc_trace(mVcdFile, tmp_18_fu_1271_p2, "tmp_18_fu_1271_p2");
    sc_trace(mVcdFile, tmp_81_fu_1281_p3, "tmp_81_fu_1281_p3");
    sc_trace(mVcdFile, tmp_22_7_fu_1289_p2, "tmp_22_7_fu_1289_p2");
    sc_trace(mVcdFile, tmp_20_fu_1294_p2, "tmp_20_fu_1294_p2");
    sc_trace(mVcdFile, p_Val2_1_7_fu_1339_p1, "p_Val2_1_7_fu_1339_p1");
    sc_trace(mVcdFile, p_Val2_1_6_fu_1346_p1, "p_Val2_1_6_fu_1346_p1");
    sc_trace(mVcdFile, p_Val2_1_5_fu_1352_p1, "p_Val2_1_5_fu_1352_p1");
    sc_trace(mVcdFile, p_Val2_1_4_fu_1358_p1, "p_Val2_1_4_fu_1358_p1");
    sc_trace(mVcdFile, p_Val2_1_3_fu_1364_p1, "p_Val2_1_3_fu_1364_p1");
    sc_trace(mVcdFile, p_Val2_1_2_fu_1370_p1, "p_Val2_1_2_fu_1370_p1");
    sc_trace(mVcdFile, p_Val2_1_fu_1376_p1, "p_Val2_1_fu_1376_p1");
    sc_trace(mVcdFile, p_Val2_1_1_fu_1382_p1, "p_Val2_1_1_fu_1382_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_idle_pp0_1to1, "ap_idle_pp0_1to1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage8_subdone, "ap_block_pp0_stage8_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage9_subdone, "ap_block_pp0_stage9_subdone");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, p_Val2_1_7_fu_1339_p10, "p_Val2_1_7_fu_1339_p10");
#endif

    }
    mHdltvinHandle.open("pwm.hdltvin.dat");
    mHdltvoutHandle.open("pwm.hdltvout.dat");
}

pwm::~pwm() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete pwm_CTRL_s_axi_U;
    delete pwm_TEST_s_axi_U;
    delete pwm_TEST2_s_axi_U;
    delete pwm_mul_mul_16s_1bkb_U1;
    delete pwm_mul_mul_16s_1bkb_U2;
    delete pwm_mul_mul_16s_1bkb_U3;
    delete pwm_mul_mul_16s_1bkb_U4;
    delete pwm_mul_mul_16s_1bkb_U5;
    delete pwm_mul_mul_16s_1bkb_U6;
    delete pwm_mul_mul_16s_1bkb_U7;
    delete pwm_mul_mul_16s_1bkb_U8;
}

void pwm::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void pwm::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())) {
            ap_enable_reg_pp0_iter0_reg = ap_start.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage10_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
                    esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        OP1_V_reg_1459 = OP1_V_fu_573_p1.read();
        p_Val2_1_7_reg_1470 = p_Val2_1_7_fu_1339_p2.read();
        tmp_4_7_reg_1454 = tmp_4_7_fu_569_p1.read();
        tmp_72_reg_1475 = tmp_72_fu_576_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        acc = tmp_15_fu_500_p3.read();
        p_Val2_2_reg_1398 = motorCmd_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        acc_load_reg_1419 = acc.read();
        icmp_reg_1403 = icmp_fu_450_p2.read();
        p_4_reg_1444 = p_4_fu_556_p3.read();
        p_Val2_s_reg_1413 = p_Val2_s_fu_466_p1.read();
        tmp_12_reg_1408 = tmp_12_fu_462_p1.read();
        tmp_24_reg_1432 = tmp_24_fu_478_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        out_p_V = p_Result_4_7_fu_1308_p9.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0))) {
        p_Repl2_0_trunc_reg_1638 = p_Repl2_0_trunc_fu_1132_p2.read();
        p_Repl2_1_trunc_reg_1643 = p_Repl2_1_trunc_fu_1161_p2.read();
        p_Repl2_2_trunc_reg_1648 = p_Repl2_2_trunc_fu_1184_p2.read();
        p_Repl2_3_trunc_reg_1653 = p_Repl2_3_trunc_fu_1207_p2.read();
        p_Repl2_4_trunc_reg_1658 = p_Repl2_4_trunc_fu_1230_p2.read();
        p_Repl2_5_trunc_reg_1663 = p_Repl2_5_trunc_fu_1253_p2.read();
        p_Repl2_6_trunc_reg_1668 = p_Repl2_6_trunc_fu_1276_p2.read();
        p_Repl2_7_trunc_reg_1673 = p_Repl2_7_trunc_fu_1299_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0))) {
        p_Val2_1_1_reg_1623 = p_Val2_1_1_fu_1382_p2.read();
        tmp_19_reg_1633 = tmp_19_fu_1056_p2.read();
        tmp_60_reg_1628 = tmp_60_fu_1053_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        p_Val2_1_2_reg_1588 = p_Val2_1_2_fu_1370_p2.read();
        tmp_19_3_reg_1598 = tmp_19_3_fu_920_p2.read();
        tmp_62_reg_1593 = tmp_62_fu_864_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0))) {
        p_Val2_1_3_reg_1568 = p_Val2_1_3_fu_1364_p2.read();
        tmp_19_4_reg_1578 = tmp_19_4_fu_854_p2.read();
        tmp_64_reg_1573 = tmp_64_fu_798_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
        p_Val2_1_4_reg_1548 = p_Val2_1_4_fu_1358_p2.read();
        tmp_19_5_reg_1558 = tmp_19_5_fu_788_p2.read();
        tmp_66_reg_1553 = tmp_66_fu_732_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        p_Val2_1_5_reg_1528 = p_Val2_1_5_fu_1352_p2.read();
        tmp_19_6_reg_1538 = tmp_19_6_fu_722_p2.read();
        tmp_68_reg_1533 = tmp_68_fu_666_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        p_Val2_1_6_reg_1496 = p_Val2_1_6_fu_1346_p2.read();
        tmp_16_reg_1506 = tmp_16_fu_652_p2.read();
        tmp_19_7_reg_1518 = tmp_19_7_fu_656_p2.read();
        tmp_5_cast_reg_1485 = tmp_5_cast_fu_591_p1.read();
        tmp_70_reg_1501 = tmp_70_fu_595_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0))) {
        p_Val2_1_reg_1608 = p_Val2_1_fu_1376_p2.read();
        tmp_19_2_reg_1618 = tmp_19_2_fu_986_p2.read();
        tmp_58_reg_1613 = tmp_58_fu_930_p1.read();
    }
}

void pwm::thread_OP1_V_fu_573_p1() {
    OP1_V_fu_573_p1 = esl_zext<32,16>(tmp_12_reg_1408.read());
}

void pwm::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void pwm::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[1];
}

void pwm::thread_ap_CS_fsm_pp0_stage10() {
    ap_CS_fsm_pp0_stage10 = ap_CS_fsm.read()[10];
}

void pwm::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[2];
}

void pwm::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[3];
}

void pwm::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[4];
}

void pwm::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[5];
}

void pwm::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[6];
}

void pwm::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[7];
}

void pwm::thread_ap_CS_fsm_pp0_stage8() {
    ap_CS_fsm_pp0_stage8 = ap_CS_fsm.read()[8];
}

void pwm::thread_ap_CS_fsm_pp0_stage9() {
    ap_CS_fsm_pp0_stage9 = ap_CS_fsm.read()[9];
}

void pwm::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()));
}

void pwm::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()));
}

void pwm::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()));
}

void pwm::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage10() {
    ap_block_pp0_stage10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage10_11001() {
    ap_block_pp0_stage10_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage10_subdone() {
    ap_block_pp0_stage10_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage5() {
    ap_block_pp0_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage5_11001() {
    ap_block_pp0_stage5_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage6() {
    ap_block_pp0_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage6_11001() {
    ap_block_pp0_stage6_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage7() {
    ap_block_pp0_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage7_11001() {
    ap_block_pp0_stage7_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage8() {
    ap_block_pp0_stage8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage8_11001() {
    ap_block_pp0_stage8_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage8_subdone() {
    ap_block_pp0_stage8_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage9() {
    ap_block_pp0_stage9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage9_11001() {
    ap_block_pp0_stage9_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_pp0_stage9_subdone() {
    ap_block_pp0_stage9_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_state10_pp0_stage9_iter0() {
    ap_block_state10_pp0_stage9_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_state11_pp0_stage10_iter0() {
    ap_block_state11_pp0_stage10_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_state12_pp0_stage0_iter1() {
    ap_block_state12_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0);
}

void pwm::thread_ap_block_state2_pp0_stage1_iter0() {
    ap_block_state2_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_state3_pp0_stage2_iter0() {
    ap_block_state3_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_state4_pp0_stage3_iter0() {
    ap_block_state4_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_state5_pp0_stage4_iter0() {
    ap_block_state5_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_state6_pp0_stage5_iter0() {
    ap_block_state6_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_state7_pp0_stage6_iter0() {
    ap_block_state7_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_state8_pp0_stage7_iter0() {
    ap_block_state8_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_block_state9_pp0_stage8_iter0() {
    ap_block_state9_pp0_stage8_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pwm::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pwm::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void pwm::thread_ap_enable_reg_pp0_iter0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())) {
        ap_enable_reg_pp0_iter0 = ap_start.read();
    } else {
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg.read();
    }
}

void pwm::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pwm::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void pwm::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void pwm::thread_ap_idle_pp0_1to1() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read())) {
        ap_idle_pp0_1to1 = ap_const_logic_1;
    } else {
        ap_idle_pp0_1to1 = ap_const_logic_0;
    }
}

void pwm::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pwm::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void pwm::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void pwm::thread_icmp_fu_450_p2() {
    icmp_fu_450_p2 = (!tmp_6_fu_440_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): (sc_bigint<4>(tmp_6_fu_440_p4.read()) > sc_bigint<4>(ap_const_lv4_0));
}

void pwm::thread_motorCmd_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
            motorCmd_V_address0 =  (sc_lv<4>) (ap_const_lv64_1);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
            motorCmd_V_address0 =  (sc_lv<4>) (ap_const_lv64_0);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
            motorCmd_V_address0 =  (sc_lv<4>) (ap_const_lv64_2);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
            motorCmd_V_address0 =  (sc_lv<4>) (ap_const_lv64_3);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            motorCmd_V_address0 =  (sc_lv<4>) (ap_const_lv64_4);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            motorCmd_V_address0 =  (sc_lv<4>) (ap_const_lv64_5);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            motorCmd_V_address0 =  (sc_lv<4>) (ap_const_lv64_6);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            motorCmd_V_address0 =  (sc_lv<4>) (ap_const_lv64_7);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            motorCmd_V_address0 =  (sc_lv<4>) (ap_const_lv64_8);
        } else {
            motorCmd_V_address0 = "XXXX";
        }
    } else {
        motorCmd_V_address0 = "XXXX";
    }
}

void pwm::thread_motorCmd_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)))) {
        motorCmd_V_ce0 = ap_const_logic_1;
    } else {
        motorCmd_V_ce0 = ap_const_logic_0;
    }
}

void pwm::thread_out_V() {
    out_V = p_3_fu_1326_p3.read();
}

void pwm::thread_p_2_fu_548_p3() {
    p_2_fu_548_p3 = (!tmp_22_fu_536_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_22_fu_536_p2.read()[0].to_bool())? ret_V_fu_514_p4.read(): ret_V_1_fu_542_p2.read());
}

void pwm::thread_p_3_fu_1326_p3() {
    p_3_fu_1326_p3 = (!icmp_reg_1403.read()[0].is_01())? sc_lv<8>(): ((icmp_reg_1403.read()[0].to_bool())? p_Result_4_7_fu_1308_p9.read(): ap_const_lv8_0);
}

void pwm::thread_p_4_fu_556_p3() {
    p_4_fu_556_p3 = (!tmp_83_fu_524_p3.read()[0].is_01())? sc_lv<3>(): ((tmp_83_fu_524_p3.read()[0].to_bool())? p_2_fu_548_p3.read(): ret_V_fu_514_p4.read());
}

void pwm::thread_p_Repl2_0_trunc_fu_1132_p2() {
    p_Repl2_0_trunc_fu_1132_p2 = (tmp_1_fu_1127_p2.read() & tmp_24_reg_1432.read());
}

void pwm::thread_p_Repl2_1_trunc_fu_1161_p2() {
    p_Repl2_1_trunc_fu_1161_p2 = (tmp_3_fu_1156_p2.read() & tmp_24_reg_1432.read());
}

void pwm::thread_p_Repl2_2_trunc_fu_1184_p2() {
    p_Repl2_2_trunc_fu_1184_p2 = (tmp_7_fu_1179_p2.read() & tmp_24_reg_1432.read());
}

void pwm::thread_p_Repl2_3_trunc_fu_1207_p2() {
    p_Repl2_3_trunc_fu_1207_p2 = (tmp_8_fu_1202_p2.read() & tmp_24_reg_1432.read());
}

void pwm::thread_p_Repl2_4_trunc_fu_1230_p2() {
    p_Repl2_4_trunc_fu_1230_p2 = (tmp_10_fu_1225_p2.read() & tmp_24_reg_1432.read());
}

void pwm::thread_p_Repl2_5_trunc_fu_1253_p2() {
    p_Repl2_5_trunc_fu_1253_p2 = (tmp_17_fu_1248_p2.read() & tmp_24_reg_1432.read());
}

void pwm::thread_p_Repl2_6_trunc_fu_1276_p2() {
    p_Repl2_6_trunc_fu_1276_p2 = (tmp_18_fu_1271_p2.read() & tmp_24_reg_1432.read());
}

void pwm::thread_p_Repl2_7_trunc_fu_1299_p2() {
    p_Repl2_7_trunc_fu_1299_p2 = (tmp_20_fu_1294_p2.read() & tmp_24_reg_1432.read());
}

void pwm::thread_p_Result_4_7_fu_1308_p9() {
    p_Result_4_7_fu_1308_p9 = esl_concat<7,1>(esl_concat<6,1>(esl_concat<5,1>(esl_concat<4,1>(esl_concat<3,1>(esl_concat<2,1>(esl_concat<1,1>(p_Repl2_7_trunc_reg_1673.read(), p_Repl2_6_trunc_reg_1668.read()), p_Repl2_5_trunc_reg_1663.read()), p_Repl2_4_trunc_reg_1658.read()), p_Repl2_3_trunc_reg_1653.read()), p_Repl2_2_trunc_reg_1648.read()), p_Repl2_1_trunc_reg_1643.read()), p_Repl2_0_trunc_reg_1638.read());
}

void pwm::thread_p_Val2_1_1_fu_1382_p1() {
    p_Val2_1_1_fu_1382_p1 =  (sc_lv<16>) (OP1_V_reg_1459.read());
}

void pwm::thread_p_Val2_1_2_fu_1370_p1() {
    p_Val2_1_2_fu_1370_p1 =  (sc_lv<16>) (OP1_V_reg_1459.read());
}

void pwm::thread_p_Val2_1_3_fu_1364_p1() {
    p_Val2_1_3_fu_1364_p1 =  (sc_lv<16>) (OP1_V_reg_1459.read());
}

void pwm::thread_p_Val2_1_4_fu_1358_p1() {
    p_Val2_1_4_fu_1358_p1 =  (sc_lv<16>) (OP1_V_reg_1459.read());
}

void pwm::thread_p_Val2_1_5_fu_1352_p1() {
    p_Val2_1_5_fu_1352_p1 =  (sc_lv<16>) (OP1_V_reg_1459.read());
}

void pwm::thread_p_Val2_1_6_fu_1346_p1() {
    p_Val2_1_6_fu_1346_p1 =  (sc_lv<16>) (OP1_V_reg_1459.read());
}

void pwm::thread_p_Val2_1_7_fu_1339_p1() {
    p_Val2_1_7_fu_1339_p1 =  (sc_lv<16>) (p_Val2_1_7_fu_1339_p10.read());
}

void pwm::thread_p_Val2_1_7_fu_1339_p10() {
    p_Val2_1_7_fu_1339_p10 = esl_zext<32,16>(tmp_12_reg_1408.read());
}

void pwm::thread_p_Val2_1_fu_1376_p1() {
    p_Val2_1_fu_1376_p1 =  (sc_lv<16>) (OP1_V_reg_1459.read());
}

void pwm::thread_p_Val2_s_fu_466_p1() {
    p_Val2_s_fu_466_p1 = min_duty.read().range(16-1, 0);
}

void pwm::thread_r_V_1_fu_1064_p2() {
    r_V_1_fu_1064_p2 = (!tmp_5_cast_reg_1485.read().is_01() || !tmp_9_1_fu_1061_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_5_cast_reg_1485.read()) + sc_bigint<33>(tmp_9_1_fu_1061_p1.read()));
}

void pwm::thread_r_V_2_fu_936_p2() {
    r_V_2_fu_936_p2 = (!tmp_5_cast_reg_1485.read().is_01() || !tmp_9_2_fu_933_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_5_cast_reg_1485.read()) + sc_bigint<33>(tmp_9_2_fu_933_p1.read()));
}

void pwm::thread_r_V_3_fu_870_p2() {
    r_V_3_fu_870_p2 = (!tmp_5_cast_reg_1485.read().is_01() || !tmp_9_3_fu_867_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_5_cast_reg_1485.read()) + sc_bigint<33>(tmp_9_3_fu_867_p1.read()));
}

void pwm::thread_r_V_4_fu_804_p2() {
    r_V_4_fu_804_p2 = (!tmp_5_cast_reg_1485.read().is_01() || !tmp_9_4_fu_801_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_5_cast_reg_1485.read()) + sc_bigint<33>(tmp_9_4_fu_801_p1.read()));
}

void pwm::thread_r_V_5_fu_738_p2() {
    r_V_5_fu_738_p2 = (!tmp_5_cast_reg_1485.read().is_01() || !tmp_9_5_fu_735_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_5_cast_reg_1485.read()) + sc_bigint<33>(tmp_9_5_fu_735_p1.read()));
}

void pwm::thread_r_V_6_fu_672_p2() {
    r_V_6_fu_672_p2 = (!tmp_5_cast_reg_1485.read().is_01() || !tmp_9_6_fu_669_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_5_cast_reg_1485.read()) + sc_bigint<33>(tmp_9_6_fu_669_p1.read()));
}

void pwm::thread_r_V_7_fu_601_p2() {
    r_V_7_fu_601_p2 = (!tmp_5_cast_fu_591_p1.read().is_01() || !tmp_9_7_fu_598_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_5_cast_fu_591_p1.read()) + sc_bigint<33>(tmp_9_7_fu_598_p1.read()));
}

void pwm::thread_r_V_fu_1003_p2() {
    r_V_fu_1003_p2 = (!tmp_5_cast_reg_1485.read().is_01() || !tmp_9_fu_1000_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_5_cast_reg_1485.read()) + sc_bigint<33>(tmp_9_fu_1000_p1.read()));
}

void pwm::thread_ret_V_1_fu_542_p2() {
    ret_V_1_fu_542_p2 = (!ap_const_lv3_1.is_01() || !ret_V_fu_514_p4.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(ret_V_fu_514_p4.read()));
}

void pwm::thread_ret_V_fu_514_p1() {
    ret_V_fu_514_p1 = motorCmd_V_q0.read();
}

void pwm::thread_ret_V_fu_514_p4() {
    ret_V_fu_514_p4 = ret_V_fu_514_p1.read().range(15, 13);
}

void pwm::thread_test2_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        test2_V_address0 =  (sc_lv<12>) (ap_const_lv64_8);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage10.read(), ap_const_boolean_0))) {
        test2_V_address0 =  (sc_lv<12>) (ap_const_lv64_7);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        test2_V_address0 =  (sc_lv<12>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
        test2_V_address0 =  (sc_lv<12>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        test2_V_address0 =  (sc_lv<12>) (ap_const_lv64_2);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        test2_V_address0 =  (sc_lv<12>) (ap_const_lv64_3);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        test2_V_address0 =  (sc_lv<12>) (ap_const_lv64_4);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        test2_V_address0 =  (sc_lv<12>) (ap_const_lv64_5);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        test2_V_address0 =  (sc_lv<12>) (ap_const_lv64_6);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        test2_V_address0 =  (sc_lv<12>) (ap_const_lv64_A);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        test2_V_address0 =  (sc_lv<12>) (ap_const_lv64_9);
    } else {
        test2_V_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void pwm::thread_test2_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)))) {
        test2_V_ce0 = ap_const_logic_1;
    } else {
        test2_V_ce0 = ap_const_logic_0;
    }
}

void pwm::thread_test2_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        test2_V_d0 = tmp_4_8_fu_1304_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage10.read(), ap_const_boolean_0))) {
        test2_V_d0 = tmp_4_7_reg_1454.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        test2_V_d0 = tmp_4_1_fu_995_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
        test2_V_d0 = tmp_4_fu_925_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        test2_V_d0 = tmp_4_2_fu_859_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        test2_V_d0 = tmp_4_3_fu_793_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        test2_V_d0 = tmp_4_4_fu_727_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        test2_V_d0 = tmp_4_5_fu_661_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        test2_V_d0 = tmp_4_6_fu_579_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        test2_V_d0 = ap_const_lv32_333;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        test2_V_d0 = ap_const_lv32_1000;
    } else {
        test2_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void pwm::thread_test2_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)))) {
        test2_V_we0 = ap_const_logic_1;
    } else {
        test2_V_we0 = ap_const_logic_0;
    }
}

void pwm::thread_test_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        test_address0 =  (sc_lv<12>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
        test_address0 =  (sc_lv<12>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        test_address0 =  (sc_lv<12>) (ap_const_lv64_8);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        test_address0 =  (sc_lv<12>) (ap_const_lv64_7);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        test_address0 =  (sc_lv<12>) (ap_const_lv64_6);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        test_address0 =  (sc_lv<12>) (ap_const_lv64_5);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        test_address0 =  (sc_lv<12>) (ap_const_lv64_4);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        test_address0 =  (sc_lv<12>) (ap_const_lv64_3);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        test_address0 =  (sc_lv<12>) (ap_const_lv64_2);
    } else {
        test_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void pwm::thread_test_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)))) {
        test_ce0 = ap_const_logic_1;
    } else {
        test_ce0 = ap_const_logic_0;
    }
}

void pwm::thread_test_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        test_d0 = tmp_21_fu_1334_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
        test_d0 = tmp_23_fu_991_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        test_d0 = ap_const_lv32_45;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0)))) {
        test_d0 = ap_const_lv32_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0)))) {
        test_d0 = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        test_d0 = tmp_25_fu_564_p1.read();
    } else {
        test_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void pwm::thread_test_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)))) {
        test_we0 = ap_const_logic_1;
    } else {
        test_we0 = ap_const_logic_0;
    }
}

void pwm::thread_tmp_10_fu_1225_p2() {
    tmp_10_fu_1225_p2 = (tmp_22_4_fu_1220_p2.read() | tmp_16_reg_1506.read());
}

void pwm::thread_tmp_11_1_fu_1077_p2() {
    tmp_11_1_fu_1077_p2 = (!tmp_60_reg_1628.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_60_reg_1628.read() == ap_const_lv13_0);
}

void pwm::thread_tmp_11_2_fu_949_p2() {
    tmp_11_2_fu_949_p2 = (!tmp_62_reg_1593.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_62_reg_1593.read() == ap_const_lv13_0);
}

void pwm::thread_tmp_11_3_fu_883_p2() {
    tmp_11_3_fu_883_p2 = (!tmp_64_reg_1573.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_64_reg_1573.read() == ap_const_lv13_0);
}

void pwm::thread_tmp_11_4_fu_817_p2() {
    tmp_11_4_fu_817_p2 = (!tmp_66_reg_1553.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_66_reg_1553.read() == ap_const_lv13_0);
}

void pwm::thread_tmp_11_5_fu_751_p2() {
    tmp_11_5_fu_751_p2 = (!tmp_68_reg_1533.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_68_reg_1533.read() == ap_const_lv13_0);
}

void pwm::thread_tmp_11_6_fu_685_p2() {
    tmp_11_6_fu_685_p2 = (!tmp_70_reg_1501.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_70_reg_1501.read() == ap_const_lv13_0);
}

void pwm::thread_tmp_11_7_fu_615_p2() {
    tmp_11_7_fu_615_p2 = (!tmp_72_reg_1475.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_72_reg_1475.read() == ap_const_lv13_0);
}

void pwm::thread_tmp_11_fu_1031_p2() {
    tmp_11_fu_1031_p2 = (!ap_const_lv16_1.is_01() || !tmp_fu_1021_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_fu_1021_p4.read()));
}

void pwm::thread_tmp_12_fu_462_p1() {
    tmp_12_fu_462_p1 = tmp_2_fu_456_p2.read().range(16-1, 0);
}

void pwm::thread_tmp_13_fu_488_p2() {
    tmp_13_fu_488_p2 = (!acc.read().is_01() || !tmp_82_fu_484_p1.read().is_01())? sc_lv<1>(): (sc_biguint<16>(acc.read()) < sc_biguint<16>(tmp_82_fu_484_p1.read()));
}

void pwm::thread_tmp_14_fu_494_p2() {
    tmp_14_fu_494_p2 = (!ap_const_lv16_1.is_01() || !acc.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(acc.read()));
}

void pwm::thread_tmp_15_fu_500_p3() {
    tmp_15_fu_500_p3 = (!tmp_13_fu_488_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_13_fu_488_p2.read()[0].to_bool())? tmp_14_fu_494_p2.read(): ap_const_lv16_0);
}

void pwm::thread_tmp_16_fu_652_p2() {
    tmp_16_fu_652_p2 = (!acc_load_reg_1419.read().is_01() || !p_Val2_s_reg_1413.read().is_01())? sc_lv<1>(): (sc_biguint<16>(acc_load_reg_1419.read()) < sc_biguint<16>(p_Val2_s_reg_1413.read()));
}

void pwm::thread_tmp_17_fu_1248_p2() {
    tmp_17_fu_1248_p2 = (tmp_22_5_fu_1243_p2.read() | tmp_16_reg_1506.read());
}

void pwm::thread_tmp_18_fu_1271_p2() {
    tmp_18_fu_1271_p2 = (tmp_22_6_fu_1266_p2.read() | tmp_16_reg_1506.read());
}

void pwm::thread_tmp_19_1_fu_1137_p2() {
    tmp_19_1_fu_1137_p2 = (!acc_load_reg_1419.read().is_01() || !tmp_31_fu_1106_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(acc_load_reg_1419.read()) < sc_biguint<16>(tmp_31_fu_1106_p3.read()));
}

void pwm::thread_tmp_19_2_fu_986_p2() {
    tmp_19_2_fu_986_p2 = (!acc_load_reg_1419.read().is_01() || !tmp_35_fu_978_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(acc_load_reg_1419.read()) < sc_biguint<16>(tmp_35_fu_978_p3.read()));
}

void pwm::thread_tmp_19_3_fu_920_p2() {
    tmp_19_3_fu_920_p2 = (!acc_load_reg_1419.read().is_01() || !tmp_39_fu_912_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(acc_load_reg_1419.read()) < sc_biguint<16>(tmp_39_fu_912_p3.read()));
}

void pwm::thread_tmp_19_4_fu_854_p2() {
    tmp_19_4_fu_854_p2 = (!acc_load_reg_1419.read().is_01() || !tmp_43_fu_846_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(acc_load_reg_1419.read()) < sc_biguint<16>(tmp_43_fu_846_p3.read()));
}

void pwm::thread_tmp_19_5_fu_788_p2() {
    tmp_19_5_fu_788_p2 = (!acc_load_reg_1419.read().is_01() || !tmp_47_fu_780_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(acc_load_reg_1419.read()) < sc_biguint<16>(tmp_47_fu_780_p3.read()));
}

void pwm::thread_tmp_19_6_fu_722_p2() {
    tmp_19_6_fu_722_p2 = (!acc_load_reg_1419.read().is_01() || !tmp_51_fu_714_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(acc_load_reg_1419.read()) < sc_biguint<16>(tmp_51_fu_714_p3.read()));
}

void pwm::thread_tmp_19_7_fu_656_p2() {
    tmp_19_7_fu_656_p2 = (!acc_load_reg_1419.read().is_01() || !tmp_55_fu_644_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(acc_load_reg_1419.read()) < sc_biguint<16>(tmp_55_fu_644_p3.read()));
}

void pwm::thread_tmp_19_fu_1056_p2() {
    tmp_19_fu_1056_p2 = (!acc_load_reg_1419.read().is_01() || !tmp_27_fu_1045_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(acc_load_reg_1419.read()) < sc_biguint<16>(tmp_27_fu_1045_p3.read()));
}

void pwm::thread_tmp_1_fu_1127_p2() {
    tmp_1_fu_1127_p2 = (tmp_22_s_fu_1122_p2.read() | tmp_16_reg_1506.read());
}

void pwm::thread_tmp_20_fu_1294_p2() {
    tmp_20_fu_1294_p2 = (tmp_22_7_fu_1289_p2.read() | tmp_16_reg_1506.read());
}

void pwm::thread_tmp_21_fu_1334_p1() {
    tmp_21_fu_1334_p1 = esl_zext<32,8>(p_3_fu_1326_p3.read());
}

void pwm::thread_tmp_22_1_fu_1150_p2() {
    tmp_22_1_fu_1150_p2 = (tmp_75_fu_1142_p3.read() & tmp_19_1_fu_1137_p2.read());
}

void pwm::thread_tmp_22_2_fu_1174_p2() {
    tmp_22_2_fu_1174_p2 = (tmp_76_fu_1166_p3.read() & tmp_19_2_reg_1618.read());
}

void pwm::thread_tmp_22_3_fu_1197_p2() {
    tmp_22_3_fu_1197_p2 = (tmp_77_fu_1189_p3.read() & tmp_19_3_reg_1598.read());
}

void pwm::thread_tmp_22_4_fu_1220_p2() {
    tmp_22_4_fu_1220_p2 = (tmp_78_fu_1212_p3.read() & tmp_19_4_reg_1578.read());
}

void pwm::thread_tmp_22_5_fu_1243_p2() {
    tmp_22_5_fu_1243_p2 = (tmp_79_fu_1235_p3.read() & tmp_19_5_reg_1558.read());
}

void pwm::thread_tmp_22_6_fu_1266_p2() {
    tmp_22_6_fu_1266_p2 = (tmp_80_fu_1258_p3.read() & tmp_19_6_reg_1538.read());
}

void pwm::thread_tmp_22_7_fu_1289_p2() {
    tmp_22_7_fu_1289_p2 = (tmp_81_fu_1281_p3.read() & tmp_19_7_reg_1518.read());
}

void pwm::thread_tmp_22_fu_536_p2() {
    tmp_22_fu_536_p2 = (!tmp_84_fu_532_p1.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_84_fu_532_p1.read() == ap_const_lv13_0);
}

void pwm::thread_tmp_22_s_fu_1122_p2() {
    tmp_22_s_fu_1122_p2 = (tmp_74_fu_1118_p1.read() & tmp_19_reg_1633.read());
}

void pwm::thread_tmp_23_fu_991_p1() {
    tmp_23_fu_991_p1 = esl_sext<32,3>(p_4_reg_1444.read());
}

void pwm::thread_tmp_24_fu_478_p2() {
    tmp_24_fu_478_p2 = (!acc.read().is_01() || !tmp_73_fu_470_p1.read().is_01())? sc_lv<1>(): (sc_biguint<16>(acc.read()) < sc_biguint<16>(tmp_73_fu_470_p1.read()));
}

void pwm::thread_tmp_25_fu_564_p1() {
    tmp_25_fu_564_p1 = esl_zext<32,1>(icmp_fu_450_p2.read());
}

void pwm::thread_tmp_26_fu_1037_p3() {
    tmp_26_fu_1037_p3 = (!tmp_s_fu_1016_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_s_fu_1016_p2.read()[0].to_bool())? tmp_fu_1021_p4.read(): tmp_11_fu_1031_p2.read());
}

void pwm::thread_tmp_27_fu_1045_p3() {
    tmp_27_fu_1045_p3 = (!tmp_57_fu_1008_p3.read()[0].is_01())? sc_lv<16>(): ((tmp_57_fu_1008_p3.read()[0].to_bool())? tmp_26_fu_1037_p3.read(): tmp_fu_1021_p4.read());
}

void pwm::thread_tmp_28_fu_1082_p4() {
    tmp_28_fu_1082_p4 = r_V_1_fu_1064_p2.read().range(28, 13);
}

void pwm::thread_tmp_29_fu_1092_p2() {
    tmp_29_fu_1092_p2 = (!ap_const_lv16_1.is_01() || !tmp_28_fu_1082_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_28_fu_1082_p4.read()));
}

void pwm::thread_tmp_2_fu_456_p2() {
    tmp_2_fu_456_p2 = (!max_duty.read().is_01() || !min_duty.read().is_01())? sc_lv<32>(): (sc_biguint<32>(max_duty.read()) - sc_biguint<32>(min_duty.read()));
}

void pwm::thread_tmp_30_fu_1098_p3() {
    tmp_30_fu_1098_p3 = (!tmp_11_1_fu_1077_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_11_1_fu_1077_p2.read()[0].to_bool())? tmp_28_fu_1082_p4.read(): tmp_29_fu_1092_p2.read());
}

void pwm::thread_tmp_31_fu_1106_p3() {
    tmp_31_fu_1106_p3 = (!tmp_59_fu_1069_p3.read()[0].is_01())? sc_lv<16>(): ((tmp_59_fu_1069_p3.read()[0].to_bool())? tmp_30_fu_1098_p3.read(): tmp_28_fu_1082_p4.read());
}

void pwm::thread_tmp_32_fu_954_p4() {
    tmp_32_fu_954_p4 = r_V_2_fu_936_p2.read().range(28, 13);
}

void pwm::thread_tmp_33_fu_964_p2() {
    tmp_33_fu_964_p2 = (!ap_const_lv16_1.is_01() || !tmp_32_fu_954_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_32_fu_954_p4.read()));
}

void pwm::thread_tmp_34_fu_970_p3() {
    tmp_34_fu_970_p3 = (!tmp_11_2_fu_949_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_11_2_fu_949_p2.read()[0].to_bool())? tmp_32_fu_954_p4.read(): tmp_33_fu_964_p2.read());
}

void pwm::thread_tmp_35_fu_978_p3() {
    tmp_35_fu_978_p3 = (!tmp_61_fu_941_p3.read()[0].is_01())? sc_lv<16>(): ((tmp_61_fu_941_p3.read()[0].to_bool())? tmp_34_fu_970_p3.read(): tmp_32_fu_954_p4.read());
}

void pwm::thread_tmp_36_fu_888_p4() {
    tmp_36_fu_888_p4 = r_V_3_fu_870_p2.read().range(28, 13);
}

void pwm::thread_tmp_37_fu_898_p2() {
    tmp_37_fu_898_p2 = (!ap_const_lv16_1.is_01() || !tmp_36_fu_888_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_36_fu_888_p4.read()));
}

void pwm::thread_tmp_38_fu_904_p3() {
    tmp_38_fu_904_p3 = (!tmp_11_3_fu_883_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_11_3_fu_883_p2.read()[0].to_bool())? tmp_36_fu_888_p4.read(): tmp_37_fu_898_p2.read());
}

void pwm::thread_tmp_39_fu_912_p3() {
    tmp_39_fu_912_p3 = (!tmp_63_fu_875_p3.read()[0].is_01())? sc_lv<16>(): ((tmp_63_fu_875_p3.read()[0].to_bool())? tmp_38_fu_904_p3.read(): tmp_36_fu_888_p4.read());
}

void pwm::thread_tmp_3_fu_1156_p2() {
    tmp_3_fu_1156_p2 = (tmp_22_1_fu_1150_p2.read() | tmp_16_reg_1506.read());
}

void pwm::thread_tmp_40_fu_822_p4() {
    tmp_40_fu_822_p4 = r_V_4_fu_804_p2.read().range(28, 13);
}

void pwm::thread_tmp_41_fu_832_p2() {
    tmp_41_fu_832_p2 = (!ap_const_lv16_1.is_01() || !tmp_40_fu_822_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_40_fu_822_p4.read()));
}

void pwm::thread_tmp_42_fu_838_p3() {
    tmp_42_fu_838_p3 = (!tmp_11_4_fu_817_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_11_4_fu_817_p2.read()[0].to_bool())? tmp_40_fu_822_p4.read(): tmp_41_fu_832_p2.read());
}

void pwm::thread_tmp_43_fu_846_p3() {
    tmp_43_fu_846_p3 = (!tmp_65_fu_809_p3.read()[0].is_01())? sc_lv<16>(): ((tmp_65_fu_809_p3.read()[0].to_bool())? tmp_42_fu_838_p3.read(): tmp_40_fu_822_p4.read());
}

void pwm::thread_tmp_44_fu_756_p4() {
    tmp_44_fu_756_p4 = r_V_5_fu_738_p2.read().range(28, 13);
}

void pwm::thread_tmp_45_fu_766_p2() {
    tmp_45_fu_766_p2 = (!ap_const_lv16_1.is_01() || !tmp_44_fu_756_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_44_fu_756_p4.read()));
}

void pwm::thread_tmp_46_fu_772_p3() {
    tmp_46_fu_772_p3 = (!tmp_11_5_fu_751_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_11_5_fu_751_p2.read()[0].to_bool())? tmp_44_fu_756_p4.read(): tmp_45_fu_766_p2.read());
}

void pwm::thread_tmp_47_fu_780_p3() {
    tmp_47_fu_780_p3 = (!tmp_67_fu_743_p3.read()[0].is_01())? sc_lv<16>(): ((tmp_67_fu_743_p3.read()[0].to_bool())? tmp_46_fu_772_p3.read(): tmp_44_fu_756_p4.read());
}

void pwm::thread_tmp_48_fu_690_p4() {
    tmp_48_fu_690_p4 = r_V_6_fu_672_p2.read().range(28, 13);
}

void pwm::thread_tmp_49_fu_700_p2() {
    tmp_49_fu_700_p2 = (!ap_const_lv16_1.is_01() || !tmp_48_fu_690_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_48_fu_690_p4.read()));
}

void pwm::thread_tmp_4_1_fu_995_p1() {
    tmp_4_1_fu_995_p1 = esl_sext<32,16>(motorCmd_V_q0.read());
}

void pwm::thread_tmp_4_2_fu_859_p1() {
    tmp_4_2_fu_859_p1 = esl_sext<32,16>(motorCmd_V_q0.read());
}

void pwm::thread_tmp_4_3_fu_793_p1() {
    tmp_4_3_fu_793_p1 = esl_sext<32,16>(motorCmd_V_q0.read());
}

void pwm::thread_tmp_4_4_fu_727_p1() {
    tmp_4_4_fu_727_p1 = esl_sext<32,16>(motorCmd_V_q0.read());
}

void pwm::thread_tmp_4_5_fu_661_p1() {
    tmp_4_5_fu_661_p1 = esl_sext<32,16>(motorCmd_V_q0.read());
}

void pwm::thread_tmp_4_6_fu_579_p1() {
    tmp_4_6_fu_579_p1 = esl_sext<32,16>(motorCmd_V_q0.read());
}

void pwm::thread_tmp_4_7_fu_569_p1() {
    tmp_4_7_fu_569_p1 = esl_sext<32,16>(motorCmd_V_q0.read());
}

void pwm::thread_tmp_4_8_fu_1304_p1() {
    tmp_4_8_fu_1304_p1 = esl_sext<32,16>(p_Val2_2_reg_1398.read());
}

void pwm::thread_tmp_4_fu_925_p1() {
    tmp_4_fu_925_p1 = esl_sext<32,16>(motorCmd_V_q0.read());
}

void pwm::thread_tmp_50_fu_706_p3() {
    tmp_50_fu_706_p3 = (!tmp_11_6_fu_685_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_11_6_fu_685_p2.read()[0].to_bool())? tmp_48_fu_690_p4.read(): tmp_49_fu_700_p2.read());
}

void pwm::thread_tmp_51_fu_714_p3() {
    tmp_51_fu_714_p3 = (!tmp_69_fu_677_p3.read()[0].is_01())? sc_lv<16>(): ((tmp_69_fu_677_p3.read()[0].to_bool())? tmp_50_fu_706_p3.read(): tmp_48_fu_690_p4.read());
}

void pwm::thread_tmp_52_fu_620_p4() {
    tmp_52_fu_620_p4 = r_V_7_fu_601_p2.read().range(28, 13);
}

void pwm::thread_tmp_53_fu_630_p2() {
    tmp_53_fu_630_p2 = (!ap_const_lv16_1.is_01() || !tmp_52_fu_620_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_52_fu_620_p4.read()));
}

void pwm::thread_tmp_54_fu_636_p3() {
    tmp_54_fu_636_p3 = (!tmp_11_7_fu_615_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_11_7_fu_615_p2.read()[0].to_bool())? tmp_52_fu_620_p4.read(): tmp_53_fu_630_p2.read());
}

void pwm::thread_tmp_55_fu_644_p3() {
    tmp_55_fu_644_p3 = (!tmp_71_fu_607_p3.read()[0].is_01())? sc_lv<16>(): ((tmp_71_fu_607_p3.read()[0].to_bool())? tmp_54_fu_636_p3.read(): tmp_52_fu_620_p4.read());
}

void pwm::thread_tmp_57_fu_1008_p3() {
    tmp_57_fu_1008_p3 = r_V_fu_1003_p2.read().range(32, 32);
}

void pwm::thread_tmp_58_fu_930_p1() {
    tmp_58_fu_930_p1 = p_Val2_1_fu_1376_p2.read().range(13-1, 0);
}

void pwm::thread_tmp_59_fu_1069_p3() {
    tmp_59_fu_1069_p3 = r_V_1_fu_1064_p2.read().range(32, 32);
}

void pwm::thread_tmp_5_cast_fu_591_p1() {
    tmp_5_cast_fu_591_p1 = esl_zext<33,29>(tmp_5_fu_584_p3.read());
}

void pwm::thread_tmp_5_fu_584_p3() {
    tmp_5_fu_584_p3 = esl_concat<16,13>(p_Val2_s_reg_1413.read(), ap_const_lv13_0);
}

void pwm::thread_tmp_60_fu_1053_p1() {
    tmp_60_fu_1053_p1 = p_Val2_1_1_fu_1382_p2.read().range(13-1, 0);
}

void pwm::thread_tmp_61_fu_941_p3() {
    tmp_61_fu_941_p3 = r_V_2_fu_936_p2.read().range(32, 32);
}

void pwm::thread_tmp_62_fu_864_p1() {
    tmp_62_fu_864_p1 = p_Val2_1_2_fu_1370_p2.read().range(13-1, 0);
}

void pwm::thread_tmp_63_fu_875_p3() {
    tmp_63_fu_875_p3 = r_V_3_fu_870_p2.read().range(32, 32);
}

void pwm::thread_tmp_64_fu_798_p1() {
    tmp_64_fu_798_p1 = p_Val2_1_3_fu_1364_p2.read().range(13-1, 0);
}

void pwm::thread_tmp_65_fu_809_p3() {
    tmp_65_fu_809_p3 = r_V_4_fu_804_p2.read().range(32, 32);
}

void pwm::thread_tmp_66_fu_732_p1() {
    tmp_66_fu_732_p1 = p_Val2_1_4_fu_1358_p2.read().range(13-1, 0);
}

void pwm::thread_tmp_67_fu_743_p3() {
    tmp_67_fu_743_p3 = r_V_5_fu_738_p2.read().range(32, 32);
}

void pwm::thread_tmp_68_fu_666_p1() {
    tmp_68_fu_666_p1 = p_Val2_1_5_fu_1352_p2.read().range(13-1, 0);
}

void pwm::thread_tmp_69_fu_677_p3() {
    tmp_69_fu_677_p3 = r_V_6_fu_672_p2.read().range(32, 32);
}

void pwm::thread_tmp_6_fu_440_p1() {
    tmp_6_fu_440_p1 = motorCmd_V_q0.read();
}

void pwm::thread_tmp_6_fu_440_p4() {
    tmp_6_fu_440_p4 = tmp_6_fu_440_p1.read().range(15, 12);
}

void pwm::thread_tmp_70_fu_595_p1() {
    tmp_70_fu_595_p1 = p_Val2_1_6_fu_1346_p2.read().range(13-1, 0);
}

void pwm::thread_tmp_71_fu_607_p3() {
    tmp_71_fu_607_p3 = r_V_7_fu_601_p2.read().range(32, 32);
}

void pwm::thread_tmp_72_fu_576_p1() {
    tmp_72_fu_576_p1 = p_Val2_1_7_fu_1339_p2.read().range(13-1, 0);
}

void pwm::thread_tmp_73_fu_470_p1() {
    tmp_73_fu_470_p1 = max_duty.read().range(16-1, 0);
}

void pwm::thread_tmp_74_fu_1118_p1() {
    tmp_74_fu_1118_p1 = out_p_V.read().range(1-1, 0);
}

void pwm::thread_tmp_75_fu_1142_p3() {
    tmp_75_fu_1142_p3 = out_p_V.read().range(1, 1);
}

void pwm::thread_tmp_76_fu_1166_p3() {
    tmp_76_fu_1166_p3 = out_p_V.read().range(2, 2);
}

void pwm::thread_tmp_77_fu_1189_p3() {
    tmp_77_fu_1189_p3 = out_p_V.read().range(3, 3);
}

void pwm::thread_tmp_78_fu_1212_p3() {
    tmp_78_fu_1212_p3 = out_p_V.read().range(4, 4);
}

void pwm::thread_tmp_79_fu_1235_p3() {
    tmp_79_fu_1235_p3 = out_p_V.read().range(5, 5);
}

void pwm::thread_tmp_7_fu_1179_p2() {
    tmp_7_fu_1179_p2 = (tmp_22_2_fu_1174_p2.read() | tmp_16_reg_1506.read());
}

void pwm::thread_tmp_80_fu_1258_p3() {
    tmp_80_fu_1258_p3 = out_p_V.read().range(6, 6);
}

void pwm::thread_tmp_81_fu_1281_p3() {
    tmp_81_fu_1281_p3 = out_p_V.read().range(7, 7);
}

void pwm::thread_tmp_82_fu_484_p1() {
    tmp_82_fu_484_p1 = period.read().range(16-1, 0);
}

void pwm::thread_tmp_83_fu_524_p1() {
    tmp_83_fu_524_p1 = motorCmd_V_q0.read();
}

void pwm::thread_tmp_83_fu_524_p3() {
    tmp_83_fu_524_p3 = tmp_83_fu_524_p1.read().range(15, 15);
}

void pwm::thread_tmp_84_fu_532_p0() {
    tmp_84_fu_532_p0 = motorCmd_V_q0.read();
}

void pwm::thread_tmp_84_fu_532_p1() {
    tmp_84_fu_532_p1 = tmp_84_fu_532_p0.read().range(13-1, 0);
}

void pwm::thread_tmp_8_fu_1202_p2() {
    tmp_8_fu_1202_p2 = (tmp_22_3_fu_1197_p2.read() | tmp_16_reg_1506.read());
}

void pwm::thread_tmp_9_1_fu_1061_p1() {
    tmp_9_1_fu_1061_p1 = esl_sext<33,32>(p_Val2_1_1_reg_1623.read());
}

void pwm::thread_tmp_9_2_fu_933_p1() {
    tmp_9_2_fu_933_p1 = esl_sext<33,32>(p_Val2_1_2_reg_1588.read());
}

void pwm::thread_tmp_9_3_fu_867_p1() {
    tmp_9_3_fu_867_p1 = esl_sext<33,32>(p_Val2_1_3_reg_1568.read());
}

void pwm::thread_tmp_9_4_fu_801_p1() {
    tmp_9_4_fu_801_p1 = esl_sext<33,32>(p_Val2_1_4_reg_1548.read());
}

void pwm::thread_tmp_9_5_fu_735_p1() {
    tmp_9_5_fu_735_p1 = esl_sext<33,32>(p_Val2_1_5_reg_1528.read());
}

void pwm::thread_tmp_9_6_fu_669_p1() {
    tmp_9_6_fu_669_p1 = esl_sext<33,32>(p_Val2_1_6_reg_1496.read());
}

void pwm::thread_tmp_9_7_fu_598_p1() {
    tmp_9_7_fu_598_p1 = esl_sext<33,32>(p_Val2_1_7_reg_1470.read());
}

void pwm::thread_tmp_9_fu_1000_p1() {
    tmp_9_fu_1000_p1 = esl_sext<33,32>(p_Val2_1_reg_1608.read());
}

void pwm::thread_tmp_fu_1021_p4() {
    tmp_fu_1021_p4 = r_V_fu_1003_p2.read().range(28, 13);
}

void pwm::thread_tmp_s_fu_1016_p2() {
    tmp_s_fu_1016_p2 = (!tmp_58_reg_1613.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_58_reg_1613.read() == ap_const_lv13_0);
}

void pwm::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_idle_pp0_1to1.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_reset_idle_pp0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_reset_idle_pp0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage3_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage4_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage5_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage6_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage7_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage8_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage9_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            }
            break;
        case 1024 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage10_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void pwm::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"out_V\" :  \"" << out_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWVALID\" :  \"" << s_axi_CTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_AWREADY\" :  \"" << s_axi_CTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWADDR\" :  \"" << s_axi_CTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WVALID\" :  \"" << s_axi_CTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_WREADY\" :  \"" << s_axi_CTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WDATA\" :  \"" << s_axi_CTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WSTRB\" :  \"" << s_axi_CTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARVALID\" :  \"" << s_axi_CTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_ARREADY\" :  \"" << s_axi_CTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARADDR\" :  \"" << s_axi_CTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RVALID\" :  \"" << s_axi_CTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_RREADY\" :  \"" << s_axi_CTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RDATA\" :  \"" << s_axi_CTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RRESP\" :  \"" << s_axi_CTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BVALID\" :  \"" << s_axi_CTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BREADY\" :  \"" << s_axi_CTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BRESP\" :  \"" << s_axi_CTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_AWVALID\" :  \"" << s_axi_TEST_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_AWREADY\" :  \"" << s_axi_TEST_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_AWADDR\" :  \"" << s_axi_TEST_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_WVALID\" :  \"" << s_axi_TEST_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_WREADY\" :  \"" << s_axi_TEST_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_WDATA\" :  \"" << s_axi_TEST_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_WSTRB\" :  \"" << s_axi_TEST_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_ARVALID\" :  \"" << s_axi_TEST_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_ARREADY\" :  \"" << s_axi_TEST_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_ARADDR\" :  \"" << s_axi_TEST_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_RVALID\" :  \"" << s_axi_TEST_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_RREADY\" :  \"" << s_axi_TEST_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_RDATA\" :  \"" << s_axi_TEST_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_RRESP\" :  \"" << s_axi_TEST_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_BVALID\" :  \"" << s_axi_TEST_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_BREADY\" :  \"" << s_axi_TEST_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_BRESP\" :  \"" << s_axi_TEST_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST2_AWVALID\" :  \"" << s_axi_TEST2_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST2_AWREADY\" :  \"" << s_axi_TEST2_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST2_AWADDR\" :  \"" << s_axi_TEST2_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST2_WVALID\" :  \"" << s_axi_TEST2_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST2_WREADY\" :  \"" << s_axi_TEST2_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST2_WDATA\" :  \"" << s_axi_TEST2_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST2_WSTRB\" :  \"" << s_axi_TEST2_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST2_ARVALID\" :  \"" << s_axi_TEST2_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST2_ARREADY\" :  \"" << s_axi_TEST2_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST2_ARADDR\" :  \"" << s_axi_TEST2_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST2_RVALID\" :  \"" << s_axi_TEST2_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST2_RREADY\" :  \"" << s_axi_TEST2_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST2_RDATA\" :  \"" << s_axi_TEST2_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST2_RRESP\" :  \"" << s_axi_TEST2_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST2_BVALID\" :  \"" << s_axi_TEST2_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST2_BREADY\" :  \"" << s_axi_TEST2_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST2_BRESP\" :  \"" << s_axi_TEST2_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

