

================================================================
== Vivado HLS Report for 'pwm'
================================================================
* Date:           Wed Jun  5 02:20:41 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        PWM
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.702|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   11|   11|   11|   11| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 11, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 11, D = 12, States = { 1 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.32>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%motorCmd_V_addr_8 = getelementptr [9 x i16]* %motorCmd_V, i64 0, i64 8" [PWM/pwm.cpp:79]   --->   Operation 13 'getelementptr' 'motorCmd_V_addr_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [2/2] (2.32ns)   --->   "%p_Val2_2 = load i16* %motorCmd_V_addr_8, align 2" [PWM/pwm.cpp:79]   --->   Operation 14 'load' 'p_Val2_2' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>

State 2 <SV = 1> <Delay = 6.87>
ST_2 : Operation 15 [1/1] (1.00ns)   --->   "%period_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %period)"   --->   Operation 15 'read' 'period_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 16 [1/1] (1.00ns)   --->   "%max_duty_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %max_duty)"   --->   Operation 16 'read' 'max_duty_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 17 [1/1] (1.00ns)   --->   "%min_duty_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %min_duty)"   --->   Operation 17 'read' 'min_duty_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%motorCmd_V_addr_7 = getelementptr [9 x i16]* %motorCmd_V, i64 0, i64 7" [PWM/pwm.cpp:79]   --->   Operation 18 'getelementptr' 'motorCmd_V_addr_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [2/2] (2.32ns)   --->   "%motorCmd_V_load_7 = load i16* %motorCmd_V_addr_7, align 2" [PWM/pwm.cpp:79]   --->   Operation 19 'load' 'motorCmd_V_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 20 [1/2] (2.32ns)   --->   "%p_Val2_2 = load i16* %motorCmd_V_addr_8, align 2" [PWM/pwm.cpp:79]   --->   Operation 20 'load' 'p_Val2_2' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%test2_V_addr14 = getelementptr [4096 x i32]* %test2_V, i64 0, i64 9" [PWM/pwm.cpp:85]   --->   Operation 21 'getelementptr' 'test2_V_addr14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (3.25ns)   --->   "store i32 4096, i32* %test2_V_addr14, align 4" [PWM/pwm.cpp:85]   --->   Operation 22 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%tmp_6 = call i4 @_ssdm_op_PartSelect.i4.i16.i32.i32(i16 %p_Val2_2, i32 12, i32 15)" [PWM/pwm.cpp:128->PWM/pwm.cpp:89]   --->   Operation 23 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.30ns)   --->   "%icmp = icmp sgt i4 %tmp_6, 0" [PWM/pwm.cpp:128->PWM/pwm.cpp:89]   --->   Operation 24 'icmp' 'icmp' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (2.55ns)   --->   "%tmp_2 = sub i32 %max_duty_read, %min_duty_read" [PWM/pwm.cpp:94]   --->   Operation 25 'sub' 'tmp_2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_12 = trunc i32 %tmp_2 to i16" [PWM/pwm.cpp:94]   --->   Operation 26 'trunc' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%p_Val2_s = trunc i32 %min_duty_read to i16" [PWM/pwm.cpp:94]   --->   Operation 27 'trunc' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_73 = trunc i32 %max_duty_read to i16" [PWM/pwm.cpp:102]   --->   Operation 28 'trunc' 'tmp_73' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%acc_load = load i16* @acc, align 2" [PWM/pwm.cpp:102]   --->   Operation 29 'load' 'acc_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (2.42ns)   --->   "%tmp_24 = icmp ult i16 %acc_load, %tmp_73" [PWM/pwm.cpp:102]   --->   Operation 30 'icmp' 'tmp_24' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_82 = trunc i32 %period_read to i16" [PWM/pwm.cpp:105]   --->   Operation 31 'trunc' 'tmp_82' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (2.42ns)   --->   "%tmp_13 = icmp ult i16 %acc_load, %tmp_82" [PWM/pwm.cpp:105]   --->   Operation 32 'icmp' 'tmp_13' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (2.07ns)   --->   "%tmp_14 = add i16 1, %acc_load" [PWM/pwm.cpp:105]   --->   Operation 33 'add' 'tmp_14' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.80ns)   --->   "%tmp_15 = select i1 %tmp_13, i16 %tmp_14, i16 0" [PWM/pwm.cpp:105]   --->   Operation 34 'select' 'tmp_15' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "store i16 %tmp_15, i16* @acc, align 2" [PWM/pwm.cpp:105]   --->   Operation 35 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%ret_V = call i3 @_ssdm_op_PartSelect.i3.i16.i32.i32(i16 %p_Val2_2, i32 13, i32 15)" [PWM/pwm.cpp:112]   --->   Operation 36 'partselect' 'ret_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node p_4)   --->   "%tmp_83 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %p_Val2_2, i32 15)" [PWM/pwm.cpp:112]   --->   Operation 37 'bitselect' 'tmp_83' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_84 = trunc i16 %p_Val2_2 to i13" [PWM/pwm.cpp:112]   --->   Operation 38 'trunc' 'tmp_84' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (2.09ns)   --->   "%tmp_22 = icmp eq i13 %tmp_84, 0" [PWM/pwm.cpp:112]   --->   Operation 39 'icmp' 'tmp_22' <Predicate = true> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.65ns)   --->   "%ret_V_1 = add i3 1, %ret_V" [PWM/pwm.cpp:112]   --->   Operation 40 'add' 'ret_V_1' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node p_4)   --->   "%p_2 = select i1 %tmp_22, i3 %ret_V, i3 %ret_V_1" [PWM/pwm.cpp:112]   --->   Operation 41 'select' 'p_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.98ns) (out node of the LUT)   --->   "%p_4 = select i1 %tmp_83, i3 %p_2, i3 %ret_V" [PWM/pwm.cpp:112]   --->   Operation 42 'select' 'p_4' <Predicate = true> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_25 = zext i1 %icmp to i32" [PWM/pwm.cpp:113]   --->   Operation 43 'zext' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%test_addr_2 = getelementptr [4096 x i32]* %test, i64 0, i64 2" [PWM/pwm.cpp:113]   --->   Operation 44 'getelementptr' 'test_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (3.25ns)   --->   "store i32 %tmp_25, i32* %test_addr_2, align 4" [PWM/pwm.cpp:113]   --->   Operation 45 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>

State 3 <SV = 2> <Delay = 8.70>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%motorCmd_V_addr_6 = getelementptr [9 x i16]* %motorCmd_V, i64 0, i64 6" [PWM/pwm.cpp:79]   --->   Operation 46 'getelementptr' 'motorCmd_V_addr_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [2/2] (2.32ns)   --->   "%motorCmd_V_load_6 = load i16* %motorCmd_V_addr_6, align 2" [PWM/pwm.cpp:79]   --->   Operation 47 'load' 'motorCmd_V_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_3 : Operation 48 [1/2] (2.32ns)   --->   "%motorCmd_V_load_7 = load i16* %motorCmd_V_addr_7, align 2" [PWM/pwm.cpp:79]   --->   Operation 48 'load' 'motorCmd_V_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_4_7 = sext i16 %motorCmd_V_load_7 to i32" [PWM/pwm.cpp:82]   --->   Operation 49 'sext' 'tmp_4_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%test2_V_addr_9 = getelementptr [4096 x i32]* %test2_V, i64 0, i64 10" [PWM/pwm.cpp:86]   --->   Operation 50 'getelementptr' 'test2_V_addr_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (3.25ns)   --->   "store i32 819, i32* %test2_V_addr_9, align 4" [PWM/pwm.cpp:86]   --->   Operation 51 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%OP1_V = zext i16 %tmp_12 to i32" [PWM/pwm.cpp:94]   --->   Operation 52 'zext' 'OP1_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (6.38ns)   --->   "%p_Val2_1_7 = mul i32 %tmp_4_7, %OP1_V" [PWM/pwm.cpp:94]   --->   Operation 53 'mul' 'p_Val2_1_7' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_72 = trunc i32 %p_Val2_1_7 to i13" [PWM/pwm.cpp:94]   --->   Operation 54 'trunc' 'tmp_72' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%test_addr_3 = getelementptr [4096 x i32]* %test, i64 0, i64 3" [PWM/pwm.cpp:114]   --->   Operation 55 'getelementptr' 'test_addr_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (3.25ns)   --->   "store i32 1, i32* %test_addr_3, align 4" [PWM/pwm.cpp:114]   --->   Operation 56 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>

State 4 <SV = 3> <Delay = 8.70>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%motorCmd_V_addr_5 = getelementptr [9 x i16]* %motorCmd_V, i64 0, i64 5" [PWM/pwm.cpp:79]   --->   Operation 57 'getelementptr' 'motorCmd_V_addr_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [2/2] (2.32ns)   --->   "%motorCmd_V_load_5 = load i16* %motorCmd_V_addr_5, align 2" [PWM/pwm.cpp:79]   --->   Operation 58 'load' 'motorCmd_V_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_4 : Operation 59 [1/2] (2.32ns)   --->   "%motorCmd_V_load_6 = load i16* %motorCmd_V_addr_6, align 2" [PWM/pwm.cpp:79]   --->   Operation 59 'load' 'motorCmd_V_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_4_6 = sext i16 %motorCmd_V_load_6 to i32" [PWM/pwm.cpp:82]   --->   Operation 60 'sext' 'tmp_4_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%test2_V_addr_6 = getelementptr [4096 x i32]* %test2_V, i64 0, i64 6" [PWM/pwm.cpp:82]   --->   Operation 61 'getelementptr' 'test2_V_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (3.25ns)   --->   "store i32 %tmp_4_6, i32* %test2_V_addr_6, align 4" [PWM/pwm.cpp:82]   --->   Operation 62 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_5 = call i29 @_ssdm_op_BitConcatenate.i29.i16.i13(i16 %p_Val2_s, i13 0)" [PWM/pwm.cpp:94]   --->   Operation 63 'bitconcatenate' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_5_cast = zext i29 %tmp_5 to i33" [PWM/pwm.cpp:94]   --->   Operation 64 'zext' 'tmp_5_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (6.38ns)   --->   "%p_Val2_1_6 = mul i32 %tmp_4_6, %OP1_V" [PWM/pwm.cpp:94]   --->   Operation 65 'mul' 'p_Val2_1_6' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_70 = trunc i32 %p_Val2_1_6 to i13" [PWM/pwm.cpp:94]   --->   Operation 66 'trunc' 'tmp_70' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_9_7 = sext i32 %p_Val2_1_7 to i33" [PWM/pwm.cpp:94]   --->   Operation 67 'sext' 'tmp_9_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (2.55ns)   --->   "%r_V_7 = add nsw i33 %tmp_5_cast, %tmp_9_7" [PWM/pwm.cpp:94]   --->   Operation 68 'add' 'r_V_7' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_7)   --->   "%tmp_71 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_7, i32 32)" [PWM/pwm.cpp:94]   --->   Operation 69 'bitselect' 'tmp_71' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (2.09ns)   --->   "%tmp_11_7 = icmp eq i13 %tmp_72, 0" [PWM/pwm.cpp:94]   --->   Operation 70 'icmp' 'tmp_11_7' <Predicate = true> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_52 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_7, i32 13, i32 28)" [PWM/pwm.cpp:94]   --->   Operation 71 'partselect' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (2.07ns)   --->   "%tmp_53 = add i16 1, %tmp_52" [PWM/pwm.cpp:94]   --->   Operation 72 'add' 'tmp_53' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_7)   --->   "%tmp_54 = select i1 %tmp_11_7, i16 %tmp_52, i16 %tmp_53" [PWM/pwm.cpp:94]   --->   Operation 73 'select' 'tmp_54' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_7)   --->   "%tmp_55 = select i1 %tmp_71, i16 %tmp_54, i16 %tmp_52" [PWM/pwm.cpp:94]   --->   Operation 74 'select' 'tmp_55' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (2.42ns)   --->   "%tmp_16 = icmp ult i16 %acc_load, %p_Val2_s" [PWM/pwm.cpp:102]   --->   Operation 75 'icmp' 'tmp_16' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_19_7 = icmp ult i16 %acc_load, %tmp_55" [PWM/pwm.cpp:102]   --->   Operation 76 'icmp' 'tmp_19_7' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%test_addr_4 = getelementptr [4096 x i32]* %test, i64 0, i64 4" [PWM/pwm.cpp:115]   --->   Operation 77 'getelementptr' 'test_addr_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (3.25ns)   --->   "store i32 0, i32* %test_addr_4, align 4" [PWM/pwm.cpp:115]   --->   Operation 78 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>

State 5 <SV = 4> <Delay = 8.70>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%motorCmd_V_addr_4 = getelementptr [9 x i16]* %motorCmd_V, i64 0, i64 4" [PWM/pwm.cpp:79]   --->   Operation 79 'getelementptr' 'motorCmd_V_addr_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 80 [2/2] (2.32ns)   --->   "%motorCmd_V_load_4 = load i16* %motorCmd_V_addr_4, align 2" [PWM/pwm.cpp:79]   --->   Operation 80 'load' 'motorCmd_V_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_5 : Operation 81 [1/2] (2.32ns)   --->   "%motorCmd_V_load_5 = load i16* %motorCmd_V_addr_5, align 2" [PWM/pwm.cpp:79]   --->   Operation 81 'load' 'motorCmd_V_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_4_5 = sext i16 %motorCmd_V_load_5 to i32" [PWM/pwm.cpp:82]   --->   Operation 82 'sext' 'tmp_4_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%test2_V_addr_5 = getelementptr [4096 x i32]* %test2_V, i64 0, i64 5" [PWM/pwm.cpp:82]   --->   Operation 83 'getelementptr' 'test2_V_addr_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (3.25ns)   --->   "store i32 %tmp_4_5, i32* %test2_V_addr_5, align 4" [PWM/pwm.cpp:82]   --->   Operation 84 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_5 : Operation 85 [1/1] (6.38ns)   --->   "%p_Val2_1_5 = mul i32 %tmp_4_5, %OP1_V" [PWM/pwm.cpp:94]   --->   Operation 85 'mul' 'p_Val2_1_5' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_68 = trunc i32 %p_Val2_1_5 to i13" [PWM/pwm.cpp:94]   --->   Operation 86 'trunc' 'tmp_68' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_9_6 = sext i32 %p_Val2_1_6 to i33" [PWM/pwm.cpp:94]   --->   Operation 87 'sext' 'tmp_9_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (2.55ns)   --->   "%r_V_6 = add nsw i33 %tmp_5_cast, %tmp_9_6" [PWM/pwm.cpp:94]   --->   Operation 88 'add' 'r_V_6' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_6)   --->   "%tmp_69 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_6, i32 32)" [PWM/pwm.cpp:94]   --->   Operation 89 'bitselect' 'tmp_69' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (2.09ns)   --->   "%tmp_11_6 = icmp eq i13 %tmp_70, 0" [PWM/pwm.cpp:94]   --->   Operation 90 'icmp' 'tmp_11_6' <Predicate = true> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_48 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_6, i32 13, i32 28)" [PWM/pwm.cpp:94]   --->   Operation 91 'partselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 92 [1/1] (2.07ns)   --->   "%tmp_49 = add i16 1, %tmp_48" [PWM/pwm.cpp:94]   --->   Operation 92 'add' 'tmp_49' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_6)   --->   "%tmp_50 = select i1 %tmp_11_6, i16 %tmp_48, i16 %tmp_49" [PWM/pwm.cpp:94]   --->   Operation 93 'select' 'tmp_50' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_6)   --->   "%tmp_51 = select i1 %tmp_69, i16 %tmp_50, i16 %tmp_48" [PWM/pwm.cpp:94]   --->   Operation 94 'select' 'tmp_51' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 95 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_19_6 = icmp ult i16 %acc_load, %tmp_51" [PWM/pwm.cpp:102]   --->   Operation 95 'icmp' 'tmp_19_6' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%test_addr_5 = getelementptr [4096 x i32]* %test, i64 0, i64 5" [PWM/pwm.cpp:116]   --->   Operation 96 'getelementptr' 'test_addr_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (3.25ns)   --->   "store i32 1, i32* %test_addr_5, align 4" [PWM/pwm.cpp:116]   --->   Operation 97 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>

State 6 <SV = 5> <Delay = 8.70>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%motorCmd_V_addr_3 = getelementptr [9 x i16]* %motorCmd_V, i64 0, i64 3" [PWM/pwm.cpp:79]   --->   Operation 98 'getelementptr' 'motorCmd_V_addr_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 99 [2/2] (2.32ns)   --->   "%motorCmd_V_load_3 = load i16* %motorCmd_V_addr_3, align 2" [PWM/pwm.cpp:79]   --->   Operation 99 'load' 'motorCmd_V_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_6 : Operation 100 [1/2] (2.32ns)   --->   "%motorCmd_V_load_4 = load i16* %motorCmd_V_addr_4, align 2" [PWM/pwm.cpp:79]   --->   Operation 100 'load' 'motorCmd_V_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_6 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_4_4 = sext i16 %motorCmd_V_load_4 to i32" [PWM/pwm.cpp:82]   --->   Operation 101 'sext' 'tmp_4_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 102 [1/1] (0.00ns)   --->   "%test2_V_addr_4 = getelementptr [4096 x i32]* %test2_V, i64 0, i64 4" [PWM/pwm.cpp:82]   --->   Operation 102 'getelementptr' 'test2_V_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 103 [1/1] (3.25ns)   --->   "store i32 %tmp_4_4, i32* %test2_V_addr_4, align 4" [PWM/pwm.cpp:82]   --->   Operation 103 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_6 : Operation 104 [1/1] (6.38ns)   --->   "%p_Val2_1_4 = mul i32 %tmp_4_4, %OP1_V" [PWM/pwm.cpp:94]   --->   Operation 104 'mul' 'p_Val2_1_4' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_66 = trunc i32 %p_Val2_1_4 to i13" [PWM/pwm.cpp:94]   --->   Operation 105 'trunc' 'tmp_66' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_9_5 = sext i32 %p_Val2_1_5 to i33" [PWM/pwm.cpp:94]   --->   Operation 106 'sext' 'tmp_9_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 107 [1/1] (2.55ns)   --->   "%r_V_5 = add nsw i33 %tmp_5_cast, %tmp_9_5" [PWM/pwm.cpp:94]   --->   Operation 107 'add' 'r_V_5' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_5)   --->   "%tmp_67 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_5, i32 32)" [PWM/pwm.cpp:94]   --->   Operation 108 'bitselect' 'tmp_67' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 109 [1/1] (2.09ns)   --->   "%tmp_11_5 = icmp eq i13 %tmp_68, 0" [PWM/pwm.cpp:94]   --->   Operation 109 'icmp' 'tmp_11_5' <Predicate = true> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_44 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_5, i32 13, i32 28)" [PWM/pwm.cpp:94]   --->   Operation 110 'partselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 111 [1/1] (2.07ns)   --->   "%tmp_45 = add i16 1, %tmp_44" [PWM/pwm.cpp:94]   --->   Operation 111 'add' 'tmp_45' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_5)   --->   "%tmp_46 = select i1 %tmp_11_5, i16 %tmp_44, i16 %tmp_45" [PWM/pwm.cpp:94]   --->   Operation 112 'select' 'tmp_46' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_5)   --->   "%tmp_47 = select i1 %tmp_67, i16 %tmp_46, i16 %tmp_44" [PWM/pwm.cpp:94]   --->   Operation 113 'select' 'tmp_47' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 114 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_19_5 = icmp ult i16 %acc_load, %tmp_47" [PWM/pwm.cpp:102]   --->   Operation 114 'icmp' 'tmp_19_5' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 115 [1/1] (0.00ns)   --->   "%test_addr_6 = getelementptr [4096 x i32]* %test, i64 0, i64 6" [PWM/pwm.cpp:117]   --->   Operation 115 'getelementptr' 'test_addr_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 116 [1/1] (3.25ns)   --->   "store i32 0, i32* %test_addr_6, align 4" [PWM/pwm.cpp:117]   --->   Operation 116 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>

State 7 <SV = 6> <Delay = 8.70>
ST_7 : Operation 117 [1/1] (0.00ns)   --->   "%motorCmd_V_addr_2 = getelementptr [9 x i16]* %motorCmd_V, i64 0, i64 2" [PWM/pwm.cpp:79]   --->   Operation 117 'getelementptr' 'motorCmd_V_addr_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 118 [2/2] (2.32ns)   --->   "%motorCmd_V_load_2 = load i16* %motorCmd_V_addr_2, align 2" [PWM/pwm.cpp:79]   --->   Operation 118 'load' 'motorCmd_V_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_7 : Operation 119 [1/2] (2.32ns)   --->   "%motorCmd_V_load_3 = load i16* %motorCmd_V_addr_3, align 2" [PWM/pwm.cpp:79]   --->   Operation 119 'load' 'motorCmd_V_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_7 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_4_3 = sext i16 %motorCmd_V_load_3 to i32" [PWM/pwm.cpp:82]   --->   Operation 120 'sext' 'tmp_4_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 121 [1/1] (0.00ns)   --->   "%test2_V_addr_3 = getelementptr [4096 x i32]* %test2_V, i64 0, i64 3" [PWM/pwm.cpp:82]   --->   Operation 121 'getelementptr' 'test2_V_addr_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 122 [1/1] (3.25ns)   --->   "store i32 %tmp_4_3, i32* %test2_V_addr_3, align 4" [PWM/pwm.cpp:82]   --->   Operation 122 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_7 : Operation 123 [1/1] (6.38ns)   --->   "%p_Val2_1_3 = mul i32 %tmp_4_3, %OP1_V" [PWM/pwm.cpp:94]   --->   Operation 123 'mul' 'p_Val2_1_3' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_64 = trunc i32 %p_Val2_1_3 to i13" [PWM/pwm.cpp:94]   --->   Operation 124 'trunc' 'tmp_64' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_9_4 = sext i32 %p_Val2_1_4 to i33" [PWM/pwm.cpp:94]   --->   Operation 125 'sext' 'tmp_9_4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 126 [1/1] (2.55ns)   --->   "%r_V_4 = add nsw i33 %tmp_5_cast, %tmp_9_4" [PWM/pwm.cpp:94]   --->   Operation 126 'add' 'r_V_4' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_4)   --->   "%tmp_65 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_4, i32 32)" [PWM/pwm.cpp:94]   --->   Operation 127 'bitselect' 'tmp_65' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 128 [1/1] (2.09ns)   --->   "%tmp_11_4 = icmp eq i13 %tmp_66, 0" [PWM/pwm.cpp:94]   --->   Operation 128 'icmp' 'tmp_11_4' <Predicate = true> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_40 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_4, i32 13, i32 28)" [PWM/pwm.cpp:94]   --->   Operation 129 'partselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 130 [1/1] (2.07ns)   --->   "%tmp_41 = add i16 1, %tmp_40" [PWM/pwm.cpp:94]   --->   Operation 130 'add' 'tmp_41' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_4)   --->   "%tmp_42 = select i1 %tmp_11_4, i16 %tmp_40, i16 %tmp_41" [PWM/pwm.cpp:94]   --->   Operation 131 'select' 'tmp_42' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_4)   --->   "%tmp_43 = select i1 %tmp_65, i16 %tmp_42, i16 %tmp_40" [PWM/pwm.cpp:94]   --->   Operation 132 'select' 'tmp_43' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 133 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_19_4 = icmp ult i16 %acc_load, %tmp_43" [PWM/pwm.cpp:102]   --->   Operation 133 'icmp' 'tmp_19_4' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 134 [1/1] (0.00ns)   --->   "%test_addr_7 = getelementptr [4096 x i32]* %test, i64 0, i64 7" [PWM/pwm.cpp:118]   --->   Operation 134 'getelementptr' 'test_addr_7' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 135 [1/1] (3.25ns)   --->   "store i32 1, i32* %test_addr_7, align 4" [PWM/pwm.cpp:118]   --->   Operation 135 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>

State 8 <SV = 7> <Delay = 8.70>
ST_8 : Operation 136 [1/1] (0.00ns)   --->   "%motorCmd_V_addr = getelementptr [9 x i16]* %motorCmd_V, i64 0, i64 0" [PWM/pwm.cpp:79]   --->   Operation 136 'getelementptr' 'motorCmd_V_addr' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 137 [2/2] (2.32ns)   --->   "%motorCmd_V_load = load i16* %motorCmd_V_addr, align 2" [PWM/pwm.cpp:79]   --->   Operation 137 'load' 'motorCmd_V_load' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_8 : Operation 138 [1/2] (2.32ns)   --->   "%motorCmd_V_load_2 = load i16* %motorCmd_V_addr_2, align 2" [PWM/pwm.cpp:79]   --->   Operation 138 'load' 'motorCmd_V_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_8 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_4_2 = sext i16 %motorCmd_V_load_2 to i32" [PWM/pwm.cpp:82]   --->   Operation 139 'sext' 'tmp_4_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 140 [1/1] (0.00ns)   --->   "%test2_V_addr_2 = getelementptr [4096 x i32]* %test2_V, i64 0, i64 2" [PWM/pwm.cpp:82]   --->   Operation 140 'getelementptr' 'test2_V_addr_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 141 [1/1] (3.25ns)   --->   "store i32 %tmp_4_2, i32* %test2_V_addr_2, align 4" [PWM/pwm.cpp:82]   --->   Operation 141 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 142 [1/1] (6.38ns)   --->   "%p_Val2_1_2 = mul i32 %tmp_4_2, %OP1_V" [PWM/pwm.cpp:94]   --->   Operation 142 'mul' 'p_Val2_1_2' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 143 [1/1] (0.00ns)   --->   "%tmp_62 = trunc i32 %p_Val2_1_2 to i13" [PWM/pwm.cpp:94]   --->   Operation 143 'trunc' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 144 [1/1] (0.00ns)   --->   "%tmp_9_3 = sext i32 %p_Val2_1_3 to i33" [PWM/pwm.cpp:94]   --->   Operation 144 'sext' 'tmp_9_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 145 [1/1] (2.55ns)   --->   "%r_V_3 = add nsw i33 %tmp_5_cast, %tmp_9_3" [PWM/pwm.cpp:94]   --->   Operation 145 'add' 'r_V_3' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_3)   --->   "%tmp_63 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_3, i32 32)" [PWM/pwm.cpp:94]   --->   Operation 146 'bitselect' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 147 [1/1] (2.09ns)   --->   "%tmp_11_3 = icmp eq i13 %tmp_64, 0" [PWM/pwm.cpp:94]   --->   Operation 147 'icmp' 'tmp_11_3' <Predicate = true> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_36 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_3, i32 13, i32 28)" [PWM/pwm.cpp:94]   --->   Operation 148 'partselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 149 [1/1] (2.07ns)   --->   "%tmp_37 = add i16 1, %tmp_36" [PWM/pwm.cpp:94]   --->   Operation 149 'add' 'tmp_37' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_3)   --->   "%tmp_38 = select i1 %tmp_11_3, i16 %tmp_36, i16 %tmp_37" [PWM/pwm.cpp:94]   --->   Operation 150 'select' 'tmp_38' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_3)   --->   "%tmp_39 = select i1 %tmp_63, i16 %tmp_38, i16 %tmp_36" [PWM/pwm.cpp:94]   --->   Operation 151 'select' 'tmp_39' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 152 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_19_3 = icmp ult i16 %acc_load, %tmp_39" [PWM/pwm.cpp:102]   --->   Operation 152 'icmp' 'tmp_19_3' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 153 [1/1] (0.00ns)   --->   "%test_addr_8 = getelementptr [4096 x i32]* %test, i64 0, i64 8" [PWM/pwm.cpp:119]   --->   Operation 153 'getelementptr' 'test_addr_8' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 154 [1/1] (3.25ns)   --->   "store i32 69, i32* %test_addr_8, align 4" [PWM/pwm.cpp:119]   --->   Operation 154 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>

State 9 <SV = 8> <Delay = 8.70>
ST_9 : Operation 155 [1/2] (2.32ns)   --->   "%motorCmd_V_load = load i16* %motorCmd_V_addr, align 2" [PWM/pwm.cpp:79]   --->   Operation 155 'load' 'motorCmd_V_load' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_9 : Operation 156 [1/1] (0.00ns)   --->   "%tmp_4 = sext i16 %motorCmd_V_load to i32" [PWM/pwm.cpp:82]   --->   Operation 156 'sext' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 157 [1/1] (0.00ns)   --->   "%test2_V_addr = getelementptr [4096 x i32]* %test2_V, i64 0, i64 0" [PWM/pwm.cpp:82]   --->   Operation 157 'getelementptr' 'test2_V_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 158 [1/1] (3.25ns)   --->   "store i32 %tmp_4, i32* %test2_V_addr, align 4" [PWM/pwm.cpp:82]   --->   Operation 158 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_9 : Operation 159 [1/1] (0.00ns)   --->   "%motorCmd_V_addr_1 = getelementptr [9 x i16]* %motorCmd_V, i64 0, i64 1" [PWM/pwm.cpp:79]   --->   Operation 159 'getelementptr' 'motorCmd_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 160 [2/2] (2.32ns)   --->   "%motorCmd_V_load_1 = load i16* %motorCmd_V_addr_1, align 2" [PWM/pwm.cpp:79]   --->   Operation 160 'load' 'motorCmd_V_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_9 : Operation 161 [1/1] (6.38ns)   --->   "%p_Val2_1 = mul i32 %tmp_4, %OP1_V" [PWM/pwm.cpp:94]   --->   Operation 161 'mul' 'p_Val2_1' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 162 [1/1] (0.00ns)   --->   "%tmp_58 = trunc i32 %p_Val2_1 to i13" [PWM/pwm.cpp:94]   --->   Operation 162 'trunc' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 163 [1/1] (0.00ns)   --->   "%tmp_9_2 = sext i32 %p_Val2_1_2 to i33" [PWM/pwm.cpp:94]   --->   Operation 163 'sext' 'tmp_9_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 164 [1/1] (2.55ns)   --->   "%r_V_2 = add nsw i33 %tmp_5_cast, %tmp_9_2" [PWM/pwm.cpp:94]   --->   Operation 164 'add' 'r_V_2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_2)   --->   "%tmp_61 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_2, i32 32)" [PWM/pwm.cpp:94]   --->   Operation 165 'bitselect' 'tmp_61' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 166 [1/1] (2.09ns)   --->   "%tmp_11_2 = icmp eq i13 %tmp_62, 0" [PWM/pwm.cpp:94]   --->   Operation 166 'icmp' 'tmp_11_2' <Predicate = true> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 167 [1/1] (0.00ns)   --->   "%tmp_32 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_2, i32 13, i32 28)" [PWM/pwm.cpp:94]   --->   Operation 167 'partselect' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 168 [1/1] (2.07ns)   --->   "%tmp_33 = add i16 1, %tmp_32" [PWM/pwm.cpp:94]   --->   Operation 168 'add' 'tmp_33' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_2)   --->   "%tmp_34 = select i1 %tmp_11_2, i16 %tmp_32, i16 %tmp_33" [PWM/pwm.cpp:94]   --->   Operation 169 'select' 'tmp_34' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_2)   --->   "%tmp_35 = select i1 %tmp_61, i16 %tmp_34, i16 %tmp_32" [PWM/pwm.cpp:94]   --->   Operation 170 'select' 'tmp_35' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 171 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_19_2 = icmp ult i16 %acc_load, %tmp_35" [PWM/pwm.cpp:102]   --->   Operation 171 'icmp' 'tmp_19_2' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 172 [1/1] (0.00ns)   --->   "%tmp_23 = sext i3 %p_4 to i32" [PWM/pwm.cpp:112]   --->   Operation 172 'sext' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 173 [1/1] (0.00ns)   --->   "%test_addr_1 = getelementptr [4096 x i32]* %test, i64 0, i64 1" [PWM/pwm.cpp:112]   --->   Operation 173 'getelementptr' 'test_addr_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 174 [1/1] (3.25ns)   --->   "store i32 %tmp_23, i32* %test_addr_1, align 4" [PWM/pwm.cpp:112]   --->   Operation 174 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>

State 10 <SV = 9> <Delay = 8.70>
ST_10 : Operation 175 [1/2] (2.32ns)   --->   "%motorCmd_V_load_1 = load i16* %motorCmd_V_addr_1, align 2" [PWM/pwm.cpp:79]   --->   Operation 175 'load' 'motorCmd_V_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 9> <RAM>
ST_10 : Operation 176 [1/1] (0.00ns)   --->   "%tmp_4_1 = sext i16 %motorCmd_V_load_1 to i32" [PWM/pwm.cpp:82]   --->   Operation 176 'sext' 'tmp_4_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 177 [1/1] (0.00ns)   --->   "%test2_V_addr_1 = getelementptr [4096 x i32]* %test2_V, i64 0, i64 1" [PWM/pwm.cpp:82]   --->   Operation 177 'getelementptr' 'test2_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 178 [1/1] (3.25ns)   --->   "store i32 %tmp_4_1, i32* %test2_V_addr_1, align 4" [PWM/pwm.cpp:82]   --->   Operation 178 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_10 : Operation 179 [1/1] (0.00ns)   --->   "%tmp_9 = sext i32 %p_Val2_1 to i33" [PWM/pwm.cpp:94]   --->   Operation 179 'sext' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 180 [1/1] (2.55ns)   --->   "%r_V = add nsw i33 %tmp_5_cast, %tmp_9" [PWM/pwm.cpp:94]   --->   Operation 180 'add' 'r_V' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node tmp_19)   --->   "%tmp_57 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V, i32 32)" [PWM/pwm.cpp:94]   --->   Operation 181 'bitselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 182 [1/1] (2.09ns)   --->   "%tmp_s = icmp eq i13 %tmp_58, 0" [PWM/pwm.cpp:94]   --->   Operation 182 'icmp' 'tmp_s' <Predicate = true> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 183 [1/1] (0.00ns)   --->   "%tmp = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V, i32 13, i32 28)" [PWM/pwm.cpp:94]   --->   Operation 183 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 184 [1/1] (2.07ns)   --->   "%tmp_11 = add i16 1, %tmp" [PWM/pwm.cpp:94]   --->   Operation 184 'add' 'tmp_11' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node tmp_19)   --->   "%tmp_26 = select i1 %tmp_s, i16 %tmp, i16 %tmp_11" [PWM/pwm.cpp:94]   --->   Operation 185 'select' 'tmp_26' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node tmp_19)   --->   "%tmp_27 = select i1 %tmp_57, i16 %tmp_26, i16 %tmp" [PWM/pwm.cpp:94]   --->   Operation 186 'select' 'tmp_27' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 187 [1/1] (6.38ns)   --->   "%p_Val2_1_1 = mul i32 %tmp_4_1, %OP1_V" [PWM/pwm.cpp:94]   --->   Operation 187 'mul' 'p_Val2_1_1' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 188 [1/1] (0.00ns)   --->   "%tmp_60 = trunc i32 %p_Val2_1_1 to i13" [PWM/pwm.cpp:94]   --->   Operation 188 'trunc' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 189 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_19 = icmp ult i16 %acc_load, %tmp_27" [PWM/pwm.cpp:102]   --->   Operation 189 'icmp' 'tmp_19' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 8.03>
ST_11 : Operation 190 [1/1] (0.00ns)   --->   "%test2_V_addr_7 = getelementptr [4096 x i32]* %test2_V, i64 0, i64 7" [PWM/pwm.cpp:82]   --->   Operation 190 'getelementptr' 'test2_V_addr_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 191 [1/1] (3.25ns)   --->   "store i32 %tmp_4_7, i32* %test2_V_addr_7, align 4" [PWM/pwm.cpp:82]   --->   Operation 191 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_11 : Operation 192 [1/1] (0.00ns)   --->   "%tmp_9_1 = sext i32 %p_Val2_1_1 to i33" [PWM/pwm.cpp:94]   --->   Operation 192 'sext' 'tmp_9_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 193 [1/1] (2.55ns)   --->   "%r_V_1 = add nsw i33 %tmp_5_cast, %tmp_9_1" [PWM/pwm.cpp:94]   --->   Operation 193 'add' 'r_V_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_1)   --->   "%tmp_59 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_1, i32 32)" [PWM/pwm.cpp:94]   --->   Operation 194 'bitselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 195 [1/1] (2.09ns)   --->   "%tmp_11_1 = icmp eq i13 %tmp_60, 0" [PWM/pwm.cpp:94]   --->   Operation 195 'icmp' 'tmp_11_1' <Predicate = true> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 196 [1/1] (0.00ns)   --->   "%tmp_28 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_1, i32 13, i32 28)" [PWM/pwm.cpp:94]   --->   Operation 196 'partselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 197 [1/1] (2.07ns)   --->   "%tmp_29 = add i16 1, %tmp_28" [PWM/pwm.cpp:94]   --->   Operation 197 'add' 'tmp_29' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_1)   --->   "%tmp_30 = select i1 %tmp_11_1, i16 %tmp_28, i16 %tmp_29" [PWM/pwm.cpp:94]   --->   Operation 198 'select' 'tmp_30' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_1)   --->   "%tmp_31 = select i1 %tmp_59, i16 %tmp_30, i16 %tmp_28" [PWM/pwm.cpp:94]   --->   Operation 199 'select' 'tmp_31' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 200 [1/1] (0.00ns)   --->   "%out_p_V_load = load i8* @out_p_V, align 1" [PWM/pwm.cpp:102]   --->   Operation 200 'load' 'out_p_V_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_0_trunc)   --->   "%tmp_74 = trunc i8 %out_p_V_load to i1" [PWM/pwm.cpp:102]   --->   Operation 201 'trunc' 'tmp_74' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_0_trunc)   --->   "%tmp_22_s = and i1 %tmp_74, %tmp_19" [PWM/pwm.cpp:102]   --->   Operation 202 'and' 'tmp_22_s' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_0_trunc)   --->   "%tmp_1 = or i1 %tmp_22_s, %tmp_16" [PWM/pwm.cpp:102]   --->   Operation 203 'or' 'tmp_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 204 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_0_trunc = and i1 %tmp_1, %tmp_24" [PWM/pwm.cpp:102]   --->   Operation 204 'and' 'p_Repl2_0_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 205 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_19_1 = icmp ult i16 %acc_load, %tmp_31" [PWM/pwm.cpp:102]   --->   Operation 205 'icmp' 'tmp_19_1' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1_trunc)   --->   "%tmp_75 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %out_p_V_load, i32 1)" [PWM/pwm.cpp:102]   --->   Operation 206 'bitselect' 'tmp_75' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1_trunc)   --->   "%tmp_22_1 = and i1 %tmp_75, %tmp_19_1" [PWM/pwm.cpp:102]   --->   Operation 207 'and' 'tmp_22_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1_trunc)   --->   "%tmp_3 = or i1 %tmp_22_1, %tmp_16" [PWM/pwm.cpp:102]   --->   Operation 208 'or' 'tmp_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 209 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_1_trunc = and i1 %tmp_3, %tmp_24" [PWM/pwm.cpp:102]   --->   Operation 209 'and' 'p_Repl2_1_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_2_trunc)   --->   "%tmp_76 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %out_p_V_load, i32 2)" [PWM/pwm.cpp:102]   --->   Operation 210 'bitselect' 'tmp_76' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_2_trunc)   --->   "%tmp_22_2 = and i1 %tmp_76, %tmp_19_2" [PWM/pwm.cpp:102]   --->   Operation 211 'and' 'tmp_22_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_2_trunc)   --->   "%tmp_7 = or i1 %tmp_22_2, %tmp_16" [PWM/pwm.cpp:102]   --->   Operation 212 'or' 'tmp_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 213 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_2_trunc = and i1 %tmp_7, %tmp_24" [PWM/pwm.cpp:102]   --->   Operation 213 'and' 'p_Repl2_2_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_3_trunc)   --->   "%tmp_77 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %out_p_V_load, i32 3)" [PWM/pwm.cpp:102]   --->   Operation 214 'bitselect' 'tmp_77' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 215 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_3_trunc)   --->   "%tmp_22_3 = and i1 %tmp_77, %tmp_19_3" [PWM/pwm.cpp:102]   --->   Operation 215 'and' 'tmp_22_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 216 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_3_trunc)   --->   "%tmp_8 = or i1 %tmp_22_3, %tmp_16" [PWM/pwm.cpp:102]   --->   Operation 216 'or' 'tmp_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 217 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_3_trunc = and i1 %tmp_8, %tmp_24" [PWM/pwm.cpp:102]   --->   Operation 217 'and' 'p_Repl2_3_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_4_trunc)   --->   "%tmp_78 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %out_p_V_load, i32 4)" [PWM/pwm.cpp:102]   --->   Operation 218 'bitselect' 'tmp_78' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_4_trunc)   --->   "%tmp_22_4 = and i1 %tmp_78, %tmp_19_4" [PWM/pwm.cpp:102]   --->   Operation 219 'and' 'tmp_22_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_4_trunc)   --->   "%tmp_10 = or i1 %tmp_22_4, %tmp_16" [PWM/pwm.cpp:102]   --->   Operation 220 'or' 'tmp_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 221 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_4_trunc = and i1 %tmp_10, %tmp_24" [PWM/pwm.cpp:102]   --->   Operation 221 'and' 'p_Repl2_4_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 222 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_5_trunc)   --->   "%tmp_79 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %out_p_V_load, i32 5)" [PWM/pwm.cpp:102]   --->   Operation 222 'bitselect' 'tmp_79' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_5_trunc)   --->   "%tmp_22_5 = and i1 %tmp_79, %tmp_19_5" [PWM/pwm.cpp:102]   --->   Operation 223 'and' 'tmp_22_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_5_trunc)   --->   "%tmp_17 = or i1 %tmp_22_5, %tmp_16" [PWM/pwm.cpp:102]   --->   Operation 224 'or' 'tmp_17' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 225 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_5_trunc = and i1 %tmp_17, %tmp_24" [PWM/pwm.cpp:102]   --->   Operation 225 'and' 'p_Repl2_5_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_6_trunc)   --->   "%tmp_80 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %out_p_V_load, i32 6)" [PWM/pwm.cpp:102]   --->   Operation 226 'bitselect' 'tmp_80' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_6_trunc)   --->   "%tmp_22_6 = and i1 %tmp_80, %tmp_19_6" [PWM/pwm.cpp:102]   --->   Operation 227 'and' 'tmp_22_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_6_trunc)   --->   "%tmp_18 = or i1 %tmp_22_6, %tmp_16" [PWM/pwm.cpp:102]   --->   Operation 228 'or' 'tmp_18' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 229 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_6_trunc = and i1 %tmp_18, %tmp_24" [PWM/pwm.cpp:102]   --->   Operation 229 'and' 'p_Repl2_6_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 230 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_7_trunc)   --->   "%tmp_81 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %out_p_V_load, i32 7)" [PWM/pwm.cpp:102]   --->   Operation 230 'bitselect' 'tmp_81' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 231 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_7_trunc)   --->   "%tmp_22_7 = and i1 %tmp_81, %tmp_19_7" [PWM/pwm.cpp:102]   --->   Operation 231 'and' 'tmp_22_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 232 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_7_trunc)   --->   "%tmp_20 = or i1 %tmp_22_7, %tmp_16" [PWM/pwm.cpp:102]   --->   Operation 232 'or' 'tmp_20' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 233 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_7_trunc = and i1 %tmp_20, %tmp_24" [PWM/pwm.cpp:102]   --->   Operation 233 'and' 'p_Repl2_7_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 4.50>
ST_12 : Operation 234 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x i16]* %motorCmd_V), !map !95"   --->   Operation 234 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 235 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %min_duty), !map !101"   --->   Operation 235 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 236 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %max_duty), !map !107"   --->   Operation 236 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 237 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %period), !map !111"   --->   Operation 237 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 238 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_V), !map !115"   --->   Operation 238 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 239 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4096 x i32]* %test), !map !119"   --->   Operation 239 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 240 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4096 x i32]* %test2_V), !map !125"   --->   Operation 240 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 241 [1/1] (0.00ns)   --->   "%test_addr = getelementptr [4096 x i32]* %test, i64 0, i64 0"   --->   Operation 241 'getelementptr' 'test_addr' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 242 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @pwm_str) nounwind"   --->   Operation 242 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 243 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [PWM/pwm.cpp:49]   --->   Operation 243 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 244 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [PWM/pwm.cpp:52]   --->   Operation 244 'specinterface' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 245 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %min_duty, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [PWM/pwm.cpp:53]   --->   Operation 245 'specinterface' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 246 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %max_duty, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [PWM/pwm.cpp:54]   --->   Operation 246 'specinterface' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 247 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %period, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [PWM/pwm.cpp:55]   --->   Operation 247 'specinterface' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 248 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([9 x i16]* %motorCmd_V, [1 x i8]* @p_str, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 248 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 249 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([9 x i16]* %motorCmd_V, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind"   --->   Operation 249 'specinterface' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 250 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %out_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [PWM/pwm.cpp:59]   --->   Operation 250 'specinterface' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 251 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([4096 x i32]* %test, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str4, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind"   --->   Operation 251 'specinterface' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 252 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([4096 x i32]* %test, [1 x i8]* @p_str, [12 x i8]* @p_str5, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 252 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 253 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([4096 x i32]* %test2_V, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [6 x i8]* @p_str6, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind"   --->   Operation 253 'specinterface' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 254 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([4096 x i32]* %test2_V, [1 x i8]* @p_str, [12 x i8]* @p_str5, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 254 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 255 [1/1] (0.00ns)   --->   "%tmp_4_8 = sext i16 %p_Val2_2 to i32" [PWM/pwm.cpp:82]   --->   Operation 255 'sext' 'tmp_4_8' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 256 [1/1] (0.00ns)   --->   "%test2_V_addr_8 = getelementptr [4096 x i32]* %test2_V, i64 0, i64 8" [PWM/pwm.cpp:82]   --->   Operation 256 'getelementptr' 'test2_V_addr_8' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 257 [1/1] (3.25ns)   --->   "store i32 %tmp_4_8, i32* %test2_V_addr_8, align 4" [PWM/pwm.cpp:82]   --->   Operation 257 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_12 : Operation 258 [1/1] (0.00ns)   --->   "%p_Result_4_7 = call i8 @_ssdm_op_BitConcatenate.i8.i1.i1.i1.i1.i1.i1.i1.i1(i1 %p_Repl2_7_trunc, i1 %p_Repl2_6_trunc, i1 %p_Repl2_5_trunc, i1 %p_Repl2_4_trunc, i1 %p_Repl2_3_trunc, i1 %p_Repl2_2_trunc, i1 %p_Repl2_1_trunc, i1 %p_Repl2_0_trunc)" [PWM/pwm.cpp:102]   --->   Operation 258 'bitconcatenate' 'p_Result_4_7' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 259 [1/1] (0.00ns)   --->   "store i8 %p_Result_4_7, i8* @out_p_V, align 1" [PWM/pwm.cpp:102]   --->   Operation 259 'store' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 260 [1/1] (1.24ns)   --->   "%p_3 = select i1 %icmp, i8 %p_Result_4_7, i8 0" [PWM/pwm.cpp:107]   --->   Operation 260 'select' 'p_3' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 261 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i8P(i8* %out_V, i8 %p_3)" [PWM/pwm.cpp:107]   --->   Operation 261 'write' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 262 [1/1] (0.00ns)   --->   "%tmp_21 = zext i8 %p_3 to i32" [PWM/pwm.cpp:111]   --->   Operation 262 'zext' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 263 [1/1] (3.25ns)   --->   "store i32 %tmp_21, i32* %test_addr, align 4" [PWM/pwm.cpp:111]   --->   Operation 263 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 44 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4096> <RAM>
ST_12 : Operation 264 [1/1] (0.00ns)   --->   "ret void" [PWM/pwm.cpp:122]   --->   Operation 264 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('motorCmd_V_addr_8', PWM/pwm.cpp:79) [74]  (0 ns)
	'load' operation ('__Val2__', PWM/pwm.cpp:79) on array 'motorCmd_V' [75]  (2.32 ns)

 <State 2>: 6.88ns
The critical path consists of the following:
	'load' operation ('__Val2__', PWM/pwm.cpp:79) on array 'motorCmd_V' [75]  (2.32 ns)
	'icmp' operation ('icmp', PWM/pwm.cpp:128->PWM/pwm.cpp:89) [84]  (1.3 ns)
	'store' operation (PWM/pwm.cpp:113) of variable 'tmp_25', PWM/pwm.cpp:113 on array 'test' [239]  (3.25 ns)

 <State 3>: 8.7ns
The critical path consists of the following:
	'load' operation ('motorCmd_V_load_7', PWM/pwm.cpp:79) on array 'motorCmd_V' [70]  (2.32 ns)
	'mul' operation ('p_Val2_1_7', PWM/pwm.cpp:94) [161]  (6.38 ns)

 <State 4>: 8.7ns
The critical path consists of the following:
	'load' operation ('motorCmd_V_load_6', PWM/pwm.cpp:79) on array 'motorCmd_V' [65]  (2.32 ns)
	'mul' operation ('p_Val2_1_6', PWM/pwm.cpp:94) [151]  (6.38 ns)

 <State 5>: 8.7ns
The critical path consists of the following:
	'load' operation ('motorCmd_V_load_5', PWM/pwm.cpp:79) on array 'motorCmd_V' [60]  (2.32 ns)
	'mul' operation ('p_Val2_1_5', PWM/pwm.cpp:94) [141]  (6.38 ns)

 <State 6>: 8.7ns
The critical path consists of the following:
	'load' operation ('motorCmd_V_load_4', PWM/pwm.cpp:79) on array 'motorCmd_V' [55]  (2.32 ns)
	'mul' operation ('p_Val2_1_4', PWM/pwm.cpp:94) [131]  (6.38 ns)

 <State 7>: 8.7ns
The critical path consists of the following:
	'load' operation ('motorCmd_V_load_3', PWM/pwm.cpp:79) on array 'motorCmd_V' [50]  (2.32 ns)
	'mul' operation ('p_Val2_1_3', PWM/pwm.cpp:94) [121]  (6.38 ns)

 <State 8>: 8.7ns
The critical path consists of the following:
	'load' operation ('motorCmd_V_load_2', PWM/pwm.cpp:79) on array 'motorCmd_V' [45]  (2.32 ns)
	'mul' operation ('p_Val2_1_2', PWM/pwm.cpp:94) [111]  (6.38 ns)

 <State 9>: 8.7ns
The critical path consists of the following:
	'load' operation ('motorCmd_V_load', PWM/pwm.cpp:79) on array 'motorCmd_V' [35]  (2.32 ns)
	'mul' operation ('p_Val2_1', PWM/pwm.cpp:94) [89]  (6.38 ns)

 <State 10>: 8.7ns
The critical path consists of the following:
	'load' operation ('motorCmd_V_load_1', PWM/pwm.cpp:79) on array 'motorCmd_V' [40]  (2.32 ns)
	'mul' operation ('p_Val2_1_1', PWM/pwm.cpp:94) [101]  (6.38 ns)

 <State 11>: 8.04ns
The critical path consists of the following:
	'add' operation ('r_V_1', PWM/pwm.cpp:94) [103]  (2.55 ns)
	'add' operation ('tmp_29', PWM/pwm.cpp:94) [108]  (2.08 ns)
	'select' operation ('tmp_30', PWM/pwm.cpp:94) [109]  (0 ns)
	'select' operation ('tmp_31', PWM/pwm.cpp:94) [110]  (0 ns)
	'icmp' operation ('tmp_19_1', PWM/pwm.cpp:102) [181]  (2.43 ns)
	'and' operation ('tmp_22_1', PWM/pwm.cpp:102) [183]  (0 ns)
	'or' operation ('tmp_3', PWM/pwm.cpp:102) [184]  (0 ns)
	'and' operation ('p_Repl2_1_trunc', PWM/pwm.cpp:102) [185]  (0.978 ns)

 <State 12>: 4.5ns
The critical path consists of the following:
	'select' operation ('p_3', PWM/pwm.cpp:107) [223]  (1.25 ns)
	'store' operation (PWM/pwm.cpp:111) of variable 'tmp_21', PWM/pwm.cpp:111 on array 'test' [226]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
