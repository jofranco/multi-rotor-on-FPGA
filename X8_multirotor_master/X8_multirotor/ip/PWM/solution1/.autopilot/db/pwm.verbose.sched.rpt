

================================================================
== Vivado HLS Report for 'pwm'
================================================================
* Date:           Thu May 30 22:38:10 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        PWM
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.702|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    8|    8|    7|    7| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 7, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 7, D = 9, States = { 1 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.32>
ST_1 : Operation 10 [1/1] (1.00ns)   --->   "%period_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %period)"   --->   Operation 10 'read' 'period_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 11 [1/1] (1.00ns)   --->   "%max_duty_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %max_duty)"   --->   Operation 11 'read' 'max_duty_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 12 [1/1] (1.00ns)   --->   "%min_duty_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %min_duty)"   --->   Operation 12 'read' 'min_duty_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%m_V_addr_1 = getelementptr [6 x i16]* %m_V, i64 0, i64 0" [PWM/pwm.cpp:61]   --->   Operation 13 'getelementptr' 'm_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [2/2] (2.32ns)   --->   "%m_V_load_1 = load i16* %m_V_addr_1, align 2" [PWM/pwm.cpp:61]   --->   Operation 14 'load' 'm_V_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>

State 2 <SV = 1> <Delay = 8.70>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_cast = zext i16 %min_duty_read to i17" [PWM/pwm.cpp:46]   --->   Operation 15 'zext' 'tmp_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_1_cast = zext i16 %max_duty_read to i17" [PWM/pwm.cpp:47]   --->   Operation 16 'zext' 'tmp_1_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (2.07ns)   --->   "%i_op_assign = sub i17 %tmp_1_cast, %tmp_cast" [PWM/pwm.cpp:61]   --->   Operation 17 'sub' 'i_op_assign' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%OP1_V_1_cast = sext i17 %i_op_assign to i33" [PWM/pwm.cpp:61]   --->   Operation 18 'sext' 'OP1_V_1_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/2] (2.32ns)   --->   "%m_V_load_1 = load i16* %m_V_addr_1, align 2" [PWM/pwm.cpp:61]   --->   Operation 19 'load' 'm_V_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%OP2_V_cast = sext i16 %m_V_load_1 to i33" [PWM/pwm.cpp:61]   --->   Operation 20 'sext' 'OP2_V_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (6.38ns)   --->   "%p_Val2_s = mul i33 %OP1_V_1_cast, %OP2_V_cast" [PWM/pwm.cpp:61]   --->   Operation 21 'mul' 'p_Val2_s' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_39 = trunc i33 %p_Val2_s to i15" [PWM/pwm.cpp:61]   --->   Operation 22 'trunc' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%m_V_addr_2 = getelementptr [6 x i16]* %m_V, i64 0, i64 1" [PWM/pwm.cpp:61]   --->   Operation 23 'getelementptr' 'm_V_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [2/2] (2.32ns)   --->   "%m_V_load_2 = load i16* %m_V_addr_2, align 2" [PWM/pwm.cpp:61]   --->   Operation 24 'load' 'm_V_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%acc_load = load i16* @acc, align 2" [PWM/pwm.cpp:66]   --->   Operation 25 'load' 'acc_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (2.42ns)   --->   "%tmp_9 = icmp ult i16 %acc_load, %max_duty_read" [PWM/pwm.cpp:66]   --->   Operation 26 'icmp' 'tmp_9' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (2.42ns)   --->   "%tmp_s = icmp ult i16 %acc_load, %period_read" [PWM/pwm.cpp:69]   --->   Operation 27 'icmp' 'tmp_s' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (2.07ns)   --->   "%tmp_13 = add i16 1, %acc_load" [PWM/pwm.cpp:69]   --->   Operation 28 'add' 'tmp_13' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.80ns)   --->   "%tmp_14 = select i1 %tmp_s, i16 %tmp_13, i16 0" [PWM/pwm.cpp:69]   --->   Operation 29 'select' 'tmp_14' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "store i16 %tmp_14, i16* @acc, align 2" [PWM/pwm.cpp:69]   --->   Operation 30 'store' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 8.70>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_6 = call i31 @_ssdm_op_BitConcatenate.i31.i16.i15(i16 %min_duty_read, i15 0)" [PWM/pwm.cpp:61]   --->   Operation 31 'bitconcatenate' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_6_cast = zext i31 %tmp_6 to i33" [PWM/pwm.cpp:61]   --->   Operation 32 'zext' 'tmp_6_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (2.59ns)   --->   "%r_V_2 = add i33 %tmp_6_cast, %p_Val2_s" [PWM/pwm.cpp:61]   --->   Operation 33 'add' 'r_V_2' <Predicate = true> <Delay = 2.59> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node tmp_17)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_2, i32 32)" [PWM/pwm.cpp:61]   --->   Operation 34 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (2.31ns)   --->   "%tmp_1 = icmp eq i15 %tmp_39, 0" [PWM/pwm.cpp:61]   --->   Operation 35 'icmp' 'tmp_1' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_3 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_2, i32 15, i32 30)" [PWM/pwm.cpp:61]   --->   Operation 36 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (2.07ns)   --->   "%tmp_4 = add i16 1, %tmp_3" [PWM/pwm.cpp:61]   --->   Operation 37 'add' 'tmp_4' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node tmp_17)   --->   "%tmp_12 = select i1 %tmp_1, i16 %tmp_3, i16 %tmp_4" [PWM/pwm.cpp:61]   --->   Operation 38 'select' 'tmp_12' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node tmp_17)   --->   "%tmp_15 = select i1 %tmp, i16 %tmp_12, i16 %tmp_3" [PWM/pwm.cpp:61]   --->   Operation 39 'select' 'tmp_15' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 40 [1/2] (2.32ns)   --->   "%m_V_load_2 = load i16* %m_V_addr_2, align 2" [PWM/pwm.cpp:61]   --->   Operation 40 'load' 'm_V_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%OP2_V_1_cast = sext i16 %m_V_load_2 to i33" [PWM/pwm.cpp:61]   --->   Operation 41 'sext' 'OP2_V_1_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (6.38ns)   --->   "%p_Val2_1 = mul i33 %OP1_V_1_cast, %OP2_V_1_cast" [PWM/pwm.cpp:61]   --->   Operation 42 'mul' 'p_Val2_1' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_41 = trunc i33 %p_Val2_1 to i15" [PWM/pwm.cpp:61]   --->   Operation 43 'trunc' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%m_V_addr_3 = getelementptr [6 x i16]* %m_V, i64 0, i64 2" [PWM/pwm.cpp:61]   --->   Operation 44 'getelementptr' 'm_V_addr_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [2/2] (2.32ns)   --->   "%m_V_load_3 = load i16* %m_V_addr_3, align 2" [PWM/pwm.cpp:61]   --->   Operation 45 'load' 'm_V_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_3 : Operation 46 [1/1] (2.42ns)   --->   "%tmp_7 = icmp ult i16 %acc_load, %min_duty_read" [PWM/pwm.cpp:66]   --->   Operation 46 'icmp' 'tmp_7' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_17 = icmp ult i16 %acc_load, %tmp_15" [PWM/pwm.cpp:66]   --->   Operation 47 'icmp' 'tmp_17' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 8.70>
ST_4 : Operation 48 [1/1] (2.59ns)   --->   "%r_V_2_1 = add i33 %tmp_6_cast, %p_Val2_1" [PWM/pwm.cpp:61]   --->   Operation 48 'add' 'r_V_2_1' <Predicate = true> <Delay = 2.59> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_1)   --->   "%tmp_40 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_2_1, i32 32)" [PWM/pwm.cpp:61]   --->   Operation 49 'bitselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (2.31ns)   --->   "%tmp_12_1 = icmp eq i15 %tmp_41, 0" [PWM/pwm.cpp:61]   --->   Operation 50 'icmp' 'tmp_12_1' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_19 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_2_1, i32 15, i32 30)" [PWM/pwm.cpp:61]   --->   Operation 51 'partselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (2.07ns)   --->   "%tmp_20 = add i16 1, %tmp_19" [PWM/pwm.cpp:61]   --->   Operation 52 'add' 'tmp_20' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_1)   --->   "%tmp_21 = select i1 %tmp_12_1, i16 %tmp_19, i16 %tmp_20" [PWM/pwm.cpp:61]   --->   Operation 53 'select' 'tmp_21' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_1)   --->   "%tmp_22 = select i1 %tmp_40, i16 %tmp_21, i16 %tmp_19" [PWM/pwm.cpp:61]   --->   Operation 54 'select' 'tmp_22' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 55 [1/2] (2.32ns)   --->   "%m_V_load_3 = load i16* %m_V_addr_3, align 2" [PWM/pwm.cpp:61]   --->   Operation 55 'load' 'm_V_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%OP2_V_2_cast = sext i16 %m_V_load_3 to i33" [PWM/pwm.cpp:61]   --->   Operation 56 'sext' 'OP2_V_2_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (6.38ns)   --->   "%p_Val2_s_4 = mul i33 %OP1_V_1_cast, %OP2_V_2_cast" [PWM/pwm.cpp:61]   --->   Operation 57 'mul' 'p_Val2_s_4' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_43 = trunc i33 %p_Val2_s_4 to i15" [PWM/pwm.cpp:61]   --->   Operation 58 'trunc' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%m_V_addr_4 = getelementptr [6 x i16]* %m_V, i64 0, i64 3" [PWM/pwm.cpp:61]   --->   Operation 59 'getelementptr' 'm_V_addr_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [2/2] (2.32ns)   --->   "%m_V_load_4 = load i16* %m_V_addr_4, align 2" [PWM/pwm.cpp:61]   --->   Operation 60 'load' 'm_V_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_4 : Operation 61 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_17_1 = icmp ult i16 %acc_load, %tmp_22" [PWM/pwm.cpp:66]   --->   Operation 61 'icmp' 'tmp_17_1' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 8.70>
ST_5 : Operation 62 [1/1] (2.59ns)   --->   "%r_V_2_2 = add i33 %tmp_6_cast, %p_Val2_s_4" [PWM/pwm.cpp:61]   --->   Operation 62 'add' 'r_V_2_2' <Predicate = true> <Delay = 2.59> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_2)   --->   "%tmp_42 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_2_2, i32 32)" [PWM/pwm.cpp:61]   --->   Operation 63 'bitselect' 'tmp_42' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (2.31ns)   --->   "%tmp_12_2 = icmp eq i15 %tmp_43, 0" [PWM/pwm.cpp:61]   --->   Operation 64 'icmp' 'tmp_12_2' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_23 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_2_2, i32 15, i32 30)" [PWM/pwm.cpp:61]   --->   Operation 65 'partselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (2.07ns)   --->   "%tmp_24 = add i16 1, %tmp_23" [PWM/pwm.cpp:61]   --->   Operation 66 'add' 'tmp_24' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_2)   --->   "%tmp_25 = select i1 %tmp_12_2, i16 %tmp_23, i16 %tmp_24" [PWM/pwm.cpp:61]   --->   Operation 67 'select' 'tmp_25' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_2)   --->   "%tmp_26 = select i1 %tmp_42, i16 %tmp_25, i16 %tmp_23" [PWM/pwm.cpp:61]   --->   Operation 68 'select' 'tmp_26' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 69 [1/2] (2.32ns)   --->   "%m_V_load_4 = load i16* %m_V_addr_4, align 2" [PWM/pwm.cpp:61]   --->   Operation 69 'load' 'm_V_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%OP2_V_3_cast = sext i16 %m_V_load_4 to i33" [PWM/pwm.cpp:61]   --->   Operation 70 'sext' 'OP2_V_3_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (6.38ns)   --->   "%p_Val2_3 = mul i33 %OP1_V_1_cast, %OP2_V_3_cast" [PWM/pwm.cpp:61]   --->   Operation 71 'mul' 'p_Val2_3' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_45 = trunc i33 %p_Val2_3 to i15" [PWM/pwm.cpp:61]   --->   Operation 72 'trunc' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%m_V_addr_5 = getelementptr [6 x i16]* %m_V, i64 0, i64 4" [PWM/pwm.cpp:61]   --->   Operation 73 'getelementptr' 'm_V_addr_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 74 [2/2] (2.32ns)   --->   "%m_V_load_5 = load i16* %m_V_addr_5, align 2" [PWM/pwm.cpp:61]   --->   Operation 74 'load' 'm_V_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_5 : Operation 75 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_17_2 = icmp ult i16 %acc_load, %tmp_26" [PWM/pwm.cpp:66]   --->   Operation 75 'icmp' 'tmp_17_2' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 8.70>
ST_6 : Operation 76 [1/1] (2.59ns)   --->   "%r_V_2_3 = add i33 %tmp_6_cast, %p_Val2_3" [PWM/pwm.cpp:61]   --->   Operation 76 'add' 'r_V_2_3' <Predicate = true> <Delay = 2.59> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_3)   --->   "%tmp_44 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_2_3, i32 32)" [PWM/pwm.cpp:61]   --->   Operation 77 'bitselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (2.31ns)   --->   "%tmp_12_3 = icmp eq i15 %tmp_45, 0" [PWM/pwm.cpp:61]   --->   Operation 78 'icmp' 'tmp_12_3' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_27 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_2_3, i32 15, i32 30)" [PWM/pwm.cpp:61]   --->   Operation 79 'partselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (2.07ns)   --->   "%tmp_28 = add i16 1, %tmp_27" [PWM/pwm.cpp:61]   --->   Operation 80 'add' 'tmp_28' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_3)   --->   "%tmp_29 = select i1 %tmp_12_3, i16 %tmp_27, i16 %tmp_28" [PWM/pwm.cpp:61]   --->   Operation 81 'select' 'tmp_29' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_3)   --->   "%tmp_30 = select i1 %tmp_44, i16 %tmp_29, i16 %tmp_27" [PWM/pwm.cpp:61]   --->   Operation 82 'select' 'tmp_30' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 83 [1/2] (2.32ns)   --->   "%m_V_load_5 = load i16* %m_V_addr_5, align 2" [PWM/pwm.cpp:61]   --->   Operation 83 'load' 'm_V_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%OP2_V_4_cast = sext i16 %m_V_load_5 to i33" [PWM/pwm.cpp:61]   --->   Operation 84 'sext' 'OP2_V_4_cast' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (6.38ns)   --->   "%p_Val2_4 = mul i33 %OP1_V_1_cast, %OP2_V_4_cast" [PWM/pwm.cpp:61]   --->   Operation 85 'mul' 'p_Val2_4' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_47 = trunc i33 %p_Val2_4 to i15" [PWM/pwm.cpp:61]   --->   Operation 86 'trunc' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%m_V_addr_6 = getelementptr [6 x i16]* %m_V, i64 0, i64 5" [PWM/pwm.cpp:61]   --->   Operation 87 'getelementptr' 'm_V_addr_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 88 [2/2] (2.32ns)   --->   "%m_V_load_6 = load i16* %m_V_addr_6, align 2" [PWM/pwm.cpp:61]   --->   Operation 88 'load' 'm_V_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_6 : Operation 89 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_17_3 = icmp ult i16 %acc_load, %tmp_30" [PWM/pwm.cpp:66]   --->   Operation 89 'icmp' 'tmp_17_3' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 8.70>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "%m_V_addr = getelementptr [6 x i16]* %m_V, i64 0, i64 6" [PWM/pwm.cpp:58]   --->   Operation 90 'getelementptr' 'm_V_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 91 [2/2] (2.32ns)   --->   "%m_V_load = load i16* %m_V_addr, align 2" [PWM/pwm.cpp:58]   --->   Operation 91 'load' 'm_V_load' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_7 : Operation 92 [1/1] (2.59ns)   --->   "%r_V_2_4 = add i33 %tmp_6_cast, %p_Val2_4" [PWM/pwm.cpp:61]   --->   Operation 92 'add' 'r_V_2_4' <Predicate = true> <Delay = 2.59> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_4)   --->   "%tmp_46 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_2_4, i32 32)" [PWM/pwm.cpp:61]   --->   Operation 93 'bitselect' 'tmp_46' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (2.31ns)   --->   "%tmp_12_4 = icmp eq i15 %tmp_47, 0" [PWM/pwm.cpp:61]   --->   Operation 94 'icmp' 'tmp_12_4' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_31 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_2_4, i32 15, i32 30)" [PWM/pwm.cpp:61]   --->   Operation 95 'partselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 96 [1/1] (2.07ns)   --->   "%tmp_32 = add i16 1, %tmp_31" [PWM/pwm.cpp:61]   --->   Operation 96 'add' 'tmp_32' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_4)   --->   "%tmp_33 = select i1 %tmp_12_4, i16 %tmp_31, i16 %tmp_32" [PWM/pwm.cpp:61]   --->   Operation 97 'select' 'tmp_33' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_4)   --->   "%tmp_34 = select i1 %tmp_46, i16 %tmp_33, i16 %tmp_31" [PWM/pwm.cpp:61]   --->   Operation 98 'select' 'tmp_34' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 99 [1/2] (2.32ns)   --->   "%m_V_load_6 = load i16* %m_V_addr_6, align 2" [PWM/pwm.cpp:61]   --->   Operation 99 'load' 'm_V_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_7 : Operation 100 [1/1] (0.00ns)   --->   "%OP2_V_5_cast = sext i16 %m_V_load_6 to i33" [PWM/pwm.cpp:61]   --->   Operation 100 'sext' 'OP2_V_5_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 101 [1/1] (6.38ns)   --->   "%p_Val2_5 = mul i33 %OP1_V_1_cast, %OP2_V_5_cast" [PWM/pwm.cpp:61]   --->   Operation 101 'mul' 'p_Val2_5' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_49 = trunc i33 %p_Val2_5 to i15" [PWM/pwm.cpp:61]   --->   Operation 102 'trunc' 'tmp_49' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 103 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_17_4 = icmp ult i16 %acc_load, %tmp_34" [PWM/pwm.cpp:66]   --->   Operation 103 'icmp' 'tmp_17_4' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 8.07>
ST_8 : Operation 104 [1/2] (2.32ns)   --->   "%m_V_load = load i16* %m_V_addr, align 2" [PWM/pwm.cpp:58]   --->   Operation 104 'load' 'm_V_load' <Predicate = true> <Delay = 2.32> <Core = "RAM_1P">   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "%OP1_V_cast1 = sext i16 %m_V_load to i19" [PWM/pwm.cpp:58]   --->   Operation 105 'sext' 'OP1_V_cast1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "%p_shl = call i18 @_ssdm_op_BitConcatenate.i18.i16.i2(i16 %m_V_load, i2 0)" [PWM/pwm.cpp:58]   --->   Operation 106 'bitconcatenate' 'p_shl' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 107 [1/1] (0.00ns)   --->   "%p_shl_cast = sext i18 %p_shl to i19" [PWM/pwm.cpp:58]   --->   Operation 107 'sext' 'p_shl_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 108 [1/1] (2.13ns)   --->   "%r_V = sub i19 %p_shl_cast, %OP1_V_cast1" [PWM/pwm.cpp:58]   --->   Operation 108 'sub' 'r_V' <Predicate = true> <Delay = 2.13> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 109 [1/1] (2.43ns)   --->   "%tmp_5 = icmp sgt i19 %r_V, 32768" [PWM/pwm.cpp:58]   --->   Operation 109 'icmp' 'tmp_5' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 110 [1/1] (2.59ns)   --->   "%r_V_2_5 = add i33 %tmp_6_cast, %p_Val2_5" [PWM/pwm.cpp:61]   --->   Operation 110 'add' 'r_V_2_5' <Predicate = true> <Delay = 2.59> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_5)   --->   "%tmp_48 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_2_5, i32 32)" [PWM/pwm.cpp:61]   --->   Operation 111 'bitselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 112 [1/1] (2.31ns)   --->   "%tmp_12_5 = icmp eq i15 %tmp_49, 0" [PWM/pwm.cpp:61]   --->   Operation 112 'icmp' 'tmp_12_5' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_35 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_2_5, i32 15, i32 30)" [PWM/pwm.cpp:61]   --->   Operation 113 'partselect' 'tmp_35' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 114 [1/1] (2.07ns)   --->   "%tmp_36 = add i16 1, %tmp_35" [PWM/pwm.cpp:61]   --->   Operation 114 'add' 'tmp_36' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_5)   --->   "%tmp_37 = select i1 %tmp_12_5, i16 %tmp_35, i16 %tmp_36" [PWM/pwm.cpp:61]   --->   Operation 115 'select' 'tmp_37' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node tmp_17_5)   --->   "%tmp_38 = select i1 %tmp_48, i16 %tmp_37, i16 %tmp_35" [PWM/pwm.cpp:61]   --->   Operation 116 'select' 'tmp_38' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 117 [1/1] (0.00ns)   --->   "%out_p_V_load = load i6* @out_p_V, align 1" [PWM/pwm.cpp:66]   --->   Operation 117 'load' 'out_p_V_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_0_trunc)   --->   "%tmp_50 = trunc i6 %out_p_V_load to i1" [PWM/pwm.cpp:66]   --->   Operation 118 'trunc' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_0_trunc)   --->   "%tmp_20_s = and i1 %tmp_50, %tmp_17" [PWM/pwm.cpp:66]   --->   Operation 119 'and' 'tmp_20_s' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_0_trunc)   --->   "%tmp_2 = or i1 %tmp_20_s, %tmp_7" [PWM/pwm.cpp:66]   --->   Operation 120 'or' 'tmp_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 121 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_0_trunc = and i1 %tmp_2, %tmp_9" [PWM/pwm.cpp:66]   --->   Operation 121 'and' 'p_Repl2_0_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1_trunc)   --->   "%tmp_51 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %out_p_V_load, i32 1)" [PWM/pwm.cpp:66]   --->   Operation 122 'bitselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1_trunc)   --->   "%tmp_20_1 = and i1 %tmp_51, %tmp_17_1" [PWM/pwm.cpp:66]   --->   Operation 123 'and' 'tmp_20_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1_trunc)   --->   "%tmp_8 = or i1 %tmp_20_1, %tmp_7" [PWM/pwm.cpp:66]   --->   Operation 124 'or' 'tmp_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 125 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_1_trunc = and i1 %tmp_8, %tmp_9" [PWM/pwm.cpp:66]   --->   Operation 125 'and' 'p_Repl2_1_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_2_trunc)   --->   "%tmp_52 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %out_p_V_load, i32 2)" [PWM/pwm.cpp:66]   --->   Operation 126 'bitselect' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_2_trunc)   --->   "%tmp_20_2 = and i1 %tmp_52, %tmp_17_2" [PWM/pwm.cpp:66]   --->   Operation 127 'and' 'tmp_20_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_2_trunc)   --->   "%tmp_10 = or i1 %tmp_20_2, %tmp_7" [PWM/pwm.cpp:66]   --->   Operation 128 'or' 'tmp_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 129 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_2_trunc = and i1 %tmp_10, %tmp_9" [PWM/pwm.cpp:66]   --->   Operation 129 'and' 'p_Repl2_2_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_3_trunc)   --->   "%tmp_53 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %out_p_V_load, i32 3)" [PWM/pwm.cpp:66]   --->   Operation 130 'bitselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_3_trunc)   --->   "%tmp_20_3 = and i1 %tmp_53, %tmp_17_3" [PWM/pwm.cpp:66]   --->   Operation 131 'and' 'tmp_20_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_3_trunc)   --->   "%tmp_11 = or i1 %tmp_20_3, %tmp_7" [PWM/pwm.cpp:66]   --->   Operation 132 'or' 'tmp_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 133 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_3_trunc = and i1 %tmp_11, %tmp_9" [PWM/pwm.cpp:66]   --->   Operation 133 'and' 'p_Repl2_3_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_4_trunc)   --->   "%tmp_54 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %out_p_V_load, i32 4)" [PWM/pwm.cpp:66]   --->   Operation 134 'bitselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_4_trunc)   --->   "%tmp_20_4 = and i1 %tmp_54, %tmp_17_4" [PWM/pwm.cpp:66]   --->   Operation 135 'and' 'tmp_20_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_4_trunc)   --->   "%tmp_16 = or i1 %tmp_20_4, %tmp_7" [PWM/pwm.cpp:66]   --->   Operation 136 'or' 'tmp_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 137 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_4_trunc = and i1 %tmp_16, %tmp_9" [PWM/pwm.cpp:66]   --->   Operation 137 'and' 'p_Repl2_4_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 138 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_17_5 = icmp ult i16 %acc_load, %tmp_38" [PWM/pwm.cpp:66]   --->   Operation 138 'icmp' 'tmp_17_5' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_5_trunc)   --->   "%tmp_55 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %out_p_V_load, i32 5)" [PWM/pwm.cpp:66]   --->   Operation 139 'bitselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_5_trunc)   --->   "%tmp_20_5 = and i1 %tmp_55, %tmp_17_5" [PWM/pwm.cpp:66]   --->   Operation 140 'and' 'tmp_20_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_5_trunc)   --->   "%tmp_18 = or i1 %tmp_20_5, %tmp_7" [PWM/pwm.cpp:66]   --->   Operation 141 'or' 'tmp_18' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 142 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Repl2_5_trunc = and i1 %tmp_18, %tmp_9" [PWM/pwm.cpp:66]   --->   Operation 142 'and' 'p_Repl2_5_trunc' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 1.18>
ST_9 : Operation 143 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %min_duty), !map !69"   --->   Operation 143 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 144 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %max_duty), !map !75"   --->   Operation 144 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 145 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %period), !map !79"   --->   Operation 145 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 146 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([6 x i16]* %m_V), !map !83"   --->   Operation 146 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 147 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i6* %out_V), !map !89"   --->   Operation 147 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 148 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @pwm_str) nounwind"   --->   Operation 148 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 149 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16 %min_duty, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [PWM/pwm.cpp:46]   --->   Operation 149 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 150 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16 %max_duty, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [PWM/pwm.cpp:47]   --->   Operation 150 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 151 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16 %period, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [PWM/pwm.cpp:48]   --->   Operation 151 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 152 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([6 x i16]* %m_V, [1 x i8]* @p_str4, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str4, i32 -1, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4)"   --->   Operation 152 'specmemcore' 'empty' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 153 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([6 x i16]* %m_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"   --->   Operation 153 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 154 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i6* %out_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [PWM/pwm.cpp:50]   --->   Operation 154 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 155 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [PWM/pwm.cpp:51]   --->   Operation 155 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 156 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [PWM/pwm.cpp:52]   --->   Operation 156 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 157 [1/1] (0.00ns)   --->   "%p_Result_4_5 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i1.i1.i1.i1.i1(i1 %p_Repl2_5_trunc, i1 %p_Repl2_4_trunc, i1 %p_Repl2_3_trunc, i1 %p_Repl2_2_trunc, i1 %p_Repl2_1_trunc, i1 %p_Repl2_0_trunc)" [PWM/pwm.cpp:66]   --->   Operation 157 'bitconcatenate' 'p_Result_4_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 158 [1/1] (0.00ns)   --->   "store i6 %p_Result_4_5, i6* @out_p_V, align 1" [PWM/pwm.cpp:66]   --->   Operation 158 'store' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 159 [1/1] (1.18ns)   --->   "%p_2 = select i1 %tmp_5, i6 0, i6 %p_Result_4_5" [PWM/pwm.cpp:71]   --->   Operation 159 'select' 'p_2' <Predicate = true> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 160 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i6P(i6* %out_V, i6 %p_2)" [PWM/pwm.cpp:71]   --->   Operation 160 'write' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 161 [1/1] (0.00ns)   --->   "ret void" [PWM/pwm.cpp:73]   --->   Operation 161 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('m_V_addr_1', PWM/pwm.cpp:61) [36]  (0 ns)
	'load' operation ('m_V_load_1', PWM/pwm.cpp:61) on array 'm_V' [37]  (2.32 ns)

 <State 2>: 8.7ns
The critical path consists of the following:
	'load' operation ('m_V_load_1', PWM/pwm.cpp:61) on array 'm_V' [37]  (2.32 ns)
	'mul' operation ('p_Val2_s', PWM/pwm.cpp:61) [39]  (6.38 ns)

 <State 3>: 8.7ns
The critical path consists of the following:
	'load' operation ('m_V_load_2', PWM/pwm.cpp:61) on array 'm_V' [51]  (2.32 ns)
	'mul' operation ('p_Val2_1', PWM/pwm.cpp:61) [53]  (6.38 ns)

 <State 4>: 8.7ns
The critical path consists of the following:
	'load' operation ('m_V_load_3', PWM/pwm.cpp:61) on array 'm_V' [63]  (2.32 ns)
	'mul' operation ('p_Val2_s_4', PWM/pwm.cpp:61) [65]  (6.38 ns)

 <State 5>: 8.7ns
The critical path consists of the following:
	'load' operation ('m_V_load_4', PWM/pwm.cpp:61) on array 'm_V' [75]  (2.32 ns)
	'mul' operation ('p_Val2_3', PWM/pwm.cpp:61) [77]  (6.38 ns)

 <State 6>: 8.7ns
The critical path consists of the following:
	'load' operation ('m_V_load_5', PWM/pwm.cpp:61) on array 'm_V' [87]  (2.32 ns)
	'mul' operation ('p_Val2_4', PWM/pwm.cpp:61) [89]  (6.38 ns)

 <State 7>: 8.7ns
The critical path consists of the following:
	'load' operation ('m_V_load_6', PWM/pwm.cpp:61) on array 'm_V' [99]  (2.32 ns)
	'mul' operation ('p_Val2_5', PWM/pwm.cpp:61) [101]  (6.38 ns)

 <State 8>: 8.08ns
The critical path consists of the following:
	'add' operation ('r_V_2_5', PWM/pwm.cpp:61) [102]  (2.59 ns)
	'add' operation ('tmp_36', PWM/pwm.cpp:61) [107]  (2.08 ns)
	'select' operation ('tmp_37', PWM/pwm.cpp:61) [108]  (0 ns)
	'select' operation ('tmp_38', PWM/pwm.cpp:61) [109]  (0 ns)
	'icmp' operation ('tmp_17_5', PWM/pwm.cpp:66) [139]  (2.43 ns)
	'and' operation ('tmp_20_5', PWM/pwm.cpp:66) [141]  (0 ns)
	'or' operation ('tmp_18', PWM/pwm.cpp:66) [142]  (0 ns)
	'and' operation ('p_Repl2_5_trunc', PWM/pwm.cpp:66) [143]  (0.978 ns)

 <State 9>: 1.19ns
The critical path consists of the following:
	'select' operation ('p_2', PWM/pwm.cpp:71) [150]  (1.19 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
