// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pid,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=23,HLS_SYN_TPT=23,HLS_SYN_MEM=20,HLS_SYN_DSP=114,HLS_SYN_FF=5679,HLS_SYN_LUT=6100,HLS_VERSION=2018_2}" *)

module pid (
        ap_clk,
        ap_rst_n,
        m_axi_OUT_r_AWVALID,
        m_axi_OUT_r_AWREADY,
        m_axi_OUT_r_AWADDR,
        m_axi_OUT_r_AWID,
        m_axi_OUT_r_AWLEN,
        m_axi_OUT_r_AWSIZE,
        m_axi_OUT_r_AWBURST,
        m_axi_OUT_r_AWLOCK,
        m_axi_OUT_r_AWCACHE,
        m_axi_OUT_r_AWPROT,
        m_axi_OUT_r_AWQOS,
        m_axi_OUT_r_AWREGION,
        m_axi_OUT_r_AWUSER,
        m_axi_OUT_r_WVALID,
        m_axi_OUT_r_WREADY,
        m_axi_OUT_r_WDATA,
        m_axi_OUT_r_WSTRB,
        m_axi_OUT_r_WLAST,
        m_axi_OUT_r_WID,
        m_axi_OUT_r_WUSER,
        m_axi_OUT_r_ARVALID,
        m_axi_OUT_r_ARREADY,
        m_axi_OUT_r_ARADDR,
        m_axi_OUT_r_ARID,
        m_axi_OUT_r_ARLEN,
        m_axi_OUT_r_ARSIZE,
        m_axi_OUT_r_ARBURST,
        m_axi_OUT_r_ARLOCK,
        m_axi_OUT_r_ARCACHE,
        m_axi_OUT_r_ARPROT,
        m_axi_OUT_r_ARQOS,
        m_axi_OUT_r_ARREGION,
        m_axi_OUT_r_ARUSER,
        m_axi_OUT_r_RVALID,
        m_axi_OUT_r_RREADY,
        m_axi_OUT_r_RDATA,
        m_axi_OUT_r_RLAST,
        m_axi_OUT_r_RID,
        m_axi_OUT_r_RUSER,
        m_axi_OUT_r_RRESP,
        m_axi_OUT_r_BVALID,
        m_axi_OUT_r_BREADY,
        m_axi_OUT_r_BRESP,
        m_axi_OUT_r_BID,
        m_axi_OUT_r_BUSER,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt,
        s_axi_INPUT_AWVALID,
        s_axi_INPUT_AWREADY,
        s_axi_INPUT_AWADDR,
        s_axi_INPUT_WVALID,
        s_axi_INPUT_WREADY,
        s_axi_INPUT_WDATA,
        s_axi_INPUT_WSTRB,
        s_axi_INPUT_ARVALID,
        s_axi_INPUT_ARREADY,
        s_axi_INPUT_ARADDR,
        s_axi_INPUT_RVALID,
        s_axi_INPUT_RREADY,
        s_axi_INPUT_RDATA,
        s_axi_INPUT_RRESP,
        s_axi_INPUT_BVALID,
        s_axi_INPUT_BREADY,
        s_axi_INPUT_BRESP,
        s_axi_TEST_AWVALID,
        s_axi_TEST_AWREADY,
        s_axi_TEST_AWADDR,
        s_axi_TEST_WVALID,
        s_axi_TEST_WREADY,
        s_axi_TEST_WDATA,
        s_axi_TEST_WSTRB,
        s_axi_TEST_ARVALID,
        s_axi_TEST_ARREADY,
        s_axi_TEST_ARADDR,
        s_axi_TEST_RVALID,
        s_axi_TEST_RREADY,
        s_axi_TEST_RDATA,
        s_axi_TEST_RRESP,
        s_axi_TEST_BVALID,
        s_axi_TEST_BREADY,
        s_axi_TEST_BRESP
);

parameter    ap_ST_iter0_fsm_state1 = 23'd1;
parameter    ap_ST_iter0_fsm_state2 = 23'd2;
parameter    ap_ST_iter0_fsm_state3 = 23'd4;
parameter    ap_ST_iter0_fsm_state4 = 23'd8;
parameter    ap_ST_iter0_fsm_state5 = 23'd16;
parameter    ap_ST_iter0_fsm_state6 = 23'd32;
parameter    ap_ST_iter0_fsm_state7 = 23'd64;
parameter    ap_ST_iter0_fsm_state8 = 23'd128;
parameter    ap_ST_iter0_fsm_state9 = 23'd256;
parameter    ap_ST_iter0_fsm_state10 = 23'd512;
parameter    ap_ST_iter0_fsm_state11 = 23'd1024;
parameter    ap_ST_iter0_fsm_state12 = 23'd2048;
parameter    ap_ST_iter0_fsm_state13 = 23'd4096;
parameter    ap_ST_iter0_fsm_state14 = 23'd8192;
parameter    ap_ST_iter0_fsm_state15 = 23'd16384;
parameter    ap_ST_iter0_fsm_state16 = 23'd32768;
parameter    ap_ST_iter0_fsm_state17 = 23'd65536;
parameter    ap_ST_iter0_fsm_state18 = 23'd131072;
parameter    ap_ST_iter0_fsm_state19 = 23'd262144;
parameter    ap_ST_iter0_fsm_state20 = 23'd524288;
parameter    ap_ST_iter0_fsm_state21 = 23'd1048576;
parameter    ap_ST_iter0_fsm_state22 = 23'd2097152;
parameter    ap_ST_iter0_fsm_state23 = 23'd4194304;
parameter    ap_ST_iter1_fsm_state24 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_ADDR_WIDTH = 6;
parameter    C_S_AXI_TEST_DATA_WIDTH = 32;
parameter    C_S_AXI_TEST_ADDR_WIDTH = 15;
parameter    C_M_AXI_OUT_R_ID_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_OUT_R_DATA_WIDTH = 32;
parameter    C_M_AXI_OUT_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_TARGET_ADDR = 0;
parameter    C_M_AXI_OUT_R_USER_VALUE = 0;
parameter    C_M_AXI_OUT_R_PROT_VALUE = 0;
parameter    C_M_AXI_OUT_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_INPUT_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_TEST_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUT_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_OUT_r_AWVALID;
input   m_axi_OUT_r_AWREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_AWADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_AWID;
output  [7:0] m_axi_OUT_r_AWLEN;
output  [2:0] m_axi_OUT_r_AWSIZE;
output  [1:0] m_axi_OUT_r_AWBURST;
output  [1:0] m_axi_OUT_r_AWLOCK;
output  [3:0] m_axi_OUT_r_AWCACHE;
output  [2:0] m_axi_OUT_r_AWPROT;
output  [3:0] m_axi_OUT_r_AWQOS;
output  [3:0] m_axi_OUT_r_AWREGION;
output  [C_M_AXI_OUT_R_AWUSER_WIDTH - 1:0] m_axi_OUT_r_AWUSER;
output   m_axi_OUT_r_WVALID;
input   m_axi_OUT_r_WREADY;
output  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_WDATA;
output  [C_M_AXI_OUT_R_WSTRB_WIDTH - 1:0] m_axi_OUT_r_WSTRB;
output   m_axi_OUT_r_WLAST;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_WID;
output  [C_M_AXI_OUT_R_WUSER_WIDTH - 1:0] m_axi_OUT_r_WUSER;
output   m_axi_OUT_r_ARVALID;
input   m_axi_OUT_r_ARREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_ARADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_ARID;
output  [7:0] m_axi_OUT_r_ARLEN;
output  [2:0] m_axi_OUT_r_ARSIZE;
output  [1:0] m_axi_OUT_r_ARBURST;
output  [1:0] m_axi_OUT_r_ARLOCK;
output  [3:0] m_axi_OUT_r_ARCACHE;
output  [2:0] m_axi_OUT_r_ARPROT;
output  [3:0] m_axi_OUT_r_ARQOS;
output  [3:0] m_axi_OUT_r_ARREGION;
output  [C_M_AXI_OUT_R_ARUSER_WIDTH - 1:0] m_axi_OUT_r_ARUSER;
input   m_axi_OUT_r_RVALID;
output   m_axi_OUT_r_RREADY;
input  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_RDATA;
input   m_axi_OUT_r_RLAST;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_RID;
input  [C_M_AXI_OUT_R_RUSER_WIDTH - 1:0] m_axi_OUT_r_RUSER;
input  [1:0] m_axi_OUT_r_RRESP;
input   m_axi_OUT_r_BVALID;
output   m_axi_OUT_r_BREADY;
input  [1:0] m_axi_OUT_r_BRESP;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_BID;
input  [C_M_AXI_OUT_R_BUSER_WIDTH - 1:0] m_axi_OUT_r_BUSER;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;
input   s_axi_INPUT_AWVALID;
output   s_axi_INPUT_AWREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_AWADDR;
input   s_axi_INPUT_WVALID;
output   s_axi_INPUT_WREADY;
input  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_WDATA;
input  [C_S_AXI_INPUT_WSTRB_WIDTH - 1:0] s_axi_INPUT_WSTRB;
input   s_axi_INPUT_ARVALID;
output   s_axi_INPUT_ARREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_ARADDR;
output   s_axi_INPUT_RVALID;
input   s_axi_INPUT_RREADY;
output  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_RDATA;
output  [1:0] s_axi_INPUT_RRESP;
output   s_axi_INPUT_BVALID;
input   s_axi_INPUT_BREADY;
output  [1:0] s_axi_INPUT_BRESP;
input   s_axi_TEST_AWVALID;
output   s_axi_TEST_AWREADY;
input  [C_S_AXI_TEST_ADDR_WIDTH - 1:0] s_axi_TEST_AWADDR;
input   s_axi_TEST_WVALID;
output   s_axi_TEST_WREADY;
input  [C_S_AXI_TEST_DATA_WIDTH - 1:0] s_axi_TEST_WDATA;
input  [C_S_AXI_TEST_WSTRB_WIDTH - 1:0] s_axi_TEST_WSTRB;
input   s_axi_TEST_ARVALID;
output   s_axi_TEST_ARREADY;
input  [C_S_AXI_TEST_ADDR_WIDTH - 1:0] s_axi_TEST_ARADDR;
output   s_axi_TEST_RVALID;
input   s_axi_TEST_RREADY;
output  [C_S_AXI_TEST_DATA_WIDTH - 1:0] s_axi_TEST_RDATA;
output  [1:0] s_axi_TEST_RRESP;
output   s_axi_TEST_BVALID;
input   s_axi_TEST_BREADY;
output  [1:0] s_axi_TEST_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
reg   [22:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg    ap_ready;
wire    ap_CS_iter0_fsm_state23;
wire    ap_block_state23_pp0_stage22_iter0;
reg    OUT_r_AWVALID;
wire    OUT_r_AWREADY;
reg    OUT_r_WVALID;
wire    OUT_r_WREADY;
wire    OUT_r_ARREADY;
wire    OUT_r_RVALID;
wire   [15:0] OUT_r_RDATA;
wire    OUT_r_RLAST;
wire   [0:0] OUT_r_RID;
wire   [0:0] OUT_r_RUSER;
wire   [1:0] OUT_r_RRESP;
wire    OUT_r_BVALID;
reg    OUT_r_BREADY;
wire   [1:0] OUT_r_BRESP;
wire   [0:0] OUT_r_BID;
wire   [0:0] OUT_r_BUSER;
reg    ap_block_state24_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state24;
reg   [2:0] cmdIn_V_address0;
reg    cmdIn_V_ce0;
wire   [15:0] cmdIn_V_q0;
reg   [2:0] measured_V_address0;
reg    measured_V_ce0;
wire   [15:0] measured_V_q0;
reg   [2:0] kp_V_address0;
reg    kp_V_ce0;
wire   [31:0] kp_V_q0;
reg   [1:0] kd_V_address0;
reg    kd_V_ce0;
wire   [31:0] kd_V_q0;
reg   [1:0] ki_V_address0;
reg    ki_V_ce0;
wire   [31:0] ki_V_q0;
reg   [11:0] test_V_address0;
reg    test_V_ce0;
reg    test_V_we0;
reg   [31:0] test_V_d0;
reg   [31:0] integral_pos_V_0;
reg   [15:0] last_error_pos_V_0;
reg   [31:0] integral_pos_V_1;
reg   [15:0] last_error_pos_V_1;
reg   [31:0] integral_rate_V_0;
reg   [15:0] last_error_rate_V_0;
reg   [31:0] integral_rate_V_1;
reg   [15:0] last_error_rate_V_1;
reg    OUT_r_blk_n_AW;
wire    ap_CS_iter0_fsm_state11;
reg    OUT_r_blk_n_W;
wire    ap_CS_iter0_fsm_state12;
wire    ap_CS_iter0_fsm_state13;
wire    ap_CS_iter0_fsm_state14;
wire    ap_CS_iter0_fsm_state15;
wire    ap_CS_iter0_fsm_state16;
wire    ap_CS_iter0_fsm_state17;
wire    ap_CS_iter0_fsm_state18;
wire    ap_CS_iter0_fsm_state19;
reg    OUT_r_blk_n_B;
reg   [31:0] reg_620;
wire    ap_CS_iter0_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
reg   [0:0] tmp_3_reg_2544;
wire    ap_CS_iter0_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_CS_iter0_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_CS_iter0_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
reg   [31:0] reg_624;
reg   [31:0] reg_628;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_CS_iter0_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire  signed [31:0] tmp_6_5_cast_fu_640_p1;
wire   [0:0] tmp_3_fu_645_p2;
reg   [15:0] p_Val2_34_reg_2551;
reg   [31:0] kp_V_load_3_reg_2556;
reg   [31:0] ki_V_load_2_reg_2561;
reg   [31:0] kd_V_load_2_reg_2566;
reg  signed [15:0] p_Val2_s_reg_2571;
wire  signed [31:0] tmp_6_1_cast_fu_659_p1;
wire  signed [19:0] p_Val2_3_fu_678_p3;
reg  signed [19:0] p_Val2_3_reg_2591;
wire   [20:0] p_Val2_8_fu_706_p2;
reg   [20:0] p_Val2_8_reg_2597;
reg  signed [15:0] p_Val2_13_reg_2622;
wire  signed [31:0] tmp_6_2_cast_fu_730_p1;
wire  signed [31:0] tmp_4_fu_774_p3;
reg  signed [31:0] tmp_4_reg_2642;
wire   [47:0] p_Val2_7_fu_795_p2;
reg   [47:0] p_Val2_7_reg_2647;
wire   [47:0] p_Val2_10_fu_808_p2;
reg   [47:0] p_Val2_10_reg_2652;
wire  signed [19:0] p_Val2_16_fu_828_p3;
reg  signed [19:0] p_Val2_16_reg_2657;
wire   [20:0] p_Val2_19_fu_856_p2;
reg   [20:0] p_Val2_19_reg_2663;
reg   [31:0] ki_V_load_1_reg_2668;
reg  signed [15:0] p_Val2_25_reg_2698;
wire  signed [31:0] tmp_6_3_cast_fu_880_p1;
wire   [47:0] p_Val2_9_fu_892_p2;
reg   [47:0] p_Val2_9_reg_2713;
wire  signed [31:0] tmp_17_fu_937_p3;
reg  signed [31:0] tmp_17_reg_2718;
wire   [47:0] p_Val2_20_fu_958_p2;
reg   [47:0] p_Val2_20_reg_2723;
wire   [47:0] p_Val2_23_fu_971_p2;
reg   [47:0] p_Val2_23_reg_2728;
wire   [16:0] r_V_fu_985_p2;
reg   [16:0] r_V_reg_2733;
reg   [15:0] p_Val2_60_reg_2748;
wire  signed [31:0] t_command_V_cast_fu_999_p1;
wire   [47:0] p_Val2_21_fu_1047_p2;
reg   [47:0] p_Val2_21_reg_2768;
reg   [15:0] phitmp1_reg_2773;
wire   [15:0] tmp_27_fu_1090_p3;
reg   [15:0] tmp_27_reg_2778;
reg   [15:0] p_Val2_56_reg_2783;
wire  signed [31:0] tmp_6_4_cast_fu_1106_p1;
wire    ap_CS_iter0_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
wire   [15:0] tmp_29_fu_1166_p3;
reg   [15:0] tmp_29_reg_2808;
reg   [15:0] p_Val2_59_reg_2813;
reg   [31:0] kp_V_load_5_reg_2818;
wire  signed [19:0] p_Val2_36_fu_1199_p3;
reg  signed [19:0] p_Val2_36_reg_2823;
wire    ap_CS_iter0_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
wire   [20:0] p_Val2_39_fu_1227_p2;
reg   [20:0] p_Val2_39_reg_2829;
wire   [16:0] p_Val2_45_fu_1250_p2;
reg   [16:0] p_Val2_45_reg_2834;
wire   [15:0] tmp_53_fu_1256_p1;
reg   [15:0] tmp_53_reg_2839;
wire  signed [31:0] tmp_35_fu_1305_p3;
reg  signed [31:0] tmp_35_reg_2844;
wire    ap_CS_iter0_fsm_state9;
wire    ap_block_state9_pp0_stage8_iter0;
wire   [47:0] p_Val2_40_fu_1325_p2;
reg   [47:0] p_Val2_40_reg_2849;
wire   [47:0] p_Val2_43_fu_1337_p2;
reg   [47:0] p_Val2_43_reg_2854;
wire  signed [31:0] tmp_47_fu_1394_p3;
reg  signed [31:0] tmp_47_reg_2859;
wire   [20:0] p_Val2_49_fu_1424_p2;
reg   [20:0] p_Val2_49_reg_2864;
wire   [47:0] p_Val2_50_fu_1438_p2;
reg   [47:0] p_Val2_50_reg_2869;
wire   [16:0] r_V_1_fu_1456_p2;
reg   [16:0] r_V_1_reg_2874;
wire   [47:0] p_Val2_41_fu_1468_p2;
reg   [47:0] p_Val2_41_reg_2879;
wire    ap_CS_iter0_fsm_state10;
wire    ap_block_state10_pp0_stage9_iter0;
wire   [47:0] p_Val2_51_fu_1481_p2;
reg   [47:0] p_Val2_51_reg_2884;
wire   [47:0] p_Val2_53_fu_1494_p2;
reg   [47:0] p_Val2_53_reg_2889;
wire   [31:0] tmp_56_fu_1594_p3;
reg   [31:0] tmp_56_reg_2894;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_sig_ioackin_OUT_r_AWREADY;
wire   [31:0] tmp_57_fu_1610_p3;
reg   [31:0] tmp_57_reg_2899;
reg   [31:0] tmp_58_reg_2904;
wire   [49:0] r_V_2_fu_1685_p2;
reg  signed [49:0] r_V_2_reg_2909;
wire    ap_block_state12_pp0_stage11_iter0;
reg    ap_sig_ioackin_OUT_r_WREADY;
wire   [49:0] r_V_2_1_fu_1701_p2;
reg  signed [49:0] r_V_2_1_reg_2914;
wire   [49:0] addconv2_fu_1707_p2;
reg  signed [49:0] addconv2_reg_2919;
wire   [49:0] r_V_2_3_fu_1723_p2;
reg  signed [49:0] r_V_2_3_reg_2924;
wire   [49:0] r_V_2_4_fu_1729_p2;
reg  signed [49:0] r_V_2_4_reg_2929;
wire   [49:0] r_V_2_5_fu_1735_p2;
reg  signed [49:0] r_V_2_5_reg_2934;
wire   [49:0] addconv4_fu_1741_p2;
reg  signed [49:0] addconv4_reg_2939;
wire   [49:0] r_V_2_7_fu_1747_p2;
reg  signed [49:0] r_V_2_7_reg_2944;
wire    ap_block_state13_pp0_stage12_iter0;
wire   [63:0] grp_fu_1756_p2;
reg   [63:0] p_Val2_63_reg_2989;
wire    ap_block_state14_pp0_stage13_iter0;
wire   [63:0] grp_fu_1765_p2;
reg   [63:0] p_Val2_68_1_reg_2994;
wire   [63:0] grp_fu_1774_p2;
reg   [63:0] p_Val2_68_2_reg_2999;
wire   [63:0] grp_fu_1783_p2;
reg   [63:0] p_Val2_68_3_reg_3004;
wire   [63:0] grp_fu_1792_p2;
reg   [63:0] p_Val2_68_4_reg_3009;
wire   [63:0] grp_fu_1801_p2;
reg   [63:0] p_Val2_68_5_reg_3014;
wire   [63:0] grp_fu_1810_p2;
reg   [63:0] p_Val2_68_6_reg_3019;
wire   [63:0] grp_fu_1819_p2;
reg   [63:0] p_Val2_68_7_reg_3024;
wire   [31:0] test_buffer_V_load_fu_1909_p3;
reg   [31:0] test_buffer_V_load_reg_3029;
wire    ap_block_state15_pp0_stage14_iter0;
wire   [31:0] test_buffer_V_load_1_fu_1990_p3;
reg   [31:0] test_buffer_V_load_1_reg_3034;
wire   [31:0] test_buffer_V_load_2_fu_2071_p3;
reg   [31:0] test_buffer_V_load_2_reg_3039;
wire   [31:0] test_buffer_V_load_3_fu_2152_p3;
reg   [31:0] test_buffer_V_load_3_reg_3044;
wire   [31:0] test_buffer_V_load_4_fu_2233_p3;
reg   [31:0] test_buffer_V_load_4_reg_3049;
wire   [31:0] test_buffer_V_load_5_fu_2314_p3;
reg   [31:0] test_buffer_V_load_5_reg_3054;
wire   [31:0] test_buffer_V_load_6_fu_2395_p3;
reg   [31:0] test_buffer_V_load_6_reg_3059;
wire   [31:0] storemerge_7_fu_2476_p3;
reg   [31:0] storemerge_7_reg_3064;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_CS_iter0_fsm_state20;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_CS_iter0_fsm_state21;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_CS_iter0_fsm_state22;
wire    ap_block_state22_pp0_stage21_iter0;
reg   [15:0] ap_phi_mux_p_Val2_29_phi_fu_591_p4;
reg   [15:0] ap_phi_mux_p_Val2_30_phi_fu_602_p4;
reg   [15:0] ap_phi_reg_pp0_iter0_p_Val2_28_reg_609;
reg    ap_reg_ioackin_OUT_r_AWREADY;
reg    ap_reg_ioackin_OUT_r_WREADY;
wire   [15:0] tmp_11_fu_712_p1;
wire   [15:0] tmp_23_fu_862_p1;
wire   [15:0] tmp_41_fu_1233_p1;
wire   [18:0] tmp_6_5_fu_632_p3;
wire  signed [15:0] tmp_6_1_fu_651_p1;
wire   [18:0] tmp_6_1_fu_651_p3;
wire  signed [15:0] tmp_8_fu_664_p0;
wire  signed [16:0] tmp_8_fu_664_p1;
wire  signed [16:0] tmp_9_fu_668_p1;
wire   [16:0] p_Val2_2_fu_672_p2;
wire   [18:0] tmp_6_fu_694_p3;
wire  signed [20:0] p_Val2_3_cast_fu_686_p1;
wire  signed [20:0] tmp_6_cast_fu_702_p1;
wire  signed [15:0] tmp_6_2_fu_722_p1;
wire   [18:0] tmp_6_2_fu_722_p3;
wire  signed [31:0] p_Val2_3_cast1_fu_735_p1;
wire   [31:0] p_Val2_6_fu_742_p2;
wire   [0:0] tmp_1_fu_748_p2;
wire   [0:0] tmp_2_fu_754_p2;
wire   [0:0] tmp_fu_768_p2;
wire   [31:0] p_Val2_6_cast_fu_760_p3;
wire  signed [31:0] p_Val2_7_fu_795_p0;
wire  signed [19:0] p_Val2_7_fu_795_p1;
wire  signed [31:0] p_Val2_10_fu_808_p0;
wire  signed [20:0] p_Val2_10_fu_808_p1;
wire  signed [15:0] tmp_12_fu_814_p0;
wire  signed [16:0] tmp_12_fu_814_p1;
wire  signed [16:0] tmp_13_fu_818_p1;
wire   [16:0] p_Val2_15_fu_822_p2;
wire   [18:0] tmp_18_fu_844_p3;
wire  signed [20:0] p_Val2_16_cast_fu_836_p1;
wire  signed [20:0] tmp_27_cast_fu_852_p1;
wire  signed [15:0] tmp_6_3_fu_872_p1;
wire   [18:0] tmp_6_3_fu_872_p3;
wire  signed [31:0] p_Val2_9_fu_892_p0;
wire  signed [31:0] p_Val2_9_fu_892_p1;
wire  signed [31:0] p_Val2_16_cast1_fu_898_p1;
wire   [31:0] p_Val2_s_10_fu_905_p2;
wire   [0:0] tmp_14_fu_911_p2;
wire   [0:0] tmp_15_fu_917_p2;
wire   [0:0] tmp_16_fu_931_p2;
wire   [31:0] p_Val2_cast_fu_923_p3;
wire  signed [31:0] p_Val2_20_fu_958_p0;
wire  signed [19:0] p_Val2_20_fu_958_p1;
wire  signed [31:0] p_Val2_23_fu_971_p0;
wire  signed [20:0] p_Val2_23_fu_971_p1;
wire  signed [15:0] tmp_24_fu_977_p0;
wire  signed [16:0] tmp_24_fu_977_p1;
wire  signed [16:0] tmp_25_fu_981_p1;
wire   [18:0] t_command_V_fu_991_p3;
wire   [47:0] p_Val2_11_fu_1004_p2;
wire   [47:0] p_Val2_12_fu_1008_p2;
wire   [31:0] tmp_5_fu_1013_p4;
wire   [0:0] tmp_7_fu_1023_p2;
wire   [0:0] tmp_s_fu_1029_p2;
wire  signed [31:0] p_Val2_21_fu_1047_p0;
wire  signed [31:0] p_Val2_21_fu_1047_p1;
wire  signed [31:0] p_Val2_27_fu_1056_p0;
wire  signed [16:0] p_Val2_27_fu_1056_p1;
wire   [31:0] p_Val2_27_fu_1056_p2;
wire   [0:0] tmp_10_fu_1035_p2;
wire   [15:0] tmp_26_cast_fu_1072_p3;
wire   [15:0] tmp_26_fu_1080_p4;
wire   [18:0] tmp_6_4_fu_1098_p3;
wire   [47:0] p_Val2_22_fu_1111_p2;
wire   [47:0] p_Val2_24_fu_1115_p2;
wire   [31:0] tmp_19_fu_1120_p4;
wire   [0:0] tmp_20_fu_1130_p2;
wire   [0:0] tmp_21_fu_1136_p2;
wire   [0:0] tmp_22_fu_1142_p2;
wire   [15:0] tmp_29_cast_fu_1148_p3;
wire   [15:0] tmp_28_fu_1156_p4;
wire   [15:0] p_Val2_33_fu_1180_p3;
wire  signed [16:0] tmp_30_fu_1186_p1;
wire  signed [16:0] tmp_31_fu_1190_p1;
wire   [16:0] p_Val2_35_fu_1193_p2;
wire   [18:0] tmp_36_fu_1215_p3;
wire  signed [20:0] p_Val2_36_cast_fu_1207_p1;
wire  signed [20:0] tmp_51_cast_fu_1223_p1;
wire   [15:0] p_Val2_32_fu_1174_p3;
wire  signed [16:0] tmp_42_fu_1243_p1;
wire  signed [16:0] tmp_43_fu_1247_p1;
wire  signed [31:0] p_Val2_36_cast9_fu_1266_p1;
wire   [31:0] p_Val2_38_fu_1273_p2;
wire   [0:0] tmp_32_fu_1279_p2;
wire   [0:0] tmp_33_fu_1285_p2;
wire   [0:0] tmp_34_fu_1299_p2;
wire   [31:0] p_Val2_1_cast_fu_1291_p3;
wire  signed [19:0] p_Val2_40_fu_1325_p0;
wire  signed [31:0] p_Val2_40_fu_1325_p1;
wire  signed [20:0] p_Val2_43_fu_1337_p0;
wire  signed [31:0] p_Val2_43_fu_1337_p1;
wire  signed [19:0] p_Val2_47_fu_1343_p3;
wire  signed [31:0] p_Val2_47_cast8_fu_1350_p1;
wire   [31:0] p_Val2_48_fu_1362_p2;
wire   [0:0] tmp_44_fu_1368_p2;
wire   [0:0] tmp_45_fu_1374_p2;
wire   [0:0] tmp_46_fu_1388_p2;
wire   [31:0] p_Val2_2_cast_fu_1380_p3;
wire   [18:0] tmp_48_fu_1412_p3;
wire  signed [20:0] p_Val2_47_cast_fu_1354_p1;
wire  signed [20:0] tmp_68_cast_fu_1420_p1;
wire  signed [19:0] p_Val2_50_fu_1438_p0;
wire  signed [31:0] p_Val2_50_fu_1438_p1;
wire   [15:0] p_Val2_31_fu_1260_p3;
wire  signed [16:0] tmp_54_fu_1449_p1;
wire  signed [16:0] tmp_55_fu_1453_p1;
wire  signed [31:0] p_Val2_41_fu_1468_p0;
wire  signed [31:0] p_Val2_41_fu_1468_p1;
wire  signed [31:0] p_Val2_51_fu_1481_p0;
wire  signed [31:0] p_Val2_51_fu_1481_p1;
wire  signed [20:0] p_Val2_53_fu_1494_p0;
wire  signed [31:0] p_Val2_53_fu_1494_p1;
wire   [47:0] p_Val2_42_fu_1500_p2;
wire   [47:0] p_Val2_44_fu_1504_p2;
wire   [31:0] tmp_37_fu_1509_p4;
wire   [0:0] tmp_38_fu_1519_p2;
wire   [0:0] tmp_39_fu_1525_p2;
wire   [47:0] p_Val2_52_fu_1537_p2;
wire   [47:0] p_Val2_54_fu_1541_p2;
wire   [31:0] tmp_49_fu_1546_p4;
wire   [0:0] tmp_50_fu_1556_p2;
wire   [0:0] tmp_51_fu_1562_p2;
wire  signed [16:0] p_Val2_55_fu_1580_p0;
wire  signed [31:0] p_Val2_55_fu_1580_p1;
wire   [0:0] tmp_40_fu_1531_p2;
wire   [31:0] tmp_58_cast_fu_1586_p3;
wire   [0:0] tmp_52_fu_1568_p2;
wire   [31:0] tmp_61_cast_fu_1602_p3;
wire   [44:0] p_Val2_55_fu_1580_p2;
wire   [47:0] p_shl1_fu_1628_p3;
wire   [47:0] p_Val2_61_fu_1639_p3;
wire  signed [48:0] p_Val2_61_cast_fu_1646_p1;
wire  signed [48:0] p_shl1_cast_fu_1635_p1;
wire  signed [47:0] p_shl_fu_1656_p3;
wire  signed [48:0] p_shl_cast_fu_1667_p1;
wire   [48:0] addconv_fu_1650_p2;
wire   [48:0] p_Val2_62_fu_1671_p2;
wire  signed [49:0] tmp_81_cast_fu_1677_p1;
wire  signed [49:0] p_shl_cast7_fu_1663_p1;
wire   [48:0] sum_fu_1691_p2;
wire  signed [49:0] sum_cast_fu_1697_p1;
wire   [48:0] addconv3_fu_1713_p2;
wire  signed [49:0] tmp_108_3_cast_fu_1719_p1;
wire  signed [49:0] tmp_82_cast_fu_1681_p1;
wire   [15:0] grp_fu_1756_p0;
wire   [15:0] grp_fu_1765_p0;
wire   [15:0] grp_fu_1774_p0;
wire   [15:0] grp_fu_1783_p0;
wire   [15:0] grp_fu_1792_p0;
wire   [15:0] grp_fu_1801_p0;
wire   [15:0] grp_fu_1810_p0;
wire   [15:0] grp_fu_1819_p0;
wire   [50:0] tmp_59_fu_1825_p3;
wire  signed [63:0] tmp_84_cast_fu_1832_p1;
wire   [63:0] p_Val2_65_fu_1836_p2;
wire   [31:0] tmp_60_fu_1841_p4;
wire   [0:0] tmp_63_fu_1865_p3;
wire   [16:0] tmp_64_fu_1873_p7;
wire  signed [17:0] tmp_69_cast_fu_1889_p1;
wire   [17:0] tmp_65_fu_1893_p2;
wire   [0:0] tmp_61_fu_1851_p3;
wire   [0:0] tmp_62_fu_1859_p2;
wire   [0:0] tmp_66_fu_1903_p2;
wire  signed [31:0] tmp_70_cast_fu_1899_p1;
wire   [63:0] p_Val2_69_1_fu_1917_p2;
wire   [31:0] tmp_114_1_fu_1922_p4;
wire   [0:0] tmp_68_fu_1946_p3;
wire   [16:0] tmp_69_fu_1954_p7;
wire  signed [17:0] tmp_73_cast_fu_1970_p1;
wire   [17:0] tmp_70_fu_1974_p2;
wire   [0:0] tmp_67_fu_1932_p3;
wire   [0:0] tmp_116_1_fu_1940_p2;
wire   [0:0] tmp_71_fu_1984_p2;
wire  signed [31:0] tmp_74_cast_fu_1980_p1;
wire   [63:0] p_Val2_69_2_fu_1998_p2;
wire   [31:0] tmp_114_2_fu_2003_p4;
wire   [0:0] tmp_73_fu_2027_p3;
wire   [16:0] tmp_74_fu_2035_p7;
wire  signed [17:0] tmp_77_cast_fu_2051_p1;
wire   [17:0] tmp_75_fu_2055_p2;
wire   [0:0] tmp_72_fu_2013_p3;
wire   [0:0] tmp_116_2_fu_2021_p2;
wire   [0:0] tmp_76_fu_2065_p2;
wire  signed [31:0] tmp_78_cast_fu_2061_p1;
wire   [63:0] p_Val2_69_3_fu_2079_p2;
wire   [31:0] tmp_114_3_fu_2084_p4;
wire   [0:0] tmp_78_fu_2108_p3;
wire   [16:0] tmp_79_fu_2116_p7;
wire  signed [17:0] tmp_83_cast_fu_2132_p1;
wire   [17:0] tmp_80_fu_2136_p2;
wire   [0:0] tmp_77_fu_2094_p3;
wire   [0:0] tmp_116_3_fu_2102_p2;
wire   [0:0] tmp_81_fu_2146_p2;
wire  signed [31:0] tmp_84_cast2_fu_2142_p1;
wire   [63:0] p_Val2_69_4_fu_2160_p2;
wire   [31:0] tmp_114_4_fu_2165_p4;
wire   [0:0] tmp_83_fu_2189_p3;
wire   [16:0] tmp_84_fu_2197_p7;
wire  signed [17:0] tmp_87_cast_fu_2213_p1;
wire   [17:0] tmp_85_fu_2217_p2;
wire   [0:0] tmp_82_fu_2175_p3;
wire   [0:0] tmp_116_4_fu_2183_p2;
wire   [0:0] tmp_86_fu_2227_p2;
wire  signed [31:0] tmp_88_cast_fu_2223_p1;
wire   [63:0] p_Val2_69_5_fu_2241_p2;
wire   [31:0] tmp_114_5_fu_2246_p4;
wire   [0:0] tmp_88_fu_2270_p3;
wire   [16:0] tmp_89_fu_2278_p7;
wire  signed [17:0] tmp_91_cast_fu_2294_p1;
wire   [17:0] tmp_90_fu_2298_p2;
wire   [0:0] tmp_87_fu_2256_p3;
wire   [0:0] tmp_116_5_fu_2264_p2;
wire   [0:0] tmp_91_fu_2308_p2;
wire  signed [31:0] tmp_92_cast_fu_2304_p1;
wire   [63:0] p_Val2_69_6_fu_2322_p2;
wire   [31:0] tmp_114_6_fu_2327_p4;
wire   [0:0] tmp_93_fu_2351_p3;
wire   [16:0] tmp_94_fu_2359_p7;
wire  signed [17:0] tmp_95_cast_fu_2375_p1;
wire   [17:0] tmp_95_fu_2379_p2;
wire   [0:0] tmp_92_fu_2337_p3;
wire   [0:0] tmp_116_6_fu_2345_p2;
wire   [0:0] tmp_96_fu_2389_p2;
wire  signed [31:0] tmp_96_cast_fu_2385_p1;
wire   [63:0] p_Val2_69_7_fu_2403_p2;
wire   [31:0] tmp_114_7_fu_2408_p4;
wire   [0:0] tmp_98_fu_2432_p3;
wire   [16:0] tmp_99_fu_2440_p7;
wire  signed [17:0] tmp_99_cast_fu_2456_p1;
wire   [17:0] tmp_100_fu_2460_p2;
wire   [0:0] tmp_97_fu_2418_p3;
wire   [0:0] tmp_116_7_fu_2426_p2;
wire   [0:0] tmp_101_fu_2470_p2;
wire  signed [31:0] tmp_100_cast_fu_2466_p1;
reg    grp_fu_1756_ce;
reg    grp_fu_1765_ce;
reg    grp_fu_1774_ce;
reg    grp_fu_1783_ce;
reg    grp_fu_1792_ce;
reg    grp_fu_1801_ce;
reg    grp_fu_1810_ce;
reg    grp_fu_1819_ce;
reg   [22:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg    ap_condition_2085;
reg    ap_condition_636;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 23'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 integral_pos_V_0 = 32'd0;
#0 last_error_pos_V_0 = 16'd0;
#0 integral_pos_V_1 = 32'd0;
#0 last_error_pos_V_1 = 16'd0;
#0 integral_rate_V_0 = 32'd0;
#0 last_error_rate_V_0 = 16'd0;
#0 integral_rate_V_1 = 32'd0;
#0 last_error_rate_V_1 = 16'd0;
#0 ap_reg_ioackin_OUT_r_AWREADY = 1'b0;
#0 ap_reg_ioackin_OUT_r_WREADY = 1'b0;
end

pid_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
pid_CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .kp_V_address0(kp_V_address0),
    .kp_V_ce0(kp_V_ce0),
    .kp_V_q0(kp_V_q0),
    .kd_V_address0(kd_V_address0),
    .kd_V_ce0(kd_V_ce0),
    .kd_V_q0(kd_V_q0),
    .ki_V_address0(ki_V_address0),
    .ki_V_ce0(ki_V_ce0),
    .ki_V_q0(ki_V_q0)
);

pid_INPUT_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_INPUT_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_INPUT_DATA_WIDTH ))
pid_INPUT_s_axi_U(
    .AWVALID(s_axi_INPUT_AWVALID),
    .AWREADY(s_axi_INPUT_AWREADY),
    .AWADDR(s_axi_INPUT_AWADDR),
    .WVALID(s_axi_INPUT_WVALID),
    .WREADY(s_axi_INPUT_WREADY),
    .WDATA(s_axi_INPUT_WDATA),
    .WSTRB(s_axi_INPUT_WSTRB),
    .ARVALID(s_axi_INPUT_ARVALID),
    .ARREADY(s_axi_INPUT_ARREADY),
    .ARADDR(s_axi_INPUT_ARADDR),
    .RVALID(s_axi_INPUT_RVALID),
    .RREADY(s_axi_INPUT_RREADY),
    .RDATA(s_axi_INPUT_RDATA),
    .RRESP(s_axi_INPUT_RRESP),
    .BVALID(s_axi_INPUT_BVALID),
    .BREADY(s_axi_INPUT_BREADY),
    .BRESP(s_axi_INPUT_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .cmdIn_V_address0(cmdIn_V_address0),
    .cmdIn_V_ce0(cmdIn_V_ce0),
    .cmdIn_V_q0(cmdIn_V_q0),
    .measured_V_address0(measured_V_address0),
    .measured_V_ce0(measured_V_ce0),
    .measured_V_q0(measured_V_q0)
);

pid_TEST_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_TEST_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_TEST_DATA_WIDTH ))
pid_TEST_s_axi_U(
    .AWVALID(s_axi_TEST_AWVALID),
    .AWREADY(s_axi_TEST_AWREADY),
    .AWADDR(s_axi_TEST_AWADDR),
    .WVALID(s_axi_TEST_WVALID),
    .WREADY(s_axi_TEST_WREADY),
    .WDATA(s_axi_TEST_WDATA),
    .WSTRB(s_axi_TEST_WSTRB),
    .ARVALID(s_axi_TEST_ARVALID),
    .ARREADY(s_axi_TEST_ARREADY),
    .ARADDR(s_axi_TEST_ARADDR),
    .RVALID(s_axi_TEST_RVALID),
    .RREADY(s_axi_TEST_RREADY),
    .RDATA(s_axi_TEST_RDATA),
    .RRESP(s_axi_TEST_RRESP),
    .BVALID(s_axi_TEST_BVALID),
    .BREADY(s_axi_TEST_BREADY),
    .BRESP(s_axi_TEST_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .test_V_address0(test_V_address0),
    .test_V_ce0(test_V_ce0),
    .test_V_we0(test_V_we0),
    .test_V_d0(test_V_d0)
);

pid_OUT_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUT_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUT_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUT_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUT_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUT_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUT_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUT_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUT_R_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_OUT_R_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_OUT_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUT_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUT_R_CACHE_VALUE ))
pid_OUT_r_m_axi_U(
    .AWVALID(m_axi_OUT_r_AWVALID),
    .AWREADY(m_axi_OUT_r_AWREADY),
    .AWADDR(m_axi_OUT_r_AWADDR),
    .AWID(m_axi_OUT_r_AWID),
    .AWLEN(m_axi_OUT_r_AWLEN),
    .AWSIZE(m_axi_OUT_r_AWSIZE),
    .AWBURST(m_axi_OUT_r_AWBURST),
    .AWLOCK(m_axi_OUT_r_AWLOCK),
    .AWCACHE(m_axi_OUT_r_AWCACHE),
    .AWPROT(m_axi_OUT_r_AWPROT),
    .AWQOS(m_axi_OUT_r_AWQOS),
    .AWREGION(m_axi_OUT_r_AWREGION),
    .AWUSER(m_axi_OUT_r_AWUSER),
    .WVALID(m_axi_OUT_r_WVALID),
    .WREADY(m_axi_OUT_r_WREADY),
    .WDATA(m_axi_OUT_r_WDATA),
    .WSTRB(m_axi_OUT_r_WSTRB),
    .WLAST(m_axi_OUT_r_WLAST),
    .WID(m_axi_OUT_r_WID),
    .WUSER(m_axi_OUT_r_WUSER),
    .ARVALID(m_axi_OUT_r_ARVALID),
    .ARREADY(m_axi_OUT_r_ARREADY),
    .ARADDR(m_axi_OUT_r_ARADDR),
    .ARID(m_axi_OUT_r_ARID),
    .ARLEN(m_axi_OUT_r_ARLEN),
    .ARSIZE(m_axi_OUT_r_ARSIZE),
    .ARBURST(m_axi_OUT_r_ARBURST),
    .ARLOCK(m_axi_OUT_r_ARLOCK),
    .ARCACHE(m_axi_OUT_r_ARCACHE),
    .ARPROT(m_axi_OUT_r_ARPROT),
    .ARQOS(m_axi_OUT_r_ARQOS),
    .ARREGION(m_axi_OUT_r_ARREGION),
    .ARUSER(m_axi_OUT_r_ARUSER),
    .RVALID(m_axi_OUT_r_RVALID),
    .RREADY(m_axi_OUT_r_RREADY),
    .RDATA(m_axi_OUT_r_RDATA),
    .RLAST(m_axi_OUT_r_RLAST),
    .RID(m_axi_OUT_r_RID),
    .RUSER(m_axi_OUT_r_RUSER),
    .RRESP(m_axi_OUT_r_RRESP),
    .BVALID(m_axi_OUT_r_BVALID),
    .BREADY(m_axi_OUT_r_BREADY),
    .BRESP(m_axi_OUT_r_BRESP),
    .BID(m_axi_OUT_r_BID),
    .BUSER(m_axi_OUT_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(OUT_r_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(OUT_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(OUT_r_RDATA),
    .I_RID(OUT_r_RID),
    .I_RUSER(OUT_r_RUSER),
    .I_RRESP(OUT_r_RRESP),
    .I_RLAST(OUT_r_RLAST),
    .I_AWVALID(OUT_r_AWVALID),
    .I_AWREADY(OUT_r_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd8),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(OUT_r_WVALID),
    .I_WREADY(OUT_r_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(OUT_r_BVALID),
    .I_BREADY(OUT_r_BREADY),
    .I_BRESP(OUT_r_BRESP),
    .I_BID(OUT_r_BID),
    .I_BUSER(OUT_r_BUSER)
);

pid_mul_16ns_50s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 64 ))
pid_mul_16ns_50s_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1756_p0),
    .din1(r_V_2_reg_2909),
    .ce(grp_fu_1756_ce),
    .dout(grp_fu_1756_p2)
);

pid_mul_16ns_50s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 64 ))
pid_mul_16ns_50s_bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1765_p0),
    .din1(r_V_2_1_reg_2914),
    .ce(grp_fu_1765_ce),
    .dout(grp_fu_1765_p2)
);

pid_mul_16ns_50s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 64 ))
pid_mul_16ns_50s_bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1774_p0),
    .din1(addconv2_reg_2919),
    .ce(grp_fu_1774_ce),
    .dout(grp_fu_1774_p2)
);

pid_mul_16ns_50s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 64 ))
pid_mul_16ns_50s_bkb_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1783_p0),
    .din1(r_V_2_3_reg_2924),
    .ce(grp_fu_1783_ce),
    .dout(grp_fu_1783_p2)
);

pid_mul_16ns_50s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 64 ))
pid_mul_16ns_50s_bkb_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1792_p0),
    .din1(r_V_2_4_reg_2929),
    .ce(grp_fu_1792_ce),
    .dout(grp_fu_1792_p2)
);

pid_mul_16ns_50s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 64 ))
pid_mul_16ns_50s_bkb_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1801_p0),
    .din1(r_V_2_5_reg_2934),
    .ce(grp_fu_1801_ce),
    .dout(grp_fu_1801_p2)
);

pid_mul_16ns_50s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 64 ))
pid_mul_16ns_50s_bkb_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1810_p0),
    .din1(addconv4_reg_2939),
    .ce(grp_fu_1810_ce),
    .dout(grp_fu_1810_p2)
);

pid_mul_16ns_50s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 64 ))
pid_mul_16ns_50s_bkb_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1819_p0),
    .din1(r_V_2_7_reg_2944),
    .ce(grp_fu_1819_ce),
    .dout(grp_fu_1819_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_OUT_r_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_iter0_fsm_state11)) begin
            if ((1'b1 == ap_condition_636)) begin
                ap_reg_ioackin_OUT_r_AWREADY <= 1'b0;
            end else if ((1'b1 == ap_condition_2085)) begin
                ap_reg_ioackin_OUT_r_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_OUT_r_WREADY <= 1'b0;
    end else begin
        if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state15)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state13)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state12)))) begin
            ap_reg_ioackin_OUT_r_WREADY <= 1'b0;
        end else if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state15)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state13)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state12)))) begin
            ap_reg_ioackin_OUT_r_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) begin
        if (((tmp_3_reg_2544 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
            ap_phi_reg_pp0_iter0_p_Val2_28_reg_609 <= 16'd0;
        end else if (((tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
            ap_phi_reg_pp0_iter0_p_Val2_28_reg_609 <= phitmp1_reg_2773;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
        addconv2_reg_2919[49 : 16] <= addconv2_fu_1707_p2[49 : 16];
        addconv4_reg_2939[49 : 16] <= addconv4_fu_1741_p2[49 : 16];
        r_V_2_1_reg_2914[49 : 16] <= r_V_2_1_fu_1701_p2[49 : 16];
        r_V_2_3_reg_2924[49 : 16] <= r_V_2_3_fu_1723_p2[49 : 16];
        r_V_2_4_reg_2929[49 : 16] <= r_V_2_4_fu_1729_p2[49 : 16];
        r_V_2_5_reg_2934[49 : 16] <= r_V_2_5_fu_1735_p2[49 : 16];
        r_V_2_7_reg_2944[49 : 16] <= r_V_2_7_fu_1747_p2[49 : 16];
        r_V_2_reg_2909[49 : 16] <= r_V_2_fu_1685_p2[49 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        integral_pos_V_0 <= tmp_4_fu_774_p3;
        ki_V_load_1_reg_2668 <= ki_V_q0;
        last_error_pos_V_1 <= tmp_23_fu_862_p1;
        p_Val2_10_reg_2652[47 : 3] <= p_Val2_10_fu_808_p2[47 : 3];
        p_Val2_16_reg_2657[19 : 3] <= p_Val2_16_fu_828_p3[19 : 3];
        p_Val2_19_reg_2663[20 : 3] <= p_Val2_19_fu_856_p2[20 : 3];
        p_Val2_7_reg_2647[47 : 3] <= p_Val2_7_fu_795_p2[47 : 3];
        tmp_4_reg_2642 <= tmp_4_fu_774_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        integral_pos_V_1 <= tmp_17_fu_937_p3;
        p_Val2_20_reg_2723[47 : 3] <= p_Val2_20_fu_958_p2[47 : 3];
        p_Val2_23_reg_2728[47 : 3] <= p_Val2_23_fu_971_p2[47 : 3];
        p_Val2_9_reg_2713 <= p_Val2_9_fu_892_p2;
        r_V_reg_2733 <= r_V_fu_985_p2;
        tmp_17_reg_2718 <= tmp_17_fu_937_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
        integral_rate_V_0 <= tmp_35_fu_1305_p3;
        integral_rate_V_1 <= tmp_47_fu_1394_p3;
        last_error_rate_V_1 <= tmp_53_reg_2839;
        p_Val2_40_reg_2849 <= p_Val2_40_fu_1325_p2;
        p_Val2_43_reg_2854 <= p_Val2_43_fu_1337_p2;
        p_Val2_49_reg_2864[20 : 3] <= p_Val2_49_fu_1424_p2[20 : 3];
        p_Val2_50_reg_2869 <= p_Val2_50_fu_1438_p2;
        r_V_1_reg_2874 <= r_V_1_fu_1456_p2;
        tmp_35_reg_2844 <= tmp_35_fu_1305_p3;
        tmp_47_reg_2859 <= tmp_47_fu_1394_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        kd_V_load_2_reg_2566 <= kd_V_q0;
        ki_V_load_2_reg_2561 <= ki_V_q0;
        kp_V_load_3_reg_2556 <= kp_V_q0;
        p_Val2_34_reg_2551 <= measured_V_q0;
        tmp_3_reg_2544 <= tmp_3_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
        kp_V_load_5_reg_2818 <= kp_V_q0;
        p_Val2_59_reg_2813 <= measured_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        last_error_pos_V_0 <= tmp_11_fu_712_p1;
        p_Val2_3_reg_2591[19 : 3] <= p_Val2_3_fu_678_p3[19 : 3];
        p_Val2_8_reg_2597[20 : 3] <= p_Val2_8_fu_706_p2[20 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        last_error_rate_V_0 <= tmp_41_fu_1233_p1;
        p_Val2_36_reg_2823[19 : 3] <= p_Val2_36_fu_1199_p3[19 : 3];
        p_Val2_39_reg_2829[20 : 3] <= p_Val2_39_fu_1227_p2[20 : 3];
        p_Val2_45_reg_2834 <= p_Val2_45_fu_1250_p2;
        tmp_53_reg_2839 <= tmp_53_fu_1256_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        p_Val2_13_reg_2622 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        p_Val2_21_reg_2768 <= p_Val2_21_fu_1047_p2;
        phitmp1_reg_2773 <= {{p_Val2_27_fu_1056_p2[31:16]}};
        tmp_27_reg_2778 <= tmp_27_fu_1090_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        p_Val2_25_reg_2698 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
        p_Val2_41_reg_2879 <= p_Val2_41_fu_1468_p2;
        p_Val2_51_reg_2884 <= p_Val2_51_fu_1481_p2;
        p_Val2_53_reg_2889 <= p_Val2_53_fu_1494_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        p_Val2_56_reg_2783 <= measured_V_q0;
        p_Val2_60_reg_2748 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state14))) begin
        p_Val2_63_reg_2989 <= grp_fu_1756_p2;
        p_Val2_68_1_reg_2994 <= grp_fu_1765_p2;
        p_Val2_68_2_reg_2999 <= grp_fu_1774_p2;
        p_Val2_68_3_reg_3004 <= grp_fu_1783_p2;
        p_Val2_68_4_reg_3009 <= grp_fu_1792_p2;
        p_Val2_68_5_reg_3014 <= grp_fu_1801_p2;
        p_Val2_68_6_reg_3019 <= grp_fu_1810_p2;
        p_Val2_68_7_reg_3024 <= grp_fu_1819_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        p_Val2_s_reg_2571 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        reg_620 <= kp_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        reg_624 <= ki_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        reg_628 <= kd_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state15))) begin
        storemerge_7_reg_3064 <= storemerge_7_fu_2476_p3;
        test_buffer_V_load_1_reg_3034 <= test_buffer_V_load_1_fu_1990_p3;
        test_buffer_V_load_2_reg_3039 <= test_buffer_V_load_2_fu_2071_p3;
        test_buffer_V_load_3_reg_3044 <= test_buffer_V_load_3_fu_2152_p3;
        test_buffer_V_load_4_reg_3049 <= test_buffer_V_load_4_fu_2233_p3;
        test_buffer_V_load_5_reg_3054 <= test_buffer_V_load_5_fu_2314_p3;
        test_buffer_V_load_6_reg_3059 <= test_buffer_V_load_6_fu_2395_p3;
        test_buffer_V_load_reg_3029 <= test_buffer_V_load_fu_1909_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
        tmp_29_reg_2808 <= tmp_29_fu_1166_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state24) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
        tmp_56_reg_2894 <= tmp_56_fu_1594_p3;
        tmp_57_reg_2899 <= tmp_57_fu_1610_p3;
        tmp_58_reg_2904 <= {{p_Val2_55_fu_1580_p2[44:13]}};
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter1_fsm_state24) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (ap_reg_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
        OUT_r_AWVALID = 1'b1;
    end else begin
        OUT_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state24) & (1'b1 == OUT_r_BVALID))) begin
        OUT_r_BREADY = 1'b1;
    end else begin
        OUT_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state15)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state13)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state12)))) begin
        OUT_r_WVALID = 1'b1;
    end else begin
        OUT_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state11)) begin
        OUT_r_blk_n_AW = m_axi_OUT_r_AWREADY;
    end else begin
        OUT_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter1_fsm_state24)) begin
        OUT_r_blk_n_B = m_axi_OUT_r_BVALID;
    end else begin
        OUT_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state19) | (1'b1 == ap_CS_iter0_fsm_state18) | (1'b1 == ap_CS_iter0_fsm_state17) | (1'b1 == ap_CS_iter0_fsm_state16) | (1'b1 == ap_CS_iter0_fsm_state15) | (1'b1 == ap_CS_iter0_fsm_state14) | (1'b1 == ap_CS_iter0_fsm_state13) | (1'b1 == ap_CS_iter0_fsm_state12))) begin
        OUT_r_blk_n_W = m_axi_OUT_r_WREADY;
    end else begin
        OUT_r_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state24) & (1'b1 == OUT_r_BVALID))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        ap_phi_mux_p_Val2_29_phi_fu_591_p4 = tmp_29_reg_2808;
    end else begin
        ap_phi_mux_p_Val2_29_phi_fu_591_p4 = 16'd0;
    end
end

always @ (*) begin
    if (((tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        ap_phi_mux_p_Val2_30_phi_fu_602_p4 = tmp_27_reg_2778;
    end else begin
        ap_phi_mux_p_Val2_30_phi_fu_602_p4 = 16'd0;
    end
end

always @ (*) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state23))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_OUT_r_AWREADY == 1'b0)) begin
        ap_sig_ioackin_OUT_r_AWREADY = OUT_r_AWREADY;
    end else begin
        ap_sig_ioackin_OUT_r_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_OUT_r_WREADY == 1'b0)) begin
        ap_sig_ioackin_OUT_r_WREADY = OUT_r_WREADY;
    end else begin
        ap_sig_ioackin_OUT_r_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        cmdIn_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        cmdIn_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        cmdIn_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_iter0_fsm_state3)) begin
        cmdIn_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_iter0_fsm_state2)) begin
        cmdIn_V_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        cmdIn_V_address0 = 64'd5;
    end else begin
        cmdIn_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        cmdIn_V_ce0 = 1'b1;
    end else begin
        cmdIn_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state13)))) begin
        grp_fu_1756_ce = 1'b1;
    end else begin
        grp_fu_1756_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state13)))) begin
        grp_fu_1765_ce = 1'b1;
    end else begin
        grp_fu_1765_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state13)))) begin
        grp_fu_1774_ce = 1'b1;
    end else begin
        grp_fu_1774_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state13)))) begin
        grp_fu_1783_ce = 1'b1;
    end else begin
        grp_fu_1783_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state13)))) begin
        grp_fu_1792_ce = 1'b1;
    end else begin
        grp_fu_1792_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state13)))) begin
        grp_fu_1801_ce = 1'b1;
    end else begin
        grp_fu_1801_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state13)))) begin
        grp_fu_1810_ce = 1'b1;
    end else begin
        grp_fu_1810_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state13)))) begin
        grp_fu_1819_ce = 1'b1;
    end else begin
        grp_fu_1819_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        kd_V_address0 = 64'd3;
    end else if (((tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        kd_V_address0 = 64'd1;
    end else if (((tmp_3_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        kd_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        kd_V_address0 = 64'd2;
    end else begin
        kd_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        kd_V_ce0 = 1'b1;
    end else begin
        kd_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        ki_V_address0 = 64'd3;
    end else if (((tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        ki_V_address0 = 64'd1;
    end else if (((tmp_3_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        ki_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        ki_V_address0 = 64'd2;
    end else begin
        ki_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        ki_V_ce0 = 1'b1;
    end else begin
        ki_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        kp_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        kp_V_address0 = 64'd4;
    end else if (((tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        kp_V_address0 = 64'd2;
    end else if (((tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        kp_V_address0 = 64'd1;
    end else if (((tmp_3_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        kp_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        kp_V_address0 = 64'd3;
    end else begin
        kp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        kp_V_ce0 = 1'b1;
    end else begin
        kp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        measured_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        measured_V_address0 = 64'd4;
    end else if (((tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        measured_V_address0 = 64'd2;
    end else if (((tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        measured_V_address0 = 64'd1;
    end else if (((tmp_3_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        measured_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        measured_V_address0 = 64'd3;
    end else begin
        measured_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (tmp_3_reg_2544 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        measured_V_ce0 = 1'b1;
    end else begin
        measured_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state23)) begin
        test_V_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_iter0_fsm_state22)) begin
        test_V_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_iter0_fsm_state21)) begin
        test_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_iter0_fsm_state20)) begin
        test_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_iter0_fsm_state19)) begin
        test_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_iter0_fsm_state18)) begin
        test_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_iter0_fsm_state17)) begin
        test_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_iter0_fsm_state16)) begin
        test_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_iter0_fsm_state7)) begin
        test_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        test_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        test_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        test_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_iter0_fsm_state3)) begin
        test_V_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state2)) begin
        test_V_address0 = 64'd5;
    end else begin
        test_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state23)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state22)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state21)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state8)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state7)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state3)) | ((1'b1 == ap_CS_iter1_fsm_state24) & (1'b1 == OUT_r_BVALID)))) begin
        test_V_ce0 = 1'b1;
    end else begin
        test_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state23)) begin
        test_V_d0 = storemerge_7_reg_3064;
    end else if ((1'b1 == ap_CS_iter0_fsm_state22)) begin
        test_V_d0 = test_buffer_V_load_6_reg_3059;
    end else if ((1'b1 == ap_CS_iter0_fsm_state21)) begin
        test_V_d0 = test_buffer_V_load_5_reg_3054;
    end else if ((1'b1 == ap_CS_iter0_fsm_state20)) begin
        test_V_d0 = test_buffer_V_load_4_reg_3049;
    end else if ((1'b1 == ap_CS_iter0_fsm_state19)) begin
        test_V_d0 = test_buffer_V_load_3_reg_3044;
    end else if ((1'b1 == ap_CS_iter0_fsm_state18)) begin
        test_V_d0 = test_buffer_V_load_2_reg_3039;
    end else if ((1'b1 == ap_CS_iter0_fsm_state17)) begin
        test_V_d0 = test_buffer_V_load_1_reg_3034;
    end else if ((1'b1 == ap_CS_iter0_fsm_state16)) begin
        test_V_d0 = test_buffer_V_load_reg_3029;
    end else if ((1'b1 == ap_CS_iter0_fsm_state7)) begin
        test_V_d0 = tmp_6_4_cast_fu_1106_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        test_V_d0 = t_command_V_cast_fu_999_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        test_V_d0 = tmp_6_3_cast_fu_880_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        test_V_d0 = tmp_6_2_cast_fu_730_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state3)) begin
        test_V_d0 = tmp_6_1_cast_fu_659_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state2)) begin
        test_V_d0 = tmp_6_5_cast_fu_640_p1;
    end else begin
        test_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state23)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state22)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state21)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state7)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        test_V_we0 = 1'b1;
    end else begin
        test_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end
        end
        ap_ST_iter0_fsm_state2 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end
        end
        ap_ST_iter0_fsm_state3 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end
        end
        ap_ST_iter0_fsm_state4 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end
        end
        ap_ST_iter0_fsm_state5 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end
        end
        ap_ST_iter0_fsm_state6 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end
        end
        ap_ST_iter0_fsm_state7 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end
        end
        ap_ST_iter0_fsm_state8 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end
        end
        ap_ST_iter0_fsm_state9 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end
        end
        ap_ST_iter0_fsm_state10 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end
        end
        ap_ST_iter0_fsm_state11 : begin
            if ((~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state24) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end
        end
        ap_ST_iter0_fsm_state12 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end
        end
        ap_ST_iter0_fsm_state13 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state13))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end
        end
        ap_ST_iter0_fsm_state14 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state14))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end
        end
        ap_ST_iter0_fsm_state15 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state15))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end
        end
        ap_ST_iter0_fsm_state16 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state16))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end
        end
        ap_ST_iter0_fsm_state17 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state17))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end
        end
        ap_ST_iter0_fsm_state18 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state18))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state19;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end
        end
        ap_ST_iter0_fsm_state19 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == ap_CS_iter0_fsm_state19))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state20;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state19;
            end
        end
        ap_ST_iter0_fsm_state20 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state20))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state21;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state20;
            end
        end
        ap_ST_iter0_fsm_state21 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state21))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state22;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state21;
            end
        end
        ap_ST_iter0_fsm_state22 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state22))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state23;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state22;
            end
        end
        ap_ST_iter0_fsm_state23 : begin
            if (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state23;
            end
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state24 : begin
            if (((1'b1 == ap_CS_iter0_fsm_state23) & (1'b1 == OUT_r_BVALID))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state24;
            end else if (((1'b0 == ap_CS_iter0_fsm_state23) & (1'b1 == OUT_r_BVALID))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state24;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)) & (1'b1 == ap_CS_iter0_fsm_state23))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state24;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

assign addconv2_fu_1707_p2 = ($signed(p_shl_cast7_fu_1663_p1) + $signed(sum_cast_fu_1697_p1));

assign addconv3_fu_1713_p2 = ($signed(p_shl1_cast_fu_1635_p1) - $signed(p_Val2_61_cast_fu_1646_p1));

assign addconv4_fu_1741_p2 = ($signed(sum_cast_fu_1697_p1) - $signed(p_shl_cast7_fu_1663_p1));

assign addconv_fu_1650_p2 = ($signed(p_Val2_61_cast_fu_1646_p1) - $signed(p_shl1_cast_fu_1635_p1));

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter0_fsm_state10 = ap_CS_iter0_fsm[32'd9];

assign ap_CS_iter0_fsm_state11 = ap_CS_iter0_fsm[32'd10];

assign ap_CS_iter0_fsm_state12 = ap_CS_iter0_fsm[32'd11];

assign ap_CS_iter0_fsm_state13 = ap_CS_iter0_fsm[32'd12];

assign ap_CS_iter0_fsm_state14 = ap_CS_iter0_fsm[32'd13];

assign ap_CS_iter0_fsm_state15 = ap_CS_iter0_fsm[32'd14];

assign ap_CS_iter0_fsm_state16 = ap_CS_iter0_fsm[32'd15];

assign ap_CS_iter0_fsm_state17 = ap_CS_iter0_fsm[32'd16];

assign ap_CS_iter0_fsm_state18 = ap_CS_iter0_fsm[32'd17];

assign ap_CS_iter0_fsm_state19 = ap_CS_iter0_fsm[32'd18];

assign ap_CS_iter0_fsm_state2 = ap_CS_iter0_fsm[32'd1];

assign ap_CS_iter0_fsm_state20 = ap_CS_iter0_fsm[32'd19];

assign ap_CS_iter0_fsm_state21 = ap_CS_iter0_fsm[32'd20];

assign ap_CS_iter0_fsm_state22 = ap_CS_iter0_fsm[32'd21];

assign ap_CS_iter0_fsm_state23 = ap_CS_iter0_fsm[32'd22];

assign ap_CS_iter0_fsm_state3 = ap_CS_iter0_fsm[32'd2];

assign ap_CS_iter0_fsm_state4 = ap_CS_iter0_fsm[32'd3];

assign ap_CS_iter0_fsm_state5 = ap_CS_iter0_fsm[32'd4];

assign ap_CS_iter0_fsm_state6 = ap_CS_iter0_fsm[32'd5];

assign ap_CS_iter0_fsm_state7 = ap_CS_iter0_fsm[32'd6];

assign ap_CS_iter0_fsm_state8 = ap_CS_iter0_fsm[32'd7];

assign ap_CS_iter0_fsm_state9 = ap_CS_iter0_fsm[32'd8];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state24 = ap_CS_iter1_fsm[32'd1];

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((1'b1 == ap_CS_iter1_fsm_state24) & (1'b1 == OUT_r_BVALID));
end

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_pp0_stage0_iter1 = (1'b0 == OUT_r_BVALID);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2085 = (~(((1'b1 == ap_CS_iter1_fsm_state24) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24))) & (1'b1 == OUT_r_AWREADY));
end

always @ (*) begin
    ap_condition_636 = ~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state24) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state24)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_1756_p0 = 64'd21626;

assign grp_fu_1765_p0 = 64'd21626;

assign grp_fu_1774_p0 = 64'd21626;

assign grp_fu_1783_p0 = 64'd21626;

assign grp_fu_1792_p0 = 64'd21626;

assign grp_fu_1801_p0 = 64'd21626;

assign grp_fu_1810_p0 = 64'd21626;

assign grp_fu_1819_p0 = 64'd21626;

assign p_Val2_10_fu_808_p0 = reg_628;

assign p_Val2_10_fu_808_p1 = p_Val2_8_reg_2597;

assign p_Val2_10_fu_808_p2 = ($signed(p_Val2_10_fu_808_p0) * $signed(p_Val2_10_fu_808_p1));

assign p_Val2_11_fu_1004_p2 = (p_Val2_9_reg_2713 + p_Val2_7_reg_2647);

assign p_Val2_12_fu_1008_p2 = (p_Val2_11_fu_1004_p2 + p_Val2_10_reg_2652);

assign p_Val2_15_fu_822_p2 = ($signed(tmp_12_fu_814_p1) - $signed(tmp_13_fu_818_p1));

assign p_Val2_16_cast1_fu_898_p1 = p_Val2_16_reg_2657;

assign p_Val2_16_cast_fu_836_p1 = p_Val2_16_fu_828_p3;

assign p_Val2_16_fu_828_p3 = {{p_Val2_15_fu_822_p2}, {3'd0}};

assign p_Val2_19_fu_856_p2 = ($signed(p_Val2_16_cast_fu_836_p1) - $signed(tmp_27_cast_fu_852_p1));

assign p_Val2_1_cast_fu_1291_p3 = ((tmp_32_fu_1279_p2[0:0] === 1'b1) ? 32'd4288413696 : 32'd6553600);

assign p_Val2_20_fu_958_p0 = reg_620;

assign p_Val2_20_fu_958_p1 = p_Val2_16_reg_2657;

assign p_Val2_20_fu_958_p2 = ($signed(p_Val2_20_fu_958_p0) * $signed(p_Val2_20_fu_958_p1));

assign p_Val2_21_fu_1047_p0 = ki_V_load_1_reg_2668;

assign p_Val2_21_fu_1047_p1 = tmp_17_reg_2718;

assign p_Val2_21_fu_1047_p2 = ($signed(p_Val2_21_fu_1047_p0) * $signed(p_Val2_21_fu_1047_p1));

assign p_Val2_22_fu_1111_p2 = (p_Val2_21_reg_2768 + p_Val2_20_reg_2723);

assign p_Val2_23_fu_971_p0 = reg_628;

assign p_Val2_23_fu_971_p1 = p_Val2_19_reg_2663;

assign p_Val2_23_fu_971_p2 = ($signed(p_Val2_23_fu_971_p0) * $signed(p_Val2_23_fu_971_p1));

assign p_Val2_24_fu_1115_p2 = (p_Val2_22_fu_1111_p2 + p_Val2_23_reg_2728);

assign p_Val2_27_fu_1056_p0 = reg_620;

assign p_Val2_27_fu_1056_p1 = r_V_reg_2733;

assign p_Val2_27_fu_1056_p2 = ($signed(p_Val2_27_fu_1056_p0) * $signed(p_Val2_27_fu_1056_p1));

assign p_Val2_2_cast_fu_1380_p3 = ((tmp_44_fu_1368_p2[0:0] === 1'b1) ? 32'd4288413696 : 32'd6553600);

assign p_Val2_2_fu_672_p2 = ($signed(tmp_8_fu_664_p1) - $signed(tmp_9_fu_668_p1));

assign p_Val2_31_fu_1260_p3 = ((tmp_3_reg_2544[0:0] === 1'b1) ? ap_phi_reg_pp0_iter0_p_Val2_28_reg_609 : p_Val2_25_reg_2698);

assign p_Val2_32_fu_1174_p3 = ((tmp_3_reg_2544[0:0] === 1'b1) ? ap_phi_mux_p_Val2_29_phi_fu_591_p4 : p_Val2_13_reg_2622);

assign p_Val2_33_fu_1180_p3 = ((tmp_3_reg_2544[0:0] === 1'b1) ? ap_phi_mux_p_Val2_30_phi_fu_602_p4 : p_Val2_s_reg_2571);

assign p_Val2_35_fu_1193_p2 = ($signed(tmp_30_fu_1186_p1) - $signed(tmp_31_fu_1190_p1));

assign p_Val2_36_cast9_fu_1266_p1 = p_Val2_36_reg_2823;

assign p_Val2_36_cast_fu_1207_p1 = p_Val2_36_fu_1199_p3;

assign p_Val2_36_fu_1199_p3 = {{p_Val2_35_fu_1193_p2}, {3'd0}};

assign p_Val2_38_fu_1273_p2 = ($signed(p_Val2_36_cast9_fu_1266_p1) + $signed(integral_rate_V_0));

assign p_Val2_39_fu_1227_p2 = ($signed(p_Val2_36_cast_fu_1207_p1) - $signed(tmp_51_cast_fu_1223_p1));

assign p_Val2_3_cast1_fu_735_p1 = p_Val2_3_reg_2591;

assign p_Val2_3_cast_fu_686_p1 = p_Val2_3_fu_678_p3;

assign p_Val2_3_fu_678_p3 = {{p_Val2_2_fu_672_p2}, {3'd0}};

assign p_Val2_40_fu_1325_p0 = p_Val2_36_reg_2823;

assign p_Val2_40_fu_1325_p1 = kp_V_load_3_reg_2556;

assign p_Val2_40_fu_1325_p2 = ($signed(p_Val2_40_fu_1325_p0) * $signed(p_Val2_40_fu_1325_p1));

assign p_Val2_41_fu_1468_p0 = tmp_35_reg_2844;

assign p_Val2_41_fu_1468_p1 = ki_V_load_2_reg_2561;

assign p_Val2_41_fu_1468_p2 = ($signed(p_Val2_41_fu_1468_p0) * $signed(p_Val2_41_fu_1468_p1));

assign p_Val2_42_fu_1500_p2 = (p_Val2_40_reg_2849 + p_Val2_41_reg_2879);

assign p_Val2_43_fu_1337_p0 = p_Val2_39_reg_2829;

assign p_Val2_43_fu_1337_p1 = kd_V_load_2_reg_2566;

assign p_Val2_43_fu_1337_p2 = ($signed(p_Val2_43_fu_1337_p0) * $signed(p_Val2_43_fu_1337_p1));

assign p_Val2_44_fu_1504_p2 = (p_Val2_43_reg_2854 + p_Val2_42_fu_1500_p2);

assign p_Val2_45_fu_1250_p2 = ($signed(tmp_42_fu_1243_p1) - $signed(tmp_43_fu_1247_p1));

assign p_Val2_47_cast8_fu_1350_p1 = p_Val2_47_fu_1343_p3;

assign p_Val2_47_cast_fu_1354_p1 = p_Val2_47_fu_1343_p3;

assign p_Val2_47_fu_1343_p3 = {{p_Val2_45_reg_2834}, {3'd0}};

assign p_Val2_48_fu_1362_p2 = ($signed(p_Val2_47_cast8_fu_1350_p1) + $signed(integral_rate_V_1));

assign p_Val2_49_fu_1424_p2 = ($signed(p_Val2_47_cast_fu_1354_p1) - $signed(tmp_68_cast_fu_1420_p1));

assign p_Val2_50_fu_1438_p0 = p_Val2_47_fu_1343_p3;

assign p_Val2_50_fu_1438_p1 = reg_620;

assign p_Val2_50_fu_1438_p2 = ($signed(p_Val2_50_fu_1438_p0) * $signed(p_Val2_50_fu_1438_p1));

assign p_Val2_51_fu_1481_p0 = tmp_47_reg_2859;

assign p_Val2_51_fu_1481_p1 = reg_624;

assign p_Val2_51_fu_1481_p2 = ($signed(p_Val2_51_fu_1481_p0) * $signed(p_Val2_51_fu_1481_p1));

assign p_Val2_52_fu_1537_p2 = (p_Val2_50_reg_2869 + p_Val2_51_reg_2884);

assign p_Val2_53_fu_1494_p0 = p_Val2_49_reg_2864;

assign p_Val2_53_fu_1494_p1 = reg_628;

assign p_Val2_53_fu_1494_p2 = ($signed(p_Val2_53_fu_1494_p0) * $signed(p_Val2_53_fu_1494_p1));

assign p_Val2_54_fu_1541_p2 = (p_Val2_53_reg_2889 + p_Val2_52_fu_1537_p2);

assign p_Val2_55_fu_1580_p0 = r_V_1_reg_2874;

assign p_Val2_55_fu_1580_p1 = kp_V_load_5_reg_2818;

assign p_Val2_55_fu_1580_p2 = ($signed(p_Val2_55_fu_1580_p0) * $signed(p_Val2_55_fu_1580_p1));

assign p_Val2_61_cast_fu_1646_p1 = $signed(p_Val2_61_fu_1639_p3);

assign p_Val2_61_fu_1639_p3 = {{tmp_57_reg_2899}, {16'd0}};

assign p_Val2_62_fu_1671_p2 = ($signed(49'd0) - $signed(p_shl_cast_fu_1667_p1));

assign p_Val2_65_fu_1836_p2 = ($signed(p_Val2_63_reg_2989) + $signed(tmp_84_cast_fu_1832_p1));

assign p_Val2_69_1_fu_1917_p2 = ($signed(p_Val2_68_1_reg_2994) + $signed(tmp_84_cast_fu_1832_p1));

assign p_Val2_69_2_fu_1998_p2 = ($signed(p_Val2_68_2_reg_2999) + $signed(tmp_84_cast_fu_1832_p1));

assign p_Val2_69_3_fu_2079_p2 = ($signed(p_Val2_68_3_reg_3004) + $signed(tmp_84_cast_fu_1832_p1));

assign p_Val2_69_4_fu_2160_p2 = ($signed(p_Val2_68_4_reg_3009) + $signed(tmp_84_cast_fu_1832_p1));

assign p_Val2_69_5_fu_2241_p2 = ($signed(p_Val2_68_5_reg_3014) + $signed(tmp_84_cast_fu_1832_p1));

assign p_Val2_69_6_fu_2322_p2 = ($signed(p_Val2_68_6_reg_3019) + $signed(tmp_84_cast_fu_1832_p1));

assign p_Val2_69_7_fu_2403_p2 = ($signed(p_Val2_68_7_reg_3024) + $signed(tmp_84_cast_fu_1832_p1));

assign p_Val2_6_cast_fu_760_p3 = ((tmp_1_fu_748_p2[0:0] === 1'b1) ? 32'd4288413696 : 32'd6553600);

assign p_Val2_6_fu_742_p2 = ($signed(integral_pos_V_0) + $signed(p_Val2_3_cast1_fu_735_p1));

assign p_Val2_7_fu_795_p0 = reg_620;

assign p_Val2_7_fu_795_p1 = p_Val2_3_reg_2591;

assign p_Val2_7_fu_795_p2 = ($signed(p_Val2_7_fu_795_p0) * $signed(p_Val2_7_fu_795_p1));

assign p_Val2_8_fu_706_p2 = ($signed(p_Val2_3_cast_fu_686_p1) - $signed(tmp_6_cast_fu_702_p1));

assign p_Val2_9_fu_892_p0 = reg_624;

assign p_Val2_9_fu_892_p1 = tmp_4_reg_2642;

assign p_Val2_9_fu_892_p2 = ($signed(p_Val2_9_fu_892_p0) * $signed(p_Val2_9_fu_892_p1));

assign p_Val2_cast_fu_923_p3 = ((tmp_14_fu_911_p2[0:0] === 1'b1) ? 32'd4288413696 : 32'd6553600);

assign p_Val2_s_10_fu_905_p2 = ($signed(integral_pos_V_1) + $signed(p_Val2_16_cast1_fu_898_p1));

assign p_shl1_cast_fu_1635_p1 = $signed(p_shl1_fu_1628_p3);

assign p_shl1_fu_1628_p3 = {{tmp_56_reg_2894}, {16'd0}};

assign p_shl_cast7_fu_1663_p1 = p_shl_fu_1656_p3;

assign p_shl_cast_fu_1667_p1 = p_shl_fu_1656_p3;

assign p_shl_fu_1656_p3 = {{tmp_58_reg_2904}, {16'd0}};

assign r_V_1_fu_1456_p2 = ($signed(tmp_54_fu_1449_p1) - $signed(tmp_55_fu_1453_p1));

assign r_V_2_1_fu_1701_p2 = ($signed(p_shl_cast7_fu_1663_p1) - $signed(sum_cast_fu_1697_p1));

assign r_V_2_3_fu_1723_p2 = ($signed(tmp_108_3_cast_fu_1719_p1) - $signed(p_shl_cast7_fu_1663_p1));

assign r_V_2_4_fu_1729_p2 = ($signed(p_shl_cast7_fu_1663_p1) + $signed(tmp_81_cast_fu_1677_p1));

assign r_V_2_5_fu_1735_p2 = ($signed(tmp_82_cast_fu_1681_p1) - $signed(sum_cast_fu_1697_p1));

assign r_V_2_7_fu_1747_p2 = ($signed(p_shl_cast7_fu_1663_p1) + $signed(tmp_108_3_cast_fu_1719_p1));

assign r_V_2_fu_1685_p2 = ($signed(tmp_81_cast_fu_1677_p1) - $signed(p_shl_cast7_fu_1663_p1));

assign r_V_fu_985_p2 = ($signed(tmp_24_fu_977_p1) - $signed(tmp_25_fu_981_p1));

assign storemerge_7_fu_2476_p3 = ((tmp_101_fu_2470_p2[0:0] === 1'b1) ? tmp_100_cast_fu_2466_p1 : tmp_114_7_fu_2408_p4);

assign sum_cast_fu_1697_p1 = $signed(sum_fu_1691_p2);

assign sum_fu_1691_p2 = ($signed(p_shl1_cast_fu_1635_p1) + $signed(p_Val2_61_cast_fu_1646_p1));

assign t_command_V_cast_fu_999_p1 = $signed(t_command_V_fu_991_p3);

assign t_command_V_fu_991_p3 = {{cmdIn_V_q0}, {3'd0}};

assign test_buffer_V_load_1_fu_1990_p3 = ((tmp_71_fu_1984_p2[0:0] === 1'b1) ? tmp_74_cast_fu_1980_p1 : tmp_114_1_fu_1922_p4);

assign test_buffer_V_load_2_fu_2071_p3 = ((tmp_76_fu_2065_p2[0:0] === 1'b1) ? tmp_78_cast_fu_2061_p1 : tmp_114_2_fu_2003_p4);

assign test_buffer_V_load_3_fu_2152_p3 = ((tmp_81_fu_2146_p2[0:0] === 1'b1) ? tmp_84_cast2_fu_2142_p1 : tmp_114_3_fu_2084_p4);

assign test_buffer_V_load_4_fu_2233_p3 = ((tmp_86_fu_2227_p2[0:0] === 1'b1) ? tmp_88_cast_fu_2223_p1 : tmp_114_4_fu_2165_p4);

assign test_buffer_V_load_5_fu_2314_p3 = ((tmp_91_fu_2308_p2[0:0] === 1'b1) ? tmp_92_cast_fu_2304_p1 : tmp_114_5_fu_2246_p4);

assign test_buffer_V_load_6_fu_2395_p3 = ((tmp_96_fu_2389_p2[0:0] === 1'b1) ? tmp_96_cast_fu_2385_p1 : tmp_114_6_fu_2327_p4);

assign test_buffer_V_load_fu_1909_p3 = ((tmp_66_fu_1903_p2[0:0] === 1'b1) ? tmp_70_cast_fu_1899_p1 : tmp_60_fu_1841_p4);

assign tmp_100_cast_fu_2466_p1 = $signed(tmp_100_fu_2460_p2);

assign tmp_100_fu_2460_p2 = ($signed(18'd65470) + $signed(tmp_99_cast_fu_2456_p1));

assign tmp_101_fu_2470_p2 = (tmp_97_fu_2418_p3 | tmp_116_7_fu_2426_p2);

assign tmp_108_3_cast_fu_1719_p1 = $signed(addconv3_fu_1713_p2);

assign tmp_10_fu_1035_p2 = (tmp_s_fu_1029_p2 | tmp_7_fu_1023_p2);

assign tmp_114_1_fu_1922_p4 = {{p_Val2_69_1_fu_1917_p2[63:32]}};

assign tmp_114_2_fu_2003_p4 = {{p_Val2_69_2_fu_1998_p2[63:32]}};

assign tmp_114_3_fu_2084_p4 = {{p_Val2_69_3_fu_2079_p2[63:32]}};

assign tmp_114_4_fu_2165_p4 = {{p_Val2_69_4_fu_2160_p2[63:32]}};

assign tmp_114_5_fu_2246_p4 = {{p_Val2_69_5_fu_2241_p2[63:32]}};

assign tmp_114_6_fu_2327_p4 = {{p_Val2_69_6_fu_2322_p2[63:32]}};

assign tmp_114_7_fu_2408_p4 = {{p_Val2_69_7_fu_2403_p2[63:32]}};

assign tmp_116_1_fu_1940_p2 = (($signed(tmp_114_1_fu_1922_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_116_2_fu_2021_p2 = (($signed(tmp_114_2_fu_2003_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_116_3_fu_2102_p2 = (($signed(tmp_114_3_fu_2084_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_116_4_fu_2183_p2 = (($signed(tmp_114_4_fu_2165_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_116_5_fu_2264_p2 = (($signed(tmp_114_5_fu_2246_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_116_6_fu_2345_p2 = (($signed(tmp_114_6_fu_2327_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_116_7_fu_2426_p2 = (($signed(tmp_114_7_fu_2408_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_11_fu_712_p1 = p_Val2_2_fu_672_p2[15:0];

assign tmp_12_fu_814_p0 = cmdIn_V_q0;

assign tmp_12_fu_814_p1 = tmp_12_fu_814_p0;

assign tmp_13_fu_818_p1 = $signed(measured_V_q0);

assign tmp_14_fu_911_p2 = (($signed(p_Val2_s_10_fu_905_p2) < $signed(32'd4288413696)) ? 1'b1 : 1'b0);

assign tmp_15_fu_917_p2 = (($signed(p_Val2_s_10_fu_905_p2) > $signed(32'd6553600)) ? 1'b1 : 1'b0);

assign tmp_16_fu_931_p2 = (tmp_15_fu_917_p2 | tmp_14_fu_911_p2);

assign tmp_17_fu_937_p3 = ((tmp_16_fu_931_p2[0:0] === 1'b1) ? p_Val2_cast_fu_923_p3 : p_Val2_s_10_fu_905_p2);

assign tmp_18_fu_844_p3 = {{last_error_pos_V_1}, {3'd0}};

assign tmp_19_fu_1120_p4 = {{p_Val2_24_fu_1115_p2[47:16]}};

assign tmp_1_fu_748_p2 = (($signed(p_Val2_6_fu_742_p2) < $signed(32'd4288413696)) ? 1'b1 : 1'b0);

assign tmp_20_fu_1130_p2 = (($signed(tmp_19_fu_1120_p4) < $signed(32'd4294901760)) ? 1'b1 : 1'b0);

assign tmp_21_fu_1136_p2 = (($signed(tmp_19_fu_1120_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_22_fu_1142_p2 = (tmp_21_fu_1136_p2 | tmp_20_fu_1130_p2);

assign tmp_23_fu_862_p1 = p_Val2_15_fu_822_p2[15:0];

assign tmp_24_fu_977_p0 = cmdIn_V_q0;

assign tmp_24_fu_977_p1 = tmp_24_fu_977_p0;

assign tmp_25_fu_981_p1 = $signed(measured_V_q0);

assign tmp_26_cast_fu_1072_p3 = ((tmp_7_fu_1023_p2[0:0] === 1'b1) ? 16'd57344 : 16'd8183);

assign tmp_26_fu_1080_p4 = {{p_Val2_12_fu_1008_p2[34:19]}};

assign tmp_27_cast_fu_852_p1 = $signed(tmp_18_fu_844_p3);

assign tmp_27_fu_1090_p3 = ((tmp_10_fu_1035_p2[0:0] === 1'b1) ? tmp_26_cast_fu_1072_p3 : tmp_26_fu_1080_p4);

assign tmp_28_fu_1156_p4 = {{p_Val2_24_fu_1115_p2[34:19]}};

assign tmp_29_cast_fu_1148_p3 = ((tmp_20_fu_1130_p2[0:0] === 1'b1) ? 16'd57344 : 16'd8183);

assign tmp_29_fu_1166_p3 = ((tmp_22_fu_1142_p2[0:0] === 1'b1) ? tmp_29_cast_fu_1148_p3 : tmp_28_fu_1156_p4);

assign tmp_2_fu_754_p2 = (($signed(p_Val2_6_fu_742_p2) > $signed(32'd6553600)) ? 1'b1 : 1'b0);

assign tmp_30_fu_1186_p1 = $signed(p_Val2_33_fu_1180_p3);

assign tmp_31_fu_1190_p1 = $signed(p_Val2_34_reg_2551);

assign tmp_32_fu_1279_p2 = (($signed(p_Val2_38_fu_1273_p2) < $signed(32'd4288413696)) ? 1'b1 : 1'b0);

assign tmp_33_fu_1285_p2 = (($signed(p_Val2_38_fu_1273_p2) > $signed(32'd6553600)) ? 1'b1 : 1'b0);

assign tmp_34_fu_1299_p2 = (tmp_33_fu_1285_p2 | tmp_32_fu_1279_p2);

assign tmp_35_fu_1305_p3 = ((tmp_34_fu_1299_p2[0:0] === 1'b1) ? p_Val2_1_cast_fu_1291_p3 : p_Val2_38_fu_1273_p2);

assign tmp_36_fu_1215_p3 = {{last_error_rate_V_0}, {3'd0}};

assign tmp_37_fu_1509_p4 = {{p_Val2_44_fu_1504_p2[47:16]}};

assign tmp_38_fu_1519_p2 = (($signed(tmp_37_fu_1509_p4) < $signed(32'd4294901760)) ? 1'b1 : 1'b0);

assign tmp_39_fu_1525_p2 = (($signed(tmp_37_fu_1509_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_3_fu_645_p2 = ((cmdIn_V_q0 != 16'd0) ? 1'b1 : 1'b0);

assign tmp_40_fu_1531_p2 = (tmp_39_fu_1525_p2 | tmp_38_fu_1519_p2);

assign tmp_41_fu_1233_p1 = p_Val2_35_fu_1193_p2[15:0];

assign tmp_42_fu_1243_p1 = $signed(p_Val2_32_fu_1174_p3);

assign tmp_43_fu_1247_p1 = $signed(p_Val2_56_reg_2783);

assign tmp_44_fu_1368_p2 = (($signed(p_Val2_48_fu_1362_p2) < $signed(32'd4288413696)) ? 1'b1 : 1'b0);

assign tmp_45_fu_1374_p2 = (($signed(p_Val2_48_fu_1362_p2) > $signed(32'd6553600)) ? 1'b1 : 1'b0);

assign tmp_46_fu_1388_p2 = (tmp_45_fu_1374_p2 | tmp_44_fu_1368_p2);

assign tmp_47_fu_1394_p3 = ((tmp_46_fu_1388_p2[0:0] === 1'b1) ? p_Val2_2_cast_fu_1380_p3 : p_Val2_48_fu_1362_p2);

assign tmp_48_fu_1412_p3 = {{last_error_rate_V_1}, {3'd0}};

assign tmp_49_fu_1546_p4 = {{p_Val2_54_fu_1541_p2[47:16]}};

assign tmp_4_fu_774_p3 = ((tmp_fu_768_p2[0:0] === 1'b1) ? p_Val2_6_cast_fu_760_p3 : p_Val2_6_fu_742_p2);

assign tmp_50_fu_1556_p2 = (($signed(tmp_49_fu_1546_p4) < $signed(32'd4294901760)) ? 1'b1 : 1'b0);

assign tmp_51_cast_fu_1223_p1 = $signed(tmp_36_fu_1215_p3);

assign tmp_51_fu_1562_p2 = (($signed(tmp_49_fu_1546_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_52_fu_1568_p2 = (tmp_51_fu_1562_p2 | tmp_50_fu_1556_p2);

assign tmp_53_fu_1256_p1 = p_Val2_45_fu_1250_p2[15:0];

assign tmp_54_fu_1449_p1 = $signed(p_Val2_31_fu_1260_p3);

assign tmp_55_fu_1453_p1 = $signed(p_Val2_59_reg_2813);

assign tmp_56_fu_1594_p3 = ((tmp_40_fu_1531_p2[0:0] === 1'b1) ? tmp_58_cast_fu_1586_p3 : tmp_37_fu_1509_p4);

assign tmp_57_fu_1610_p3 = ((tmp_52_fu_1568_p2[0:0] === 1'b1) ? tmp_61_cast_fu_1602_p3 : tmp_49_fu_1546_p4);

assign tmp_58_cast_fu_1586_p3 = ((tmp_38_fu_1519_p2[0:0] === 1'b1) ? 32'd4294901760 : 32'd65470);

assign tmp_59_fu_1825_p3 = {{p_Val2_60_reg_2748}, {35'd0}};

assign tmp_5_fu_1013_p4 = {{p_Val2_12_fu_1008_p2[47:16]}};

assign tmp_60_fu_1841_p4 = {{p_Val2_65_fu_1836_p2[63:32]}};

assign tmp_61_cast_fu_1602_p3 = ((tmp_50_fu_1556_p2[0:0] === 1'b1) ? 32'd4294901760 : 32'd65470);

assign tmp_61_fu_1851_p3 = p_Val2_65_fu_1836_p2[32'd63];

assign tmp_62_fu_1859_p2 = (($signed(tmp_60_fu_1841_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_63_fu_1865_p3 = p_Val2_65_fu_1836_p2[32'd63];

assign tmp_64_fu_1873_p7 = {{{{{{tmp_63_fu_1865_p3}, {9'd0}}, {tmp_63_fu_1865_p3}}, {4'd0}}, {tmp_63_fu_1865_p3}}, {1'd0}};

assign tmp_65_fu_1893_p2 = ($signed(18'd65470) + $signed(tmp_69_cast_fu_1889_p1));

assign tmp_66_fu_1903_p2 = (tmp_62_fu_1859_p2 | tmp_61_fu_1851_p3);

assign tmp_67_fu_1932_p3 = p_Val2_69_1_fu_1917_p2[32'd63];

assign tmp_68_cast_fu_1420_p1 = $signed(tmp_48_fu_1412_p3);

assign tmp_68_fu_1946_p3 = p_Val2_69_1_fu_1917_p2[32'd63];

assign tmp_69_cast_fu_1889_p1 = $signed(tmp_64_fu_1873_p7);

assign tmp_69_fu_1954_p7 = {{{{{{tmp_68_fu_1946_p3}, {9'd0}}, {tmp_68_fu_1946_p3}}, {4'd0}}, {tmp_68_fu_1946_p3}}, {1'd0}};

assign tmp_6_1_cast_fu_659_p1 = $signed(tmp_6_1_fu_651_p3);

assign tmp_6_1_fu_651_p1 = cmdIn_V_q0;

assign tmp_6_1_fu_651_p3 = {{tmp_6_1_fu_651_p1}, {3'd0}};

assign tmp_6_2_cast_fu_730_p1 = $signed(tmp_6_2_fu_722_p3);

assign tmp_6_2_fu_722_p1 = cmdIn_V_q0;

assign tmp_6_2_fu_722_p3 = {{tmp_6_2_fu_722_p1}, {3'd0}};

assign tmp_6_3_cast_fu_880_p1 = $signed(tmp_6_3_fu_872_p3);

assign tmp_6_3_fu_872_p1 = cmdIn_V_q0;

assign tmp_6_3_fu_872_p3 = {{tmp_6_3_fu_872_p1}, {3'd0}};

assign tmp_6_4_cast_fu_1106_p1 = $signed(tmp_6_4_fu_1098_p3);

assign tmp_6_4_fu_1098_p3 = {{cmdIn_V_q0}, {3'd0}};

assign tmp_6_5_cast_fu_640_p1 = $signed(tmp_6_5_fu_632_p3);

assign tmp_6_5_fu_632_p3 = {{cmdIn_V_q0}, {3'd0}};

assign tmp_6_cast_fu_702_p1 = $signed(tmp_6_fu_694_p3);

assign tmp_6_fu_694_p3 = {{last_error_pos_V_0}, {3'd0}};

assign tmp_70_cast_fu_1899_p1 = $signed(tmp_65_fu_1893_p2);

assign tmp_70_fu_1974_p2 = ($signed(18'd65470) + $signed(tmp_73_cast_fu_1970_p1));

assign tmp_71_fu_1984_p2 = (tmp_67_fu_1932_p3 | tmp_116_1_fu_1940_p2);

assign tmp_72_fu_2013_p3 = p_Val2_69_2_fu_1998_p2[32'd63];

assign tmp_73_cast_fu_1970_p1 = $signed(tmp_69_fu_1954_p7);

assign tmp_73_fu_2027_p3 = p_Val2_69_2_fu_1998_p2[32'd63];

assign tmp_74_cast_fu_1980_p1 = $signed(tmp_70_fu_1974_p2);

assign tmp_74_fu_2035_p7 = {{{{{{tmp_73_fu_2027_p3}, {9'd0}}, {tmp_73_fu_2027_p3}}, {4'd0}}, {tmp_73_fu_2027_p3}}, {1'd0}};

assign tmp_75_fu_2055_p2 = ($signed(18'd65470) + $signed(tmp_77_cast_fu_2051_p1));

assign tmp_76_fu_2065_p2 = (tmp_72_fu_2013_p3 | tmp_116_2_fu_2021_p2);

assign tmp_77_cast_fu_2051_p1 = $signed(tmp_74_fu_2035_p7);

assign tmp_77_fu_2094_p3 = p_Val2_69_3_fu_2079_p2[32'd63];

assign tmp_78_cast_fu_2061_p1 = $signed(tmp_75_fu_2055_p2);

assign tmp_78_fu_2108_p3 = p_Val2_69_3_fu_2079_p2[32'd63];

assign tmp_79_fu_2116_p7 = {{{{{{tmp_78_fu_2108_p3}, {9'd0}}, {tmp_78_fu_2108_p3}}, {4'd0}}, {tmp_78_fu_2108_p3}}, {1'd0}};

assign tmp_7_fu_1023_p2 = (($signed(tmp_5_fu_1013_p4) < $signed(32'd4294901760)) ? 1'b1 : 1'b0);

assign tmp_80_fu_2136_p2 = ($signed(18'd65470) + $signed(tmp_83_cast_fu_2132_p1));

assign tmp_81_cast_fu_1677_p1 = $signed(addconv_fu_1650_p2);

assign tmp_81_fu_2146_p2 = (tmp_77_fu_2094_p3 | tmp_116_3_fu_2102_p2);

assign tmp_82_cast_fu_1681_p1 = $signed(p_Val2_62_fu_1671_p2);

assign tmp_82_fu_2175_p3 = p_Val2_69_4_fu_2160_p2[32'd63];

assign tmp_83_cast_fu_2132_p1 = $signed(tmp_79_fu_2116_p7);

assign tmp_83_fu_2189_p3 = p_Val2_69_4_fu_2160_p2[32'd63];

assign tmp_84_cast2_fu_2142_p1 = $signed(tmp_80_fu_2136_p2);

assign tmp_84_cast_fu_1832_p1 = $signed(tmp_59_fu_1825_p3);

assign tmp_84_fu_2197_p7 = {{{{{{tmp_83_fu_2189_p3}, {9'd0}}, {tmp_83_fu_2189_p3}}, {4'd0}}, {tmp_83_fu_2189_p3}}, {1'd0}};

assign tmp_85_fu_2217_p2 = ($signed(18'd65470) + $signed(tmp_87_cast_fu_2213_p1));

assign tmp_86_fu_2227_p2 = (tmp_82_fu_2175_p3 | tmp_116_4_fu_2183_p2);

assign tmp_87_cast_fu_2213_p1 = $signed(tmp_84_fu_2197_p7);

assign tmp_87_fu_2256_p3 = p_Val2_69_5_fu_2241_p2[32'd63];

assign tmp_88_cast_fu_2223_p1 = $signed(tmp_85_fu_2217_p2);

assign tmp_88_fu_2270_p3 = p_Val2_69_5_fu_2241_p2[32'd63];

assign tmp_89_fu_2278_p7 = {{{{{{tmp_88_fu_2270_p3}, {9'd0}}, {tmp_88_fu_2270_p3}}, {4'd0}}, {tmp_88_fu_2270_p3}}, {1'd0}};

assign tmp_8_fu_664_p0 = cmdIn_V_q0;

assign tmp_8_fu_664_p1 = tmp_8_fu_664_p0;

assign tmp_90_fu_2298_p2 = ($signed(18'd65470) + $signed(tmp_91_cast_fu_2294_p1));

assign tmp_91_cast_fu_2294_p1 = $signed(tmp_89_fu_2278_p7);

assign tmp_91_fu_2308_p2 = (tmp_87_fu_2256_p3 | tmp_116_5_fu_2264_p2);

assign tmp_92_cast_fu_2304_p1 = $signed(tmp_90_fu_2298_p2);

assign tmp_92_fu_2337_p3 = p_Val2_69_6_fu_2322_p2[32'd63];

assign tmp_93_fu_2351_p3 = p_Val2_69_6_fu_2322_p2[32'd63];

assign tmp_94_fu_2359_p7 = {{{{{{tmp_93_fu_2351_p3}, {9'd0}}, {tmp_93_fu_2351_p3}}, {4'd0}}, {tmp_93_fu_2351_p3}}, {1'd0}};

assign tmp_95_cast_fu_2375_p1 = $signed(tmp_94_fu_2359_p7);

assign tmp_95_fu_2379_p2 = ($signed(18'd65470) + $signed(tmp_95_cast_fu_2375_p1));

assign tmp_96_cast_fu_2385_p1 = $signed(tmp_95_fu_2379_p2);

assign tmp_96_fu_2389_p2 = (tmp_92_fu_2337_p3 | tmp_116_6_fu_2345_p2);

assign tmp_97_fu_2418_p3 = p_Val2_69_7_fu_2403_p2[32'd63];

assign tmp_98_fu_2432_p3 = p_Val2_69_7_fu_2403_p2[32'd63];

assign tmp_99_cast_fu_2456_p1 = $signed(tmp_99_fu_2440_p7);

assign tmp_99_fu_2440_p7 = {{{{{{tmp_98_fu_2432_p3}, {9'd0}}, {tmp_98_fu_2432_p3}}, {4'd0}}, {tmp_98_fu_2432_p3}}, {1'd0}};

assign tmp_9_fu_668_p1 = $signed(measured_V_q0);

assign tmp_fu_768_p2 = (tmp_2_fu_754_p2 | tmp_1_fu_748_p2);

assign tmp_s_fu_1029_p2 = (($signed(tmp_5_fu_1013_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    p_Val2_3_reg_2591[2:0] <= 3'b000;
    p_Val2_8_reg_2597[2:0] <= 3'b000;
    p_Val2_7_reg_2647[2:0] <= 3'b000;
    p_Val2_10_reg_2652[2:0] <= 3'b000;
    p_Val2_16_reg_2657[2:0] <= 3'b000;
    p_Val2_19_reg_2663[2:0] <= 3'b000;
    p_Val2_20_reg_2723[2:0] <= 3'b000;
    p_Val2_23_reg_2728[2:0] <= 3'b000;
    p_Val2_36_reg_2823[2:0] <= 3'b000;
    p_Val2_39_reg_2829[2:0] <= 3'b000;
    p_Val2_49_reg_2864[2:0] <= 3'b000;
    r_V_2_reg_2909[15:0] <= 16'b0000000000000000;
    r_V_2_1_reg_2914[15:0] <= 16'b0000000000000000;
    addconv2_reg_2919[15:0] <= 16'b0000000000000000;
    r_V_2_3_reg_2924[15:0] <= 16'b0000000000000000;
    r_V_2_4_reg_2929[15:0] <= 16'b0000000000000000;
    r_V_2_5_reg_2934[15:0] <= 16'b0000000000000000;
    addconv4_reg_2939[15:0] <= 16'b0000000000000000;
    r_V_2_7_reg_2944[15:0] <= 16'b0000000000000000;
end

endmodule //pid
