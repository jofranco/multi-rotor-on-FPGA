-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pid is
generic (
    C_M_AXI_OUT_R_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_OUT_R_ID_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_R_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_R_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_OUT_R_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_R_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_R_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_R_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_INPUT_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_INPUT_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_TEST_ADDR_WIDTH : INTEGER := 15;
    C_S_AXI_TEST_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_OUT_R_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_OUT_R_USER_VALUE : INTEGER := 0;
    C_M_AXI_OUT_R_PROT_VALUE : INTEGER := 0;
    C_M_AXI_OUT_R_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_OUT_r_AWVALID : OUT STD_LOGIC;
    m_axi_OUT_r_AWREADY : IN STD_LOGIC;
    m_axi_OUT_r_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ADDR_WIDTH-1 downto 0);
    m_axi_OUT_r_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ID_WIDTH-1 downto 0);
    m_axi_OUT_r_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_OUT_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_OUT_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_OUT_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_AWUSER_WIDTH-1 downto 0);
    m_axi_OUT_r_WVALID : OUT STD_LOGIC;
    m_axi_OUT_r_WREADY : IN STD_LOGIC;
    m_axi_OUT_r_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_DATA_WIDTH-1 downto 0);
    m_axi_OUT_r_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_DATA_WIDTH/8-1 downto 0);
    m_axi_OUT_r_WLAST : OUT STD_LOGIC;
    m_axi_OUT_r_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ID_WIDTH-1 downto 0);
    m_axi_OUT_r_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_WUSER_WIDTH-1 downto 0);
    m_axi_OUT_r_ARVALID : OUT STD_LOGIC;
    m_axi_OUT_r_ARREADY : IN STD_LOGIC;
    m_axi_OUT_r_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ADDR_WIDTH-1 downto 0);
    m_axi_OUT_r_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ID_WIDTH-1 downto 0);
    m_axi_OUT_r_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_OUT_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_OUT_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_OUT_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ARUSER_WIDTH-1 downto 0);
    m_axi_OUT_r_RVALID : IN STD_LOGIC;
    m_axi_OUT_r_RREADY : OUT STD_LOGIC;
    m_axi_OUT_r_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_R_DATA_WIDTH-1 downto 0);
    m_axi_OUT_r_RLAST : IN STD_LOGIC;
    m_axi_OUT_r_RID : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ID_WIDTH-1 downto 0);
    m_axi_OUT_r_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_R_RUSER_WIDTH-1 downto 0);
    m_axi_OUT_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_BVALID : IN STD_LOGIC;
    m_axi_OUT_r_BREADY : OUT STD_LOGIC;
    m_axi_OUT_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_BID : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ID_WIDTH-1 downto 0);
    m_axi_OUT_r_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_R_BUSER_WIDTH-1 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_INPUT_AWVALID : IN STD_LOGIC;
    s_axi_INPUT_AWREADY : OUT STD_LOGIC;
    s_axi_INPUT_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_INPUT_ADDR_WIDTH-1 downto 0);
    s_axi_INPUT_WVALID : IN STD_LOGIC;
    s_axi_INPUT_WREADY : OUT STD_LOGIC;
    s_axi_INPUT_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_INPUT_DATA_WIDTH-1 downto 0);
    s_axi_INPUT_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_INPUT_DATA_WIDTH/8-1 downto 0);
    s_axi_INPUT_ARVALID : IN STD_LOGIC;
    s_axi_INPUT_ARREADY : OUT STD_LOGIC;
    s_axi_INPUT_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_INPUT_ADDR_WIDTH-1 downto 0);
    s_axi_INPUT_RVALID : OUT STD_LOGIC;
    s_axi_INPUT_RREADY : IN STD_LOGIC;
    s_axi_INPUT_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_INPUT_DATA_WIDTH-1 downto 0);
    s_axi_INPUT_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_INPUT_BVALID : OUT STD_LOGIC;
    s_axi_INPUT_BREADY : IN STD_LOGIC;
    s_axi_INPUT_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_TEST_AWVALID : IN STD_LOGIC;
    s_axi_TEST_AWREADY : OUT STD_LOGIC;
    s_axi_TEST_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_TEST_ADDR_WIDTH-1 downto 0);
    s_axi_TEST_WVALID : IN STD_LOGIC;
    s_axi_TEST_WREADY : OUT STD_LOGIC;
    s_axi_TEST_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_TEST_DATA_WIDTH-1 downto 0);
    s_axi_TEST_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_TEST_DATA_WIDTH/8-1 downto 0);
    s_axi_TEST_ARVALID : IN STD_LOGIC;
    s_axi_TEST_ARREADY : OUT STD_LOGIC;
    s_axi_TEST_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_TEST_ADDR_WIDTH-1 downto 0);
    s_axi_TEST_RVALID : OUT STD_LOGIC;
    s_axi_TEST_RREADY : IN STD_LOGIC;
    s_axi_TEST_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_TEST_DATA_WIDTH-1 downto 0);
    s_axi_TEST_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_TEST_BVALID : OUT STD_LOGIC;
    s_axi_TEST_BREADY : IN STD_LOGIC;
    s_axi_TEST_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of pid is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "pid,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=23,HLS_SYN_TPT=23,HLS_SYN_MEM=20,HLS_SYN_DSP=114,HLS_SYN_FF=5679,HLS_SYN_LUT=6100,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_ST_iter0_fsm_state2 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000010";
    constant ap_ST_iter0_fsm_state3 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000100";
    constant ap_ST_iter0_fsm_state4 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000001000";
    constant ap_ST_iter0_fsm_state5 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000010000";
    constant ap_ST_iter0_fsm_state6 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100000";
    constant ap_ST_iter0_fsm_state7 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_ST_iter0_fsm_state8 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010000000";
    constant ap_ST_iter0_fsm_state9 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000100000000";
    constant ap_ST_iter0_fsm_state10 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000000000";
    constant ap_ST_iter0_fsm_state11 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000010000000000";
    constant ap_ST_iter0_fsm_state12 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000100000000000";
    constant ap_ST_iter0_fsm_state13 : STD_LOGIC_VECTOR (22 downto 0) := "00000000001000000000000";
    constant ap_ST_iter0_fsm_state14 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000000000000";
    constant ap_ST_iter0_fsm_state15 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_ST_iter0_fsm_state16 : STD_LOGIC_VECTOR (22 downto 0) := "00000001000000000000000";
    constant ap_ST_iter0_fsm_state17 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_ST_iter0_fsm_state18 : STD_LOGIC_VECTOR (22 downto 0) := "00000100000000000000000";
    constant ap_ST_iter0_fsm_state19 : STD_LOGIC_VECTOR (22 downto 0) := "00001000000000000000000";
    constant ap_ST_iter0_fsm_state20 : STD_LOGIC_VECTOR (22 downto 0) := "00010000000000000000000";
    constant ap_ST_iter0_fsm_state21 : STD_LOGIC_VECTOR (22 downto 0) := "00100000000000000000000";
    constant ap_ST_iter0_fsm_state22 : STD_LOGIC_VECTOR (22 downto 0) := "01000000000000000000000";
    constant ap_ST_iter0_fsm_state23 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_ST_iter1_fsm_state24 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_FF9C0000 : STD_LOGIC_VECTOR (31 downto 0) := "11111111100111000000000000000000";
    constant ap_const_lv32_640000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000011001000000000000000000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_FFFF0000 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110000000000000000";
    constant ap_const_lv32_FFBE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001111111110111110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_E000 : STD_LOGIC_VECTOR (15 downto 0) := "1110000000000000";
    constant ap_const_lv16_1FF7 : STD_LOGIC_VECTOR (15 downto 0) := "0001111111110111";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_547A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000101010001111010";
    constant ap_const_lv35_0 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv18_FFBE : STD_LOGIC_VECTOR (17 downto 0) := "001111111110111110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    signal ap_CS_iter0_fsm_state1 : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter1_fsm_state0 : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_CS_iter0_fsm_state23 : STD_LOGIC;
    signal ap_block_state23_pp0_stage22_iter0 : BOOLEAN;
    signal OUT_r_AWVALID : STD_LOGIC;
    signal OUT_r_AWREADY : STD_LOGIC;
    signal OUT_r_WVALID : STD_LOGIC;
    signal OUT_r_WREADY : STD_LOGIC;
    signal OUT_r_ARREADY : STD_LOGIC;
    signal OUT_r_RVALID : STD_LOGIC;
    signal OUT_r_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal OUT_r_RLAST : STD_LOGIC;
    signal OUT_r_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal OUT_r_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal OUT_r_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal OUT_r_BVALID : STD_LOGIC;
    signal OUT_r_BREADY : STD_LOGIC;
    signal OUT_r_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal OUT_r_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal OUT_r_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state24_pp0_stage0_iter1 : BOOLEAN;
    signal ap_CS_iter1_fsm_state24 : STD_LOGIC;
    signal cmdIn_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cmdIn_V_ce0 : STD_LOGIC;
    signal cmdIn_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal measured_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal measured_V_ce0 : STD_LOGIC;
    signal measured_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal kp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal kp_V_ce0 : STD_LOGIC;
    signal kp_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal kd_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kd_V_ce0 : STD_LOGIC;
    signal kd_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ki_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal ki_V_ce0 : STD_LOGIC;
    signal ki_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal test_V_ce0 : STD_LOGIC;
    signal test_V_we0 : STD_LOGIC;
    signal test_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal integral_pos_V_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal last_error_pos_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal integral_pos_V_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal last_error_pos_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal integral_rate_V_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal last_error_rate_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal integral_rate_V_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal last_error_rate_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal OUT_r_blk_n_AW : STD_LOGIC;
    signal ap_CS_iter0_fsm_state11 : STD_LOGIC;
    signal OUT_r_blk_n_W : STD_LOGIC;
    signal ap_CS_iter0_fsm_state12 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state13 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state14 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state15 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state16 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state17 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state18 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state19 : STD_LOGIC;
    signal OUT_r_blk_n_B : STD_LOGIC;
    signal reg_620 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_iter0_fsm_state3 : STD_LOGIC;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal tmp_3_reg_2544 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_iter0_fsm_state4 : STD_LOGIC;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state5 : STD_LOGIC;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state6 : STD_LOGIC;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal reg_624 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_628 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state2 : STD_LOGIC;
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal tmp_6_5_cast_fu_640_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_34_reg_2551 : STD_LOGIC_VECTOR (15 downto 0);
    signal kp_V_load_3_reg_2556 : STD_LOGIC_VECTOR (31 downto 0);
    signal ki_V_load_2_reg_2561 : STD_LOGIC_VECTOR (31 downto 0);
    signal kd_V_load_2_reg_2566 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_reg_2571 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_1_cast_fu_659_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_678_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_3_reg_2591 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_8_fu_706_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_8_reg_2597 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_13_reg_2622 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_2_cast_fu_730_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_774_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_2642 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_fu_795_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_7_reg_2647 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_10_fu_808_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_10_reg_2652 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_16_fu_828_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_16_reg_2657 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_19_fu_856_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_19_reg_2663 : STD_LOGIC_VECTOR (20 downto 0);
    signal ki_V_load_1_reg_2668 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_25_reg_2698 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_3_cast_fu_880_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_fu_892_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_9_reg_2713 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_17_fu_937_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_2718 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_20_fu_958_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_20_reg_2723 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_23_fu_971_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_23_reg_2728 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_fu_985_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_reg_2733 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_60_reg_2748 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_command_V_cast_fu_999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_21_fu_1047_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_21_reg_2768 : STD_LOGIC_VECTOR (47 downto 0);
    signal phitmp1_reg_2773 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_fu_1090_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_reg_2778 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_56_reg_2783 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_4_cast_fu_1106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_iter0_fsm_state7 : STD_LOGIC;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal tmp_29_fu_1166_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_reg_2808 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_59_reg_2813 : STD_LOGIC_VECTOR (15 downto 0);
    signal kp_V_load_5_reg_2818 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_36_fu_1199_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_36_reg_2823 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_CS_iter0_fsm_state8 : STD_LOGIC;
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal p_Val2_39_fu_1227_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_39_reg_2829 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_45_fu_1250_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_45_reg_2834 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_53_fu_1256_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_reg_2839 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_fu_1305_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_reg_2844 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_iter0_fsm_state9 : STD_LOGIC;
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal p_Val2_40_fu_1325_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_40_reg_2849 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_43_fu_1337_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_43_reg_2854 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_47_fu_1394_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_reg_2859 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_49_fu_1424_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_49_reg_2864 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_50_fu_1438_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_50_reg_2869 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_1_fu_1456_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_1_reg_2874 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_41_fu_1468_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_41_reg_2879 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_iter0_fsm_state10 : STD_LOGIC;
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal p_Val2_51_fu_1481_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_51_reg_2884 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_53_fu_1494_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_53_reg_2889 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_56_fu_1594_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_reg_2894 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_sig_ioackin_OUT_r_AWREADY : STD_LOGIC;
    signal tmp_57_fu_1610_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_reg_2899 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_reg_2904 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_fu_1685_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_2_reg_2909 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_sig_ioackin_OUT_r_WREADY : STD_LOGIC;
    signal r_V_2_1_fu_1701_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_2_1_reg_2914 : STD_LOGIC_VECTOR (49 downto 0);
    signal addconv2_fu_1707_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal addconv2_reg_2919 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_2_3_fu_1723_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_2_3_reg_2924 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_2_4_fu_1729_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_2_4_reg_2929 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_2_5_fu_1735_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_2_5_reg_2934 : STD_LOGIC_VECTOR (49 downto 0);
    signal addconv4_fu_1741_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal addconv4_reg_2939 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_2_7_fu_1747_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_2_7_reg_2944 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal grp_fu_1756_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_63_reg_2989 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal grp_fu_1765_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_68_1_reg_2994 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1774_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_68_2_reg_2999 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1783_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_68_3_reg_3004 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1792_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_68_4_reg_3009 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1801_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_68_5_reg_3014 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1810_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_68_6_reg_3019 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1819_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_68_7_reg_3024 : STD_LOGIC_VECTOR (63 downto 0);
    signal test_buffer_V_load_fu_1909_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_reg_3029 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal test_buffer_V_load_1_fu_1990_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_1_reg_3034 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_2_fu_2071_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_2_reg_3039 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_3_fu_2152_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_3_reg_3044 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_4_fu_2233_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_4_reg_3049 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_5_fu_2314_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_5_reg_3054 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_6_fu_2395_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_buffer_V_load_6_reg_3059 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_7_fu_2476_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_7_reg_3064 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state20 : STD_LOGIC;
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state21 : STD_LOGIC;
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state22 : STD_LOGIC;
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_phi_mux_p_Val2_29_phi_fu_591_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_Val2_30_phi_fu_602_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_28_reg_609 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ioackin_OUT_r_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_OUT_r_WREADY : STD_LOGIC := '0';
    signal tmp_11_fu_712_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_862_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_fu_1233_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_5_fu_632_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_6_1_fu_651_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_1_fu_651_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_8_fu_664_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_664_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_9_fu_668_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_2_fu_672_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_fu_694_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_3_cast_fu_686_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_6_cast_fu_702_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_6_2_fu_722_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_2_fu_722_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_3_cast1_fu_735_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_6_fu_742_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_cast_fu_760_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_fu_795_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_fu_795_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_10_fu_808_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_10_fu_808_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_12_fu_814_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_814_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_13_fu_818_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_15_fu_822_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_fu_844_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_16_cast_fu_836_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_27_cast_fu_852_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_6_3_fu_872_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_3_fu_872_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_9_fu_892_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_fu_892_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_16_cast1_fu_898_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_10_fu_905_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_cast_fu_923_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_20_fu_958_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_20_fu_958_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_23_fu_971_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_23_fu_971_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_24_fu_977_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_fu_977_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_25_fu_981_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal t_command_V_fu_991_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_11_fu_1004_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_12_fu_1008_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_5_fu_1013_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_21_fu_1047_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_21_fu_1047_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_27_fu_1056_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_27_fu_1056_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_27_fu_1056_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_cast_fu_1072_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_1080_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_4_fu_1098_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_22_fu_1111_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_24_fu_1115_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_19_fu_1120_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_1130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_cast_fu_1148_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_fu_1156_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_33_fu_1180_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_fu_1186_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_fu_1190_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_35_fu_1193_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_36_fu_1215_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_36_cast_fu_1207_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_51_cast_fu_1223_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_32_fu_1174_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_fu_1243_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_43_fu_1247_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_36_cast9_fu_1266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_38_fu_1273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_1279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_cast_fu_1291_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_40_fu_1325_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_40_fu_1325_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_43_fu_1337_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_43_fu_1337_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_47_fu_1343_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_47_cast8_fu_1350_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_48_fu_1362_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_1368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_1374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_cast_fu_1380_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_1412_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_47_cast_fu_1354_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_68_cast_fu_1420_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_50_fu_1438_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_50_fu_1438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_31_fu_1260_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_54_fu_1449_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_55_fu_1453_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_41_fu_1468_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_41_fu_1468_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_51_fu_1481_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_51_fu_1481_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_53_fu_1494_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_53_fu_1494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_42_fu_1500_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_44_fu_1504_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_37_fu_1509_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_52_fu_1537_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_54_fu_1541_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_49_fu_1546_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_1556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_1562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_55_fu_1580_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_55_fu_1580_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_1531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_cast_fu_1586_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_cast_fu_1602_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_55_fu_1580_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal p_shl1_fu_1628_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_61_fu_1639_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_61_cast_fu_1646_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_shl1_cast_fu_1635_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_shl_fu_1656_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_shl_cast_fu_1667_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal addconv_fu_1650_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_62_fu_1671_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_81_cast_fu_1677_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_shl_cast7_fu_1663_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal sum_fu_1691_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal sum_cast_fu_1697_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal addconv3_fu_1713_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_108_3_cast_fu_1719_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_82_cast_fu_1681_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_1756_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1765_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1774_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1783_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1792_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1801_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1810_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1819_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_59_fu_1825_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_84_cast_fu_1832_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_65_fu_1836_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_1841_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_1865_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_1873_p7 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_69_cast_fu_1889_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_65_fu_1893_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_61_fu_1851_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_1859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_1903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_cast_fu_1899_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_69_1_fu_1917_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_1_fu_1922_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_1946_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_1954_p7 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_73_cast_fu_1970_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_70_fu_1974_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_67_fu_1932_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_1_fu_1940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_1984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_cast_fu_1980_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_69_2_fu_1998_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_2_fu_2003_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_fu_2027_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_2035_p7 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_77_cast_fu_2051_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_75_fu_2055_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_72_fu_2013_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_2_fu_2021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_2065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_cast_fu_2061_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_69_3_fu_2079_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_3_fu_2084_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_2108_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_fu_2116_p7 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_83_cast_fu_2132_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_80_fu_2136_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_77_fu_2094_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_3_fu_2102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_2146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_cast2_fu_2142_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_69_4_fu_2160_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_4_fu_2165_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_2189_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_2197_p7 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_87_cast_fu_2213_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_85_fu_2217_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_82_fu_2175_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_4_fu_2183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_2227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_cast_fu_2223_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_69_5_fu_2241_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_5_fu_2246_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_2270_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_fu_2278_p7 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_91_cast_fu_2294_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_90_fu_2298_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_87_fu_2256_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_5_fu_2264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_fu_2308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_cast_fu_2304_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_69_6_fu_2322_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_6_fu_2327_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_93_fu_2351_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_fu_2359_p7 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_95_cast_fu_2375_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_95_fu_2379_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_92_fu_2337_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_6_fu_2345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_fu_2389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_cast_fu_2385_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_69_7_fu_2403_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_7_fu_2408_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_98_fu_2432_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_fu_2440_p7 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_99_cast_fu_2456_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_100_fu_2460_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_97_fu_2418_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_7_fu_2426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_fu_2470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_cast_fu_2466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1756_ce : STD_LOGIC;
    signal grp_fu_1765_ce : STD_LOGIC;
    signal grp_fu_1774_ce : STD_LOGIC;
    signal grp_fu_1783_ce : STD_LOGIC;
    signal grp_fu_1792_ce : STD_LOGIC;
    signal grp_fu_1801_ce : STD_LOGIC;
    signal grp_fu_1810_ce : STD_LOGIC;
    signal grp_fu_1819_ce : STD_LOGIC;
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_condition_2085 : BOOLEAN;
    signal ap_condition_636 : BOOLEAN;

    component pid_mul_16ns_50s_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component pid_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        kp_V_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        kp_V_ce0 : IN STD_LOGIC;
        kp_V_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        kd_V_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        kd_V_ce0 : IN STD_LOGIC;
        kd_V_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ki_V_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ki_V_ce0 : IN STD_LOGIC;
        ki_V_q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pid_INPUT_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        cmdIn_V_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        cmdIn_V_ce0 : IN STD_LOGIC;
        cmdIn_V_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        measured_V_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        measured_V_ce0 : IN STD_LOGIC;
        measured_V_q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component pid_TEST_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        test_V_address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        test_V_ce0 : IN STD_LOGIC;
        test_V_we0 : IN STD_LOGIC;
        test_V_d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pid_OUT_r_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    pid_CTRL_s_axi_U : component pid_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        kp_V_address0 => kp_V_address0,
        kp_V_ce0 => kp_V_ce0,
        kp_V_q0 => kp_V_q0,
        kd_V_address0 => kd_V_address0,
        kd_V_ce0 => kd_V_ce0,
        kd_V_q0 => kd_V_q0,
        ki_V_address0 => ki_V_address0,
        ki_V_ce0 => ki_V_ce0,
        ki_V_q0 => ki_V_q0);

    pid_INPUT_s_axi_U : component pid_INPUT_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_INPUT_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_INPUT_DATA_WIDTH)
    port map (
        AWVALID => s_axi_INPUT_AWVALID,
        AWREADY => s_axi_INPUT_AWREADY,
        AWADDR => s_axi_INPUT_AWADDR,
        WVALID => s_axi_INPUT_WVALID,
        WREADY => s_axi_INPUT_WREADY,
        WDATA => s_axi_INPUT_WDATA,
        WSTRB => s_axi_INPUT_WSTRB,
        ARVALID => s_axi_INPUT_ARVALID,
        ARREADY => s_axi_INPUT_ARREADY,
        ARADDR => s_axi_INPUT_ARADDR,
        RVALID => s_axi_INPUT_RVALID,
        RREADY => s_axi_INPUT_RREADY,
        RDATA => s_axi_INPUT_RDATA,
        RRESP => s_axi_INPUT_RRESP,
        BVALID => s_axi_INPUT_BVALID,
        BREADY => s_axi_INPUT_BREADY,
        BRESP => s_axi_INPUT_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        cmdIn_V_address0 => cmdIn_V_address0,
        cmdIn_V_ce0 => cmdIn_V_ce0,
        cmdIn_V_q0 => cmdIn_V_q0,
        measured_V_address0 => measured_V_address0,
        measured_V_ce0 => measured_V_ce0,
        measured_V_q0 => measured_V_q0);

    pid_TEST_s_axi_U : component pid_TEST_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_TEST_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_TEST_DATA_WIDTH)
    port map (
        AWVALID => s_axi_TEST_AWVALID,
        AWREADY => s_axi_TEST_AWREADY,
        AWADDR => s_axi_TEST_AWADDR,
        WVALID => s_axi_TEST_WVALID,
        WREADY => s_axi_TEST_WREADY,
        WDATA => s_axi_TEST_WDATA,
        WSTRB => s_axi_TEST_WSTRB,
        ARVALID => s_axi_TEST_ARVALID,
        ARREADY => s_axi_TEST_ARREADY,
        ARADDR => s_axi_TEST_ARADDR,
        RVALID => s_axi_TEST_RVALID,
        RREADY => s_axi_TEST_RREADY,
        RDATA => s_axi_TEST_RDATA,
        RRESP => s_axi_TEST_RRESP,
        BVALID => s_axi_TEST_BVALID,
        BREADY => s_axi_TEST_BREADY,
        BRESP => s_axi_TEST_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        test_V_address0 => test_V_address0,
        test_V_ce0 => test_V_ce0,
        test_V_we0 => test_V_we0,
        test_V_d0 => test_V_d0);

    pid_OUT_r_m_axi_U : component pid_OUT_r_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 16,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_OUT_R_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_OUT_R_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_OUT_R_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_OUT_R_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_OUT_R_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_OUT_R_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_OUT_R_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_OUT_R_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_OUT_R_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_OUT_R_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_OUT_R_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_OUT_R_CACHE_VALUE)
    port map (
        AWVALID => m_axi_OUT_r_AWVALID,
        AWREADY => m_axi_OUT_r_AWREADY,
        AWADDR => m_axi_OUT_r_AWADDR,
        AWID => m_axi_OUT_r_AWID,
        AWLEN => m_axi_OUT_r_AWLEN,
        AWSIZE => m_axi_OUT_r_AWSIZE,
        AWBURST => m_axi_OUT_r_AWBURST,
        AWLOCK => m_axi_OUT_r_AWLOCK,
        AWCACHE => m_axi_OUT_r_AWCACHE,
        AWPROT => m_axi_OUT_r_AWPROT,
        AWQOS => m_axi_OUT_r_AWQOS,
        AWREGION => m_axi_OUT_r_AWREGION,
        AWUSER => m_axi_OUT_r_AWUSER,
        WVALID => m_axi_OUT_r_WVALID,
        WREADY => m_axi_OUT_r_WREADY,
        WDATA => m_axi_OUT_r_WDATA,
        WSTRB => m_axi_OUT_r_WSTRB,
        WLAST => m_axi_OUT_r_WLAST,
        WID => m_axi_OUT_r_WID,
        WUSER => m_axi_OUT_r_WUSER,
        ARVALID => m_axi_OUT_r_ARVALID,
        ARREADY => m_axi_OUT_r_ARREADY,
        ARADDR => m_axi_OUT_r_ARADDR,
        ARID => m_axi_OUT_r_ARID,
        ARLEN => m_axi_OUT_r_ARLEN,
        ARSIZE => m_axi_OUT_r_ARSIZE,
        ARBURST => m_axi_OUT_r_ARBURST,
        ARLOCK => m_axi_OUT_r_ARLOCK,
        ARCACHE => m_axi_OUT_r_ARCACHE,
        ARPROT => m_axi_OUT_r_ARPROT,
        ARQOS => m_axi_OUT_r_ARQOS,
        ARREGION => m_axi_OUT_r_ARREGION,
        ARUSER => m_axi_OUT_r_ARUSER,
        RVALID => m_axi_OUT_r_RVALID,
        RREADY => m_axi_OUT_r_RREADY,
        RDATA => m_axi_OUT_r_RDATA,
        RLAST => m_axi_OUT_r_RLAST,
        RID => m_axi_OUT_r_RID,
        RUSER => m_axi_OUT_r_RUSER,
        RRESP => m_axi_OUT_r_RRESP,
        BVALID => m_axi_OUT_r_BVALID,
        BREADY => m_axi_OUT_r_BREADY,
        BRESP => m_axi_OUT_r_BRESP,
        BID => m_axi_OUT_r_BID,
        BUSER => m_axi_OUT_r_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => OUT_r_ARREADY,
        I_ARADDR => ap_const_lv32_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => OUT_r_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => OUT_r_RDATA,
        I_RID => OUT_r_RID,
        I_RUSER => OUT_r_RUSER,
        I_RRESP => OUT_r_RRESP,
        I_RLAST => OUT_r_RLAST,
        I_AWVALID => OUT_r_AWVALID,
        I_AWREADY => OUT_r_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_8,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => OUT_r_WVALID,
        I_WREADY => OUT_r_WREADY,
        I_WDATA => ap_const_lv16_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv2_3,
        I_BVALID => OUT_r_BVALID,
        I_BREADY => OUT_r_BREADY,
        I_BRESP => OUT_r_BRESP,
        I_BID => OUT_r_BID,
        I_BUSER => OUT_r_BUSER);

    pid_mul_16ns_50s_bkb_U1 : component pid_mul_16ns_50s_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 50,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1756_p0,
        din1 => r_V_2_reg_2909,
        ce => grp_fu_1756_ce,
        dout => grp_fu_1756_p2);

    pid_mul_16ns_50s_bkb_U2 : component pid_mul_16ns_50s_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 50,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1765_p0,
        din1 => r_V_2_1_reg_2914,
        ce => grp_fu_1765_ce,
        dout => grp_fu_1765_p2);

    pid_mul_16ns_50s_bkb_U3 : component pid_mul_16ns_50s_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 50,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1774_p0,
        din1 => addconv2_reg_2919,
        ce => grp_fu_1774_ce,
        dout => grp_fu_1774_p2);

    pid_mul_16ns_50s_bkb_U4 : component pid_mul_16ns_50s_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 50,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1783_p0,
        din1 => r_V_2_3_reg_2924,
        ce => grp_fu_1783_ce,
        dout => grp_fu_1783_p2);

    pid_mul_16ns_50s_bkb_U5 : component pid_mul_16ns_50s_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 50,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1792_p0,
        din1 => r_V_2_4_reg_2929,
        ce => grp_fu_1792_ce,
        dout => grp_fu_1792_p2);

    pid_mul_16ns_50s_bkb_U6 : component pid_mul_16ns_50s_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 50,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1801_p0,
        din1 => r_V_2_5_reg_2934,
        ce => grp_fu_1801_ce,
        dout => grp_fu_1801_p2);

    pid_mul_16ns_50s_bkb_U7 : component pid_mul_16ns_50s_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 50,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1810_p0,
        din1 => addconv4_reg_2939,
        ce => grp_fu_1810_ce,
        dout => grp_fu_1810_p2);

    pid_mul_16ns_50s_bkb_U8 : component pid_mul_16ns_50s_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 50,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1819_p0,
        din1 => r_V_2_7_reg_2944,
        ce => grp_fu_1819_ce,
        dout => grp_fu_1819_p2);





    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_OUT_r_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_OUT_r_AWREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_iter0_fsm_state11)) then
                    if ((ap_const_boolean_1 = ap_condition_636)) then 
                        ap_reg_ioackin_OUT_r_AWREADY <= ap_const_logic_0;
                    elsif ((ap_const_boolean_1 = ap_condition_2085)) then 
                        ap_reg_ioackin_OUT_r_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_OUT_r_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_OUT_r_WREADY <= ap_const_logic_0;
            else
                if (((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12)))) then 
                    ap_reg_ioackin_OUT_r_WREADY <= ap_const_logic_0;
                elsif (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12)))) then 
                    ap_reg_ioackin_OUT_r_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_p_Val2_28_reg_609_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) then
                if (((tmp_3_reg_2544 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7))) then 
                    ap_phi_reg_pp0_iter0_p_Val2_28_reg_609 <= ap_const_lv16_0;
                elsif (((tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then 
                    ap_phi_reg_pp0_iter0_p_Val2_28_reg_609 <= phitmp1_reg_2773;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12))) then
                    addconv2_reg_2919(49 downto 16) <= addconv2_fu_1707_p2(49 downto 16);
                    addconv4_reg_2939(49 downto 16) <= addconv4_fu_1741_p2(49 downto 16);
                    r_V_2_1_reg_2914(49 downto 16) <= r_V_2_1_fu_1701_p2(49 downto 16);
                    r_V_2_3_reg_2924(49 downto 16) <= r_V_2_3_fu_1723_p2(49 downto 16);
                    r_V_2_4_reg_2929(49 downto 16) <= r_V_2_4_fu_1729_p2(49 downto 16);
                    r_V_2_5_reg_2934(49 downto 16) <= r_V_2_5_fu_1735_p2(49 downto 16);
                    r_V_2_7_reg_2944(49 downto 16) <= r_V_2_7_fu_1747_p2(49 downto 16);
                    r_V_2_reg_2909(49 downto 16) <= r_V_2_fu_1685_p2(49 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then
                integral_pos_V_0 <= tmp_4_fu_774_p3;
                ki_V_load_1_reg_2668 <= ki_V_q0;
                last_error_pos_V_1 <= tmp_23_fu_862_p1;
                    p_Val2_10_reg_2652(47 downto 3) <= p_Val2_10_fu_808_p2(47 downto 3);
                    p_Val2_16_reg_2657(19 downto 3) <= p_Val2_16_fu_828_p3(19 downto 3);
                    p_Val2_19_reg_2663(20 downto 3) <= p_Val2_19_fu_856_p2(20 downto 3);
                    p_Val2_7_reg_2647(47 downto 3) <= p_Val2_7_fu_795_p2(47 downto 3);
                tmp_4_reg_2642 <= tmp_4_fu_774_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5))) then
                integral_pos_V_1 <= tmp_17_fu_937_p3;
                    p_Val2_20_reg_2723(47 downto 3) <= p_Val2_20_fu_958_p2(47 downto 3);
                    p_Val2_23_reg_2728(47 downto 3) <= p_Val2_23_fu_971_p2(47 downto 3);
                p_Val2_9_reg_2713 <= p_Val2_9_fu_892_p2;
                r_V_reg_2733 <= r_V_fu_985_p2;
                tmp_17_reg_2718 <= tmp_17_fu_937_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state9))) then
                integral_rate_V_0 <= tmp_35_fu_1305_p3;
                integral_rate_V_1 <= tmp_47_fu_1394_p3;
                last_error_rate_V_1 <= tmp_53_reg_2839;
                p_Val2_40_reg_2849 <= p_Val2_40_fu_1325_p2;
                p_Val2_43_reg_2854 <= p_Val2_43_fu_1337_p2;
                    p_Val2_49_reg_2864(20 downto 3) <= p_Val2_49_fu_1424_p2(20 downto 3);
                p_Val2_50_reg_2869 <= p_Val2_50_fu_1438_p2;
                r_V_1_reg_2874 <= r_V_1_fu_1456_p2;
                tmp_35_reg_2844 <= tmp_35_fu_1305_p3;
                tmp_47_reg_2859 <= tmp_47_fu_1394_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                kd_V_load_2_reg_2566 <= kd_V_q0;
                ki_V_load_2_reg_2561 <= ki_V_q0;
                kp_V_load_3_reg_2556 <= kp_V_q0;
                p_Val2_34_reg_2551 <= measured_V_q0;
                tmp_3_reg_2544 <= tmp_3_fu_645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7))) then
                kp_V_load_5_reg_2818 <= kp_V_q0;
                p_Val2_59_reg_2813 <= measured_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then
                last_error_pos_V_0 <= tmp_11_fu_712_p1;
                    p_Val2_3_reg_2591(19 downto 3) <= p_Val2_3_fu_678_p3(19 downto 3);
                    p_Val2_8_reg_2597(20 downto 3) <= p_Val2_8_fu_706_p2(20 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then
                last_error_rate_V_0 <= tmp_41_fu_1233_p1;
                    p_Val2_36_reg_2823(19 downto 3) <= p_Val2_36_fu_1199_p3(19 downto 3);
                    p_Val2_39_reg_2829(20 downto 3) <= p_Val2_39_fu_1227_p2(20 downto 3);
                p_Val2_45_reg_2834 <= p_Val2_45_fu_1250_p2;
                tmp_53_reg_2839 <= tmp_53_fu_1256_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then
                p_Val2_13_reg_2622 <= cmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6))) then
                p_Val2_21_reg_2768 <= p_Val2_21_fu_1047_p2;
                phitmp1_reg_2773 <= p_Val2_27_fu_1056_p2(31 downto 16);
                tmp_27_reg_2778 <= tmp_27_fu_1090_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5))) then
                p_Val2_25_reg_2698 <= cmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10))) then
                p_Val2_41_reg_2879 <= p_Val2_41_fu_1468_p2;
                p_Val2_51_reg_2884 <= p_Val2_51_fu_1481_p2;
                p_Val2_53_reg_2889 <= p_Val2_53_fu_1494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6))) then
                p_Val2_56_reg_2783 <= measured_V_q0;
                p_Val2_60_reg_2748 <= cmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14))) then
                p_Val2_63_reg_2989 <= grp_fu_1756_p2;
                p_Val2_68_1_reg_2994 <= grp_fu_1765_p2;
                p_Val2_68_2_reg_2999 <= grp_fu_1774_p2;
                p_Val2_68_3_reg_3004 <= grp_fu_1783_p2;
                p_Val2_68_4_reg_3009 <= grp_fu_1792_p2;
                p_Val2_68_5_reg_3014 <= grp_fu_1801_p2;
                p_Val2_68_6_reg_3019 <= grp_fu_1810_p2;
                p_Val2_68_7_reg_3024 <= grp_fu_1819_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then
                p_Val2_s_reg_2571 <= cmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then
                reg_620 <= kp_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then
                reg_624 <= ki_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then
                reg_628 <= kd_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15))) then
                storemerge_7_reg_3064 <= storemerge_7_fu_2476_p3;
                test_buffer_V_load_1_reg_3034 <= test_buffer_V_load_1_fu_1990_p3;
                test_buffer_V_load_2_reg_3039 <= test_buffer_V_load_2_fu_2071_p3;
                test_buffer_V_load_3_reg_3044 <= test_buffer_V_load_3_fu_2152_p3;
                test_buffer_V_load_4_reg_3049 <= test_buffer_V_load_4_fu_2233_p3;
                test_buffer_V_load_5_reg_3054 <= test_buffer_V_load_5_fu_2314_p3;
                test_buffer_V_load_6_reg_3059 <= test_buffer_V_load_6_fu_2395_p3;
                test_buffer_V_load_reg_3029 <= test_buffer_V_load_fu_1909_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7))) then
                tmp_29_reg_2808 <= tmp_29_fu_1166_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_ioackin_OUT_r_AWREADY = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state24) and (ap_const_logic_1 = OUT_r_BVALID)) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11))) then
                tmp_56_reg_2894 <= tmp_56_fu_1594_p3;
                tmp_57_reg_2899 <= tmp_57_fu_1610_p3;
                tmp_58_reg_2904 <= p_Val2_55_fu_1580_p2(44 downto 13);
            end if;
        end if;
    end process;
    p_Val2_3_reg_2591(2 downto 0) <= "000";
    p_Val2_8_reg_2597(2 downto 0) <= "000";
    p_Val2_7_reg_2647(2 downto 0) <= "000";
    p_Val2_10_reg_2652(2 downto 0) <= "000";
    p_Val2_16_reg_2657(2 downto 0) <= "000";
    p_Val2_19_reg_2663(2 downto 0) <= "000";
    p_Val2_20_reg_2723(2 downto 0) <= "000";
    p_Val2_23_reg_2728(2 downto 0) <= "000";
    p_Val2_36_reg_2823(2 downto 0) <= "000";
    p_Val2_39_reg_2829(2 downto 0) <= "000";
    p_Val2_49_reg_2864(2 downto 0) <= "000";
    r_V_2_reg_2909(15 downto 0) <= "0000000000000000";
    r_V_2_1_reg_2914(15 downto 0) <= "0000000000000000";
    addconv2_reg_2919(15 downto 0) <= "0000000000000000";
    r_V_2_3_reg_2924(15 downto 0) <= "0000000000000000";
    r_V_2_4_reg_2929(15 downto 0) <= "0000000000000000";
    r_V_2_5_reg_2934(15 downto 0) <= "0000000000000000";
    addconv4_reg_2939(15 downto 0) <= "0000000000000000";
    r_V_2_7_reg_2944(15 downto 0) <= "0000000000000000";

    ap_NS_iter0_fsm_assign_proc : process (ap_start, ap_CS_iter0_fsm, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state11, ap_CS_iter0_fsm_state12, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state14, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state7, ap_CS_iter0_fsm_state8, ap_CS_iter0_fsm_state9, ap_CS_iter0_fsm_state10, ap_sig_ioackin_OUT_r_AWREADY, ap_sig_ioackin_OUT_r_WREADY, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state22)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state2;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
                end if;
            when ap_ST_iter0_fsm_state2 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state3;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state2;
                end if;
            when ap_ST_iter0_fsm_state3 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state4;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state3;
                end if;
            when ap_ST_iter0_fsm_state4 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state5;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state4;
                end if;
            when ap_ST_iter0_fsm_state5 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state6;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state5;
                end if;
            when ap_ST_iter0_fsm_state6 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state7;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state6;
                end if;
            when ap_ST_iter0_fsm_state7 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state8;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state7;
                end if;
            when ap_ST_iter0_fsm_state8 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state9;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state8;
                end if;
            when ap_ST_iter0_fsm_state9 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state9))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state10;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state9;
                end if;
            when ap_ST_iter0_fsm_state10 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state11;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state10;
                end if;
            when ap_ST_iter0_fsm_state11 => 
                if ((not(((ap_sig_ioackin_OUT_r_AWREADY = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state24) and (ap_const_logic_1 = OUT_r_BVALID)) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state12;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state11;
                end if;
            when ap_ST_iter0_fsm_state12 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state13;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state12;
                end if;
            when ap_ST_iter0_fsm_state13 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state14;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state13;
                end if;
            when ap_ST_iter0_fsm_state14 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state15;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state14;
                end if;
            when ap_ST_iter0_fsm_state15 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state16;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state15;
                end if;
            when ap_ST_iter0_fsm_state16 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state17;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state16;
                end if;
            when ap_ST_iter0_fsm_state17 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state18;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state17;
                end if;
            when ap_ST_iter0_fsm_state18 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state19;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state18;
                end if;
            when ap_ST_iter0_fsm_state19 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state20;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state19;
                end if;
            when ap_ST_iter0_fsm_state20 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state20))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state21;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state20;
                end if;
            when ap_ST_iter0_fsm_state21 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state21))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state22;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state21;
                end if;
            when ap_ST_iter0_fsm_state22 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state23;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state22;
                end if;
            when ap_ST_iter0_fsm_state23 => 
                if (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state23;
                end if;
            when others =>  
                ap_NS_iter0_fsm <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (ap_CS_iter1_fsm, ap_CS_iter0_fsm_state23, OUT_r_BVALID, ap_CS_iter1_fsm_state24)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_iter0_fsm_state23) and (ap_const_logic_1 = OUT_r_BVALID))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state24;
                elsif (((ap_const_logic_0 = ap_CS_iter0_fsm_state23) and (ap_const_logic_1 = OUT_r_BVALID))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state24;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state23))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state24;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "XX";
        end case;
    end process;

    OUT_r_AWVALID_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state11, ap_reg_ioackin_OUT_r_AWREADY)
    begin
        if ((not((((ap_const_logic_1 = ap_CS_iter1_fsm_state24) and (ap_const_logic_1 = OUT_r_BVALID)) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_reg_ioackin_OUT_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11))) then 
            OUT_r_AWVALID <= ap_const_logic_1;
        else 
            OUT_r_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_BREADY_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_iter1_fsm_state24) and (ap_const_logic_1 = OUT_r_BVALID))) then 
            OUT_r_BREADY <= ap_const_logic_1;
        else 
            OUT_r_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_WVALID_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state12, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state14, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_reg_ioackin_OUT_r_WREADY)
    begin
        if (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12)))) then 
            OUT_r_WVALID <= ap_const_logic_1;
        else 
            OUT_r_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_blk_n_AW_assign_proc : process(m_axi_OUT_r_AWREADY, ap_CS_iter0_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state11)) then 
            OUT_r_blk_n_AW <= m_axi_OUT_r_AWREADY;
        else 
            OUT_r_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    OUT_r_blk_n_B_assign_proc : process(ap_CS_iter1_fsm_state24, m_axi_OUT_r_BVALID)
    begin
        if ((ap_const_logic_1 = ap_CS_iter1_fsm_state24)) then 
            OUT_r_blk_n_B <= m_axi_OUT_r_BVALID;
        else 
            OUT_r_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    OUT_r_blk_n_W_assign_proc : process(m_axi_OUT_r_WREADY, ap_CS_iter0_fsm_state12, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state14, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_iter0_fsm_state19) or (ap_const_logic_1 = ap_CS_iter0_fsm_state18) or (ap_const_logic_1 = ap_CS_iter0_fsm_state17) or (ap_const_logic_1 = ap_CS_iter0_fsm_state16) or (ap_const_logic_1 = ap_CS_iter0_fsm_state15) or (ap_const_logic_1 = ap_CS_iter0_fsm_state14) or (ap_const_logic_1 = ap_CS_iter0_fsm_state13) or (ap_const_logic_1 = ap_CS_iter0_fsm_state12))) then 
            OUT_r_blk_n_W <= m_axi_OUT_r_WREADY;
        else 
            OUT_r_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    addconv2_fu_1707_p2 <= std_logic_vector(signed(p_shl_cast7_fu_1663_p1) + signed(sum_cast_fu_1697_p1));
    addconv3_fu_1713_p2 <= std_logic_vector(signed(p_shl1_cast_fu_1635_p1) - signed(p_Val2_61_cast_fu_1646_p1));
    addconv4_fu_1741_p2 <= std_logic_vector(signed(sum_cast_fu_1697_p1) - signed(p_shl_cast7_fu_1663_p1));
    addconv_fu_1650_p2 <= std_logic_vector(signed(p_Val2_61_cast_fu_1646_p1) - signed(p_shl1_cast_fu_1635_p1));
    ap_CS_iter0_fsm_state1 <= ap_CS_iter0_fsm(0);
    ap_CS_iter0_fsm_state10 <= ap_CS_iter0_fsm(9);
    ap_CS_iter0_fsm_state11 <= ap_CS_iter0_fsm(10);
    ap_CS_iter0_fsm_state12 <= ap_CS_iter0_fsm(11);
    ap_CS_iter0_fsm_state13 <= ap_CS_iter0_fsm(12);
    ap_CS_iter0_fsm_state14 <= ap_CS_iter0_fsm(13);
    ap_CS_iter0_fsm_state15 <= ap_CS_iter0_fsm(14);
    ap_CS_iter0_fsm_state16 <= ap_CS_iter0_fsm(15);
    ap_CS_iter0_fsm_state17 <= ap_CS_iter0_fsm(16);
    ap_CS_iter0_fsm_state18 <= ap_CS_iter0_fsm(17);
    ap_CS_iter0_fsm_state19 <= ap_CS_iter0_fsm(18);
    ap_CS_iter0_fsm_state2 <= ap_CS_iter0_fsm(1);
    ap_CS_iter0_fsm_state20 <= ap_CS_iter0_fsm(19);
    ap_CS_iter0_fsm_state21 <= ap_CS_iter0_fsm(20);
    ap_CS_iter0_fsm_state22 <= ap_CS_iter0_fsm(21);
    ap_CS_iter0_fsm_state23 <= ap_CS_iter0_fsm(22);
    ap_CS_iter0_fsm_state3 <= ap_CS_iter0_fsm(2);
    ap_CS_iter0_fsm_state4 <= ap_CS_iter0_fsm(3);
    ap_CS_iter0_fsm_state5 <= ap_CS_iter0_fsm(4);
    ap_CS_iter0_fsm_state6 <= ap_CS_iter0_fsm(5);
    ap_CS_iter0_fsm_state7 <= ap_CS_iter0_fsm(6);
    ap_CS_iter0_fsm_state8 <= ap_CS_iter0_fsm(7);
    ap_CS_iter0_fsm_state9 <= ap_CS_iter0_fsm(8);
    ap_CS_iter1_fsm_state0 <= ap_CS_iter1_fsm(0);
    ap_CS_iter1_fsm_state24 <= ap_CS_iter1_fsm(1);
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage10_iter0_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24)
    begin
                ap_block_state11_pp0_stage10_iter0 <= ((ap_const_logic_1 = ap_CS_iter1_fsm_state24) and (ap_const_logic_1 = OUT_r_BVALID));
    end process;

        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage20_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage21_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage22_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state24_pp0_stage0_iter1_assign_proc : process(OUT_r_BVALID)
    begin
                ap_block_state24_pp0_stage0_iter1 <= (ap_const_logic_0 = OUT_r_BVALID);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_2085_assign_proc : process(OUT_r_AWREADY, OUT_r_BVALID, ap_CS_iter1_fsm_state24)
    begin
                ap_condition_2085 <= (not((((ap_const_logic_1 = ap_CS_iter1_fsm_state24) and (ap_const_logic_1 = OUT_r_BVALID)) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = OUT_r_AWREADY));
    end process;


    ap_condition_636_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_sig_ioackin_OUT_r_AWREADY)
    begin
                ap_condition_636 <= not(((ap_sig_ioackin_OUT_r_AWREADY = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state24) and (ap_const_logic_1 = OUT_r_BVALID)) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))));
    end process;


    ap_done_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_iter1_fsm_state24) and (ap_const_logic_1 = OUT_r_BVALID))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter1_fsm_state0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_Val2_29_phi_fu_591_p4_assign_proc : process(tmp_3_reg_2544, tmp_29_reg_2808, ap_CS_iter0_fsm_state8)
    begin
        if (((tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then 
            ap_phi_mux_p_Val2_29_phi_fu_591_p4 <= tmp_29_reg_2808;
        else 
            ap_phi_mux_p_Val2_29_phi_fu_591_p4 <= ap_const_lv16_0;
        end if; 
    end process;


    ap_phi_mux_p_Val2_30_phi_fu_602_p4_assign_proc : process(tmp_3_reg_2544, tmp_27_reg_2778, ap_CS_iter0_fsm_state8)
    begin
        if (((tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then 
            ap_phi_mux_p_Val2_30_phi_fu_602_p4 <= tmp_27_reg_2778;
        else 
            ap_phi_mux_p_Val2_30_phi_fu_602_p4 <= ap_const_lv16_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_iter0_fsm_state23, OUT_r_BVALID, ap_CS_iter1_fsm_state24)
    begin
        if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state23))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_OUT_r_AWREADY_assign_proc : process(OUT_r_AWREADY, ap_reg_ioackin_OUT_r_AWREADY)
    begin
        if ((ap_reg_ioackin_OUT_r_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_OUT_r_AWREADY <= OUT_r_AWREADY;
        else 
            ap_sig_ioackin_OUT_r_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_OUT_r_WREADY_assign_proc : process(OUT_r_WREADY, ap_reg_ioackin_OUT_r_WREADY)
    begin
        if ((ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_OUT_r_WREADY <= OUT_r_WREADY;
        else 
            ap_sig_ioackin_OUT_r_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    cmdIn_V_address0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state6)) then 
            cmdIn_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state5)) then 
            cmdIn_V_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state4)) then 
            cmdIn_V_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state3)) then 
            cmdIn_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state2)) then 
            cmdIn_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            cmdIn_V_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        else 
            cmdIn_V_address0 <= "XXX";
        end if; 
    end process;


    cmdIn_V_ce0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2)
    begin
        if (((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            cmdIn_V_ce0 <= ap_const_logic_1;
        else 
            cmdIn_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1756_ce_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state14, ap_sig_ioackin_OUT_r_WREADY)
    begin
        if (((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)))) then 
            grp_fu_1756_ce <= ap_const_logic_1;
        else 
            grp_fu_1756_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1756_p0 <= ap_const_lv64_547A(16 - 1 downto 0);

    grp_fu_1765_ce_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state14, ap_sig_ioackin_OUT_r_WREADY)
    begin
        if (((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)))) then 
            grp_fu_1765_ce <= ap_const_logic_1;
        else 
            grp_fu_1765_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1765_p0 <= ap_const_lv64_547A(16 - 1 downto 0);

    grp_fu_1774_ce_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state14, ap_sig_ioackin_OUT_r_WREADY)
    begin
        if (((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)))) then 
            grp_fu_1774_ce <= ap_const_logic_1;
        else 
            grp_fu_1774_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1774_p0 <= ap_const_lv64_547A(16 - 1 downto 0);

    grp_fu_1783_ce_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state14, ap_sig_ioackin_OUT_r_WREADY)
    begin
        if (((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)))) then 
            grp_fu_1783_ce <= ap_const_logic_1;
        else 
            grp_fu_1783_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1783_p0 <= ap_const_lv64_547A(16 - 1 downto 0);

    grp_fu_1792_ce_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state14, ap_sig_ioackin_OUT_r_WREADY)
    begin
        if (((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)))) then 
            grp_fu_1792_ce <= ap_const_logic_1;
        else 
            grp_fu_1792_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1792_p0 <= ap_const_lv64_547A(16 - 1 downto 0);

    grp_fu_1801_ce_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state14, ap_sig_ioackin_OUT_r_WREADY)
    begin
        if (((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)))) then 
            grp_fu_1801_ce <= ap_const_logic_1;
        else 
            grp_fu_1801_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1801_p0 <= ap_const_lv64_547A(16 - 1 downto 0);

    grp_fu_1810_ce_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state14, ap_sig_ioackin_OUT_r_WREADY)
    begin
        if (((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)))) then 
            grp_fu_1810_ce <= ap_const_logic_1;
        else 
            grp_fu_1810_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1810_p0 <= ap_const_lv64_547A(16 - 1 downto 0);

    grp_fu_1819_ce_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state14, ap_sig_ioackin_OUT_r_WREADY)
    begin
        if (((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)))) then 
            grp_fu_1819_ce <= ap_const_logic_1;
        else 
            grp_fu_1819_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1819_p0 <= ap_const_lv64_547A(16 - 1 downto 0);

    kd_V_address0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter0_fsm_state3, tmp_3_reg_2544, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state2, tmp_3_fu_645_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state4)) then 
            kd_V_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then 
            kd_V_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((tmp_3_fu_645_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            kd_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            kd_V_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        else 
            kd_V_address0 <= "XX";
        end if; 
    end process;


    kd_V_ce0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state3, tmp_3_reg_2544, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state2, tmp_3_fu_645_p2)
    begin
        if (((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_fu_645_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            kd_V_ce0 <= ap_const_logic_1;
        else 
            kd_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ki_V_address0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter0_fsm_state3, tmp_3_reg_2544, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state2, tmp_3_fu_645_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state4)) then 
            ki_V_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then 
            ki_V_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((tmp_3_fu_645_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            ki_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            ki_V_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        else 
            ki_V_address0 <= "XX";
        end if; 
    end process;


    ki_V_ce0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state3, tmp_3_reg_2544, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state2, tmp_3_fu_645_p2)
    begin
        if (((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_fu_645_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            ki_V_ce0 <= ap_const_logic_1;
        else 
            ki_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kp_V_address0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter0_fsm_state3, tmp_3_reg_2544, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, tmp_3_fu_645_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state6)) then 
            kp_V_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state5)) then 
            kp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            kp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then 
            kp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((tmp_3_fu_645_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            kp_V_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            kp_V_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        else 
            kp_V_address0 <= "XXX";
        end if; 
    end process;


    kp_V_ce0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state3, tmp_3_reg_2544, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, tmp_3_fu_645_p2)
    begin
        if (((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_fu_645_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            kp_V_ce0 <= ap_const_logic_1;
        else 
            kp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    measured_V_address0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter0_fsm_state3, tmp_3_reg_2544, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, tmp_3_fu_645_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state6)) then 
            measured_V_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state5)) then 
            measured_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            measured_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then 
            measured_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((tmp_3_fu_645_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            measured_V_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            measured_V_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        else 
            measured_V_address0 <= "XXX";
        end if; 
    end process;


    measured_V_ce0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state3, tmp_3_reg_2544, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, tmp_3_fu_645_p2)
    begin
        if (((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_fu_645_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (tmp_3_reg_2544 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            measured_V_ce0 <= ap_const_logic_1;
        else 
            measured_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_10_fu_808_p0 <= reg_628;
    p_Val2_10_fu_808_p1 <= p_Val2_8_reg_2597;
    p_Val2_10_fu_808_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_10_fu_808_p0) * signed(p_Val2_10_fu_808_p1))), 48));
    p_Val2_11_fu_1004_p2 <= std_logic_vector(unsigned(p_Val2_9_reg_2713) + unsigned(p_Val2_7_reg_2647));
    p_Val2_12_fu_1008_p2 <= std_logic_vector(unsigned(p_Val2_11_fu_1004_p2) + unsigned(p_Val2_10_reg_2652));
    p_Val2_15_fu_822_p2 <= std_logic_vector(signed(tmp_12_fu_814_p1) - signed(tmp_13_fu_818_p1));
        p_Val2_16_cast1_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_16_reg_2657),32));

        p_Val2_16_cast_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_16_fu_828_p3),21));

    p_Val2_16_fu_828_p3 <= (p_Val2_15_fu_822_p2 & ap_const_lv3_0);
    p_Val2_19_fu_856_p2 <= std_logic_vector(signed(p_Val2_16_cast_fu_836_p1) - signed(tmp_27_cast_fu_852_p1));
    p_Val2_1_cast_fu_1291_p3 <= 
        ap_const_lv32_FF9C0000 when (tmp_32_fu_1279_p2(0) = '1') else 
        ap_const_lv32_640000;
    p_Val2_20_fu_958_p0 <= reg_620;
    p_Val2_20_fu_958_p1 <= p_Val2_16_reg_2657;
    p_Val2_20_fu_958_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_20_fu_958_p0) * signed(p_Val2_20_fu_958_p1))), 48));
    p_Val2_21_fu_1047_p0 <= ki_V_load_1_reg_2668;
    p_Val2_21_fu_1047_p1 <= tmp_17_reg_2718;
    p_Val2_21_fu_1047_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_21_fu_1047_p0) * signed(p_Val2_21_fu_1047_p1))), 48));
    p_Val2_22_fu_1111_p2 <= std_logic_vector(unsigned(p_Val2_21_reg_2768) + unsigned(p_Val2_20_reg_2723));
    p_Val2_23_fu_971_p0 <= reg_628;
    p_Val2_23_fu_971_p1 <= p_Val2_19_reg_2663;
    p_Val2_23_fu_971_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_23_fu_971_p0) * signed(p_Val2_23_fu_971_p1))), 48));
    p_Val2_24_fu_1115_p2 <= std_logic_vector(unsigned(p_Val2_22_fu_1111_p2) + unsigned(p_Val2_23_reg_2728));
    p_Val2_27_fu_1056_p0 <= reg_620;
    p_Val2_27_fu_1056_p1 <= r_V_reg_2733;
    p_Val2_27_fu_1056_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_27_fu_1056_p0) * signed(p_Val2_27_fu_1056_p1))), 32));
    p_Val2_2_cast_fu_1380_p3 <= 
        ap_const_lv32_FF9C0000 when (tmp_44_fu_1368_p2(0) = '1') else 
        ap_const_lv32_640000;
    p_Val2_2_fu_672_p2 <= std_logic_vector(signed(tmp_8_fu_664_p1) - signed(tmp_9_fu_668_p1));
    p_Val2_31_fu_1260_p3 <= 
        ap_phi_reg_pp0_iter0_p_Val2_28_reg_609 when (tmp_3_reg_2544(0) = '1') else 
        p_Val2_25_reg_2698;
    p_Val2_32_fu_1174_p3 <= 
        ap_phi_mux_p_Val2_29_phi_fu_591_p4 when (tmp_3_reg_2544(0) = '1') else 
        p_Val2_13_reg_2622;
    p_Val2_33_fu_1180_p3 <= 
        ap_phi_mux_p_Val2_30_phi_fu_602_p4 when (tmp_3_reg_2544(0) = '1') else 
        p_Val2_s_reg_2571;
    p_Val2_35_fu_1193_p2 <= std_logic_vector(signed(tmp_30_fu_1186_p1) - signed(tmp_31_fu_1190_p1));
        p_Val2_36_cast9_fu_1266_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_36_reg_2823),32));

        p_Val2_36_cast_fu_1207_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_36_fu_1199_p3),21));

    p_Val2_36_fu_1199_p3 <= (p_Val2_35_fu_1193_p2 & ap_const_lv3_0);
    p_Val2_38_fu_1273_p2 <= std_logic_vector(signed(p_Val2_36_cast9_fu_1266_p1) + signed(integral_rate_V_0));
    p_Val2_39_fu_1227_p2 <= std_logic_vector(signed(p_Val2_36_cast_fu_1207_p1) - signed(tmp_51_cast_fu_1223_p1));
        p_Val2_3_cast1_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_2591),32));

        p_Val2_3_cast_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_fu_678_p3),21));

    p_Val2_3_fu_678_p3 <= (p_Val2_2_fu_672_p2 & ap_const_lv3_0);
    p_Val2_40_fu_1325_p0 <= p_Val2_36_reg_2823;
    p_Val2_40_fu_1325_p1 <= kp_V_load_3_reg_2556;
    p_Val2_40_fu_1325_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_40_fu_1325_p0) * signed(p_Val2_40_fu_1325_p1))), 48));
    p_Val2_41_fu_1468_p0 <= tmp_35_reg_2844;
    p_Val2_41_fu_1468_p1 <= ki_V_load_2_reg_2561;
    p_Val2_41_fu_1468_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_41_fu_1468_p0) * signed(p_Val2_41_fu_1468_p1))), 48));
    p_Val2_42_fu_1500_p2 <= std_logic_vector(unsigned(p_Val2_40_reg_2849) + unsigned(p_Val2_41_reg_2879));
    p_Val2_43_fu_1337_p0 <= p_Val2_39_reg_2829;
    p_Val2_43_fu_1337_p1 <= kd_V_load_2_reg_2566;
    p_Val2_43_fu_1337_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_43_fu_1337_p0) * signed(p_Val2_43_fu_1337_p1))), 48));
    p_Val2_44_fu_1504_p2 <= std_logic_vector(unsigned(p_Val2_43_reg_2854) + unsigned(p_Val2_42_fu_1500_p2));
    p_Val2_45_fu_1250_p2 <= std_logic_vector(signed(tmp_42_fu_1243_p1) - signed(tmp_43_fu_1247_p1));
        p_Val2_47_cast8_fu_1350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_47_fu_1343_p3),32));

        p_Val2_47_cast_fu_1354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_47_fu_1343_p3),21));

    p_Val2_47_fu_1343_p3 <= (p_Val2_45_reg_2834 & ap_const_lv3_0);
    p_Val2_48_fu_1362_p2 <= std_logic_vector(signed(p_Val2_47_cast8_fu_1350_p1) + signed(integral_rate_V_1));
    p_Val2_49_fu_1424_p2 <= std_logic_vector(signed(p_Val2_47_cast_fu_1354_p1) - signed(tmp_68_cast_fu_1420_p1));
    p_Val2_50_fu_1438_p0 <= p_Val2_47_fu_1343_p3;
    p_Val2_50_fu_1438_p1 <= reg_620;
    p_Val2_50_fu_1438_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_50_fu_1438_p0) * signed(p_Val2_50_fu_1438_p1))), 48));
    p_Val2_51_fu_1481_p0 <= tmp_47_reg_2859;
    p_Val2_51_fu_1481_p1 <= reg_624;
    p_Val2_51_fu_1481_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_51_fu_1481_p0) * signed(p_Val2_51_fu_1481_p1))), 48));
    p_Val2_52_fu_1537_p2 <= std_logic_vector(unsigned(p_Val2_50_reg_2869) + unsigned(p_Val2_51_reg_2884));
    p_Val2_53_fu_1494_p0 <= p_Val2_49_reg_2864;
    p_Val2_53_fu_1494_p1 <= reg_628;
    p_Val2_53_fu_1494_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_53_fu_1494_p0) * signed(p_Val2_53_fu_1494_p1))), 48));
    p_Val2_54_fu_1541_p2 <= std_logic_vector(unsigned(p_Val2_53_reg_2889) + unsigned(p_Val2_52_fu_1537_p2));
    p_Val2_55_fu_1580_p0 <= r_V_1_reg_2874;
    p_Val2_55_fu_1580_p1 <= kp_V_load_5_reg_2818;
    p_Val2_55_fu_1580_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_55_fu_1580_p0) * signed(p_Val2_55_fu_1580_p1))), 45));
        p_Val2_61_cast_fu_1646_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_61_fu_1639_p3),49));

    p_Val2_61_fu_1639_p3 <= (tmp_57_reg_2899 & ap_const_lv16_0);
    p_Val2_62_fu_1671_p2 <= std_logic_vector(unsigned(ap_const_lv49_0) - unsigned(p_shl_cast_fu_1667_p1));
    p_Val2_65_fu_1836_p2 <= std_logic_vector(unsigned(p_Val2_63_reg_2989) + unsigned(tmp_84_cast_fu_1832_p1));
    p_Val2_69_1_fu_1917_p2 <= std_logic_vector(unsigned(p_Val2_68_1_reg_2994) + unsigned(tmp_84_cast_fu_1832_p1));
    p_Val2_69_2_fu_1998_p2 <= std_logic_vector(unsigned(p_Val2_68_2_reg_2999) + unsigned(tmp_84_cast_fu_1832_p1));
    p_Val2_69_3_fu_2079_p2 <= std_logic_vector(unsigned(p_Val2_68_3_reg_3004) + unsigned(tmp_84_cast_fu_1832_p1));
    p_Val2_69_4_fu_2160_p2 <= std_logic_vector(unsigned(p_Val2_68_4_reg_3009) + unsigned(tmp_84_cast_fu_1832_p1));
    p_Val2_69_5_fu_2241_p2 <= std_logic_vector(unsigned(p_Val2_68_5_reg_3014) + unsigned(tmp_84_cast_fu_1832_p1));
    p_Val2_69_6_fu_2322_p2 <= std_logic_vector(unsigned(p_Val2_68_6_reg_3019) + unsigned(tmp_84_cast_fu_1832_p1));
    p_Val2_69_7_fu_2403_p2 <= std_logic_vector(unsigned(p_Val2_68_7_reg_3024) + unsigned(tmp_84_cast_fu_1832_p1));
    p_Val2_6_cast_fu_760_p3 <= 
        ap_const_lv32_FF9C0000 when (tmp_1_fu_748_p2(0) = '1') else 
        ap_const_lv32_640000;
    p_Val2_6_fu_742_p2 <= std_logic_vector(unsigned(integral_pos_V_0) + unsigned(p_Val2_3_cast1_fu_735_p1));
    p_Val2_7_fu_795_p0 <= reg_620;
    p_Val2_7_fu_795_p1 <= p_Val2_3_reg_2591;
    p_Val2_7_fu_795_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_fu_795_p0) * signed(p_Val2_7_fu_795_p1))), 48));
    p_Val2_8_fu_706_p2 <= std_logic_vector(signed(p_Val2_3_cast_fu_686_p1) - signed(tmp_6_cast_fu_702_p1));
    p_Val2_9_fu_892_p0 <= reg_624;
    p_Val2_9_fu_892_p1 <= tmp_4_reg_2642;
    p_Val2_9_fu_892_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_9_fu_892_p0) * signed(p_Val2_9_fu_892_p1))), 48));
    p_Val2_cast_fu_923_p3 <= 
        ap_const_lv32_FF9C0000 when (tmp_14_fu_911_p2(0) = '1') else 
        ap_const_lv32_640000;
    p_Val2_s_10_fu_905_p2 <= std_logic_vector(unsigned(integral_pos_V_1) + unsigned(p_Val2_16_cast1_fu_898_p1));
        p_shl1_cast_fu_1635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl1_fu_1628_p3),49));

    p_shl1_fu_1628_p3 <= (tmp_56_reg_2894 & ap_const_lv16_0);
        p_shl_cast7_fu_1663_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_fu_1656_p3),50));

        p_shl_cast_fu_1667_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_fu_1656_p3),49));

    p_shl_fu_1656_p3 <= (tmp_58_reg_2904 & ap_const_lv16_0);
    r_V_1_fu_1456_p2 <= std_logic_vector(signed(tmp_54_fu_1449_p1) - signed(tmp_55_fu_1453_p1));
    r_V_2_1_fu_1701_p2 <= std_logic_vector(signed(p_shl_cast7_fu_1663_p1) - signed(sum_cast_fu_1697_p1));
    r_V_2_3_fu_1723_p2 <= std_logic_vector(signed(tmp_108_3_cast_fu_1719_p1) - signed(p_shl_cast7_fu_1663_p1));
    r_V_2_4_fu_1729_p2 <= std_logic_vector(signed(p_shl_cast7_fu_1663_p1) + signed(tmp_81_cast_fu_1677_p1));
    r_V_2_5_fu_1735_p2 <= std_logic_vector(signed(tmp_82_cast_fu_1681_p1) - signed(sum_cast_fu_1697_p1));
    r_V_2_7_fu_1747_p2 <= std_logic_vector(signed(p_shl_cast7_fu_1663_p1) + signed(tmp_108_3_cast_fu_1719_p1));
    r_V_2_fu_1685_p2 <= std_logic_vector(signed(tmp_81_cast_fu_1677_p1) - signed(p_shl_cast7_fu_1663_p1));
    r_V_fu_985_p2 <= std_logic_vector(signed(tmp_24_fu_977_p1) - signed(tmp_25_fu_981_p1));
    storemerge_7_fu_2476_p3 <= 
        tmp_100_cast_fu_2466_p1 when (tmp_101_fu_2470_p2(0) = '1') else 
        tmp_114_7_fu_2408_p4;
        sum_cast_fu_1697_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_fu_1691_p2),50));

    sum_fu_1691_p2 <= std_logic_vector(signed(p_shl1_cast_fu_1635_p1) + signed(p_Val2_61_cast_fu_1646_p1));
        t_command_V_cast_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(t_command_V_fu_991_p3),32));

    t_command_V_fu_991_p3 <= (cmdIn_V_q0 & ap_const_lv3_0);

    test_V_address0_assign_proc : process(ap_CS_iter0_fsm_state23, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state7, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state23)) then 
            test_V_address0 <= ap_const_lv64_D(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state22)) then 
            test_V_address0 <= ap_const_lv64_C(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state21)) then 
            test_V_address0 <= ap_const_lv64_B(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state20)) then 
            test_V_address0 <= ap_const_lv64_A(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state19)) then 
            test_V_address0 <= ap_const_lv64_9(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state18)) then 
            test_V_address0 <= ap_const_lv64_8(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state17)) then 
            test_V_address0 <= ap_const_lv64_7(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state16)) then 
            test_V_address0 <= ap_const_lv64_6(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state7)) then 
            test_V_address0 <= ap_const_lv64_4(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state6)) then 
            test_V_address0 <= ap_const_lv64_0(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state5)) then 
            test_V_address0 <= ap_const_lv64_3(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state4)) then 
            test_V_address0 <= ap_const_lv64_2(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state3)) then 
            test_V_address0 <= ap_const_lv64_1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state2)) then 
            test_V_address0 <= ap_const_lv64_5(12 - 1 downto 0);
        else 
            test_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    test_V_ce0_assign_proc : process(ap_CS_iter0_fsm_state23, OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state7, ap_CS_iter0_fsm_state8, ap_sig_ioackin_OUT_r_WREADY, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state22)
    begin
        if (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state23)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state21)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state20)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state24) and (ap_const_logic_1 = OUT_r_BVALID)))) then 
            test_V_ce0 <= ap_const_logic_1;
        else 
            test_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    test_V_d0_assign_proc : process(ap_CS_iter0_fsm_state23, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, tmp_6_5_cast_fu_640_p1, tmp_6_1_cast_fu_659_p1, tmp_6_2_cast_fu_730_p1, tmp_6_3_cast_fu_880_p1, t_command_V_cast_fu_999_p1, tmp_6_4_cast_fu_1106_p1, ap_CS_iter0_fsm_state7, test_buffer_V_load_reg_3029, test_buffer_V_load_1_reg_3034, test_buffer_V_load_2_reg_3039, test_buffer_V_load_3_reg_3044, test_buffer_V_load_4_reg_3049, test_buffer_V_load_5_reg_3054, test_buffer_V_load_6_reg_3059, storemerge_7_reg_3064, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state23)) then 
            test_V_d0 <= storemerge_7_reg_3064;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state22)) then 
            test_V_d0 <= test_buffer_V_load_6_reg_3059;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state21)) then 
            test_V_d0 <= test_buffer_V_load_5_reg_3054;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state20)) then 
            test_V_d0 <= test_buffer_V_load_4_reg_3049;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state19)) then 
            test_V_d0 <= test_buffer_V_load_3_reg_3044;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state18)) then 
            test_V_d0 <= test_buffer_V_load_2_reg_3039;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state17)) then 
            test_V_d0 <= test_buffer_V_load_1_reg_3034;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state16)) then 
            test_V_d0 <= test_buffer_V_load_reg_3029;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state7)) then 
            test_V_d0 <= tmp_6_4_cast_fu_1106_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state6)) then 
            test_V_d0 <= t_command_V_cast_fu_999_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state5)) then 
            test_V_d0 <= tmp_6_3_cast_fu_880_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state4)) then 
            test_V_d0 <= tmp_6_2_cast_fu_730_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state3)) then 
            test_V_d0 <= tmp_6_1_cast_fu_659_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state2)) then 
            test_V_d0 <= tmp_6_5_cast_fu_640_p1;
        else 
            test_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    test_V_we0_assign_proc : process(ap_CS_iter0_fsm_state23, OUT_r_BVALID, ap_CS_iter1_fsm_state24, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state7, ap_sig_ioackin_OUT_r_WREADY, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state22)
    begin
        if (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state23)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state21)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state20)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state24))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            test_V_we0 <= ap_const_logic_1;
        else 
            test_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    test_buffer_V_load_1_fu_1990_p3 <= 
        tmp_74_cast_fu_1980_p1 when (tmp_71_fu_1984_p2(0) = '1') else 
        tmp_114_1_fu_1922_p4;
    test_buffer_V_load_2_fu_2071_p3 <= 
        tmp_78_cast_fu_2061_p1 when (tmp_76_fu_2065_p2(0) = '1') else 
        tmp_114_2_fu_2003_p4;
    test_buffer_V_load_3_fu_2152_p3 <= 
        tmp_84_cast2_fu_2142_p1 when (tmp_81_fu_2146_p2(0) = '1') else 
        tmp_114_3_fu_2084_p4;
    test_buffer_V_load_4_fu_2233_p3 <= 
        tmp_88_cast_fu_2223_p1 when (tmp_86_fu_2227_p2(0) = '1') else 
        tmp_114_4_fu_2165_p4;
    test_buffer_V_load_5_fu_2314_p3 <= 
        tmp_92_cast_fu_2304_p1 when (tmp_91_fu_2308_p2(0) = '1') else 
        tmp_114_5_fu_2246_p4;
    test_buffer_V_load_6_fu_2395_p3 <= 
        tmp_96_cast_fu_2385_p1 when (tmp_96_fu_2389_p2(0) = '1') else 
        tmp_114_6_fu_2327_p4;
    test_buffer_V_load_fu_1909_p3 <= 
        tmp_70_cast_fu_1899_p1 when (tmp_66_fu_1903_p2(0) = '1') else 
        tmp_60_fu_1841_p4;
        tmp_100_cast_fu_2466_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_100_fu_2460_p2),32));

    tmp_100_fu_2460_p2 <= std_logic_vector(unsigned(ap_const_lv18_FFBE) + unsigned(tmp_99_cast_fu_2456_p1));
    tmp_101_fu_2470_p2 <= (tmp_97_fu_2418_p3 or tmp_116_7_fu_2426_p2);
        tmp_108_3_cast_fu_1719_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addconv3_fu_1713_p2),50));

    tmp_10_fu_1035_p2 <= (tmp_s_fu_1029_p2 or tmp_7_fu_1023_p2);
    tmp_114_1_fu_1922_p4 <= p_Val2_69_1_fu_1917_p2(63 downto 32);
    tmp_114_2_fu_2003_p4 <= p_Val2_69_2_fu_1998_p2(63 downto 32);
    tmp_114_3_fu_2084_p4 <= p_Val2_69_3_fu_2079_p2(63 downto 32);
    tmp_114_4_fu_2165_p4 <= p_Val2_69_4_fu_2160_p2(63 downto 32);
    tmp_114_5_fu_2246_p4 <= p_Val2_69_5_fu_2241_p2(63 downto 32);
    tmp_114_6_fu_2327_p4 <= p_Val2_69_6_fu_2322_p2(63 downto 32);
    tmp_114_7_fu_2408_p4 <= p_Val2_69_7_fu_2403_p2(63 downto 32);
    tmp_116_1_fu_1940_p2 <= "1" when (signed(tmp_114_1_fu_1922_p4) > signed(ap_const_lv32_FFBE)) else "0";
    tmp_116_2_fu_2021_p2 <= "1" when (signed(tmp_114_2_fu_2003_p4) > signed(ap_const_lv32_FFBE)) else "0";
    tmp_116_3_fu_2102_p2 <= "1" when (signed(tmp_114_3_fu_2084_p4) > signed(ap_const_lv32_FFBE)) else "0";
    tmp_116_4_fu_2183_p2 <= "1" when (signed(tmp_114_4_fu_2165_p4) > signed(ap_const_lv32_FFBE)) else "0";
    tmp_116_5_fu_2264_p2 <= "1" when (signed(tmp_114_5_fu_2246_p4) > signed(ap_const_lv32_FFBE)) else "0";
    tmp_116_6_fu_2345_p2 <= "1" when (signed(tmp_114_6_fu_2327_p4) > signed(ap_const_lv32_FFBE)) else "0";
    tmp_116_7_fu_2426_p2 <= "1" when (signed(tmp_114_7_fu_2408_p4) > signed(ap_const_lv32_FFBE)) else "0";
    tmp_11_fu_712_p1 <= p_Val2_2_fu_672_p2(16 - 1 downto 0);
    tmp_12_fu_814_p0 <= cmdIn_V_q0;
        tmp_12_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_fu_814_p0),17));

        tmp_13_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(measured_V_q0),17));

    tmp_14_fu_911_p2 <= "1" when (signed(p_Val2_s_10_fu_905_p2) < signed(ap_const_lv32_FF9C0000)) else "0";
    tmp_15_fu_917_p2 <= "1" when (signed(p_Val2_s_10_fu_905_p2) > signed(ap_const_lv32_640000)) else "0";
    tmp_16_fu_931_p2 <= (tmp_15_fu_917_p2 or tmp_14_fu_911_p2);
    tmp_17_fu_937_p3 <= 
        p_Val2_cast_fu_923_p3 when (tmp_16_fu_931_p2(0) = '1') else 
        p_Val2_s_10_fu_905_p2;
    tmp_18_fu_844_p3 <= (last_error_pos_V_1 & ap_const_lv3_0);
    tmp_19_fu_1120_p4 <= p_Val2_24_fu_1115_p2(47 downto 16);
    tmp_1_fu_748_p2 <= "1" when (signed(p_Val2_6_fu_742_p2) < signed(ap_const_lv32_FF9C0000)) else "0";
    tmp_20_fu_1130_p2 <= "1" when (signed(tmp_19_fu_1120_p4) < signed(ap_const_lv32_FFFF0000)) else "0";
    tmp_21_fu_1136_p2 <= "1" when (signed(tmp_19_fu_1120_p4) > signed(ap_const_lv32_FFBE)) else "0";
    tmp_22_fu_1142_p2 <= (tmp_21_fu_1136_p2 or tmp_20_fu_1130_p2);
    tmp_23_fu_862_p1 <= p_Val2_15_fu_822_p2(16 - 1 downto 0);
    tmp_24_fu_977_p0 <= cmdIn_V_q0;
        tmp_24_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_fu_977_p0),17));

        tmp_25_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(measured_V_q0),17));

    tmp_26_cast_fu_1072_p3 <= 
        ap_const_lv16_E000 when (tmp_7_fu_1023_p2(0) = '1') else 
        ap_const_lv16_1FF7;
    tmp_26_fu_1080_p4 <= p_Val2_12_fu_1008_p2(34 downto 19);
        tmp_27_cast_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_18_fu_844_p3),21));

    tmp_27_fu_1090_p3 <= 
        tmp_26_cast_fu_1072_p3 when (tmp_10_fu_1035_p2(0) = '1') else 
        tmp_26_fu_1080_p4;
    tmp_28_fu_1156_p4 <= p_Val2_24_fu_1115_p2(34 downto 19);
    tmp_29_cast_fu_1148_p3 <= 
        ap_const_lv16_E000 when (tmp_20_fu_1130_p2(0) = '1') else 
        ap_const_lv16_1FF7;
    tmp_29_fu_1166_p3 <= 
        tmp_29_cast_fu_1148_p3 when (tmp_22_fu_1142_p2(0) = '1') else 
        tmp_28_fu_1156_p4;
    tmp_2_fu_754_p2 <= "1" when (signed(p_Val2_6_fu_742_p2) > signed(ap_const_lv32_640000)) else "0";
        tmp_30_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_33_fu_1180_p3),17));

        tmp_31_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_34_reg_2551),17));

    tmp_32_fu_1279_p2 <= "1" when (signed(p_Val2_38_fu_1273_p2) < signed(ap_const_lv32_FF9C0000)) else "0";
    tmp_33_fu_1285_p2 <= "1" when (signed(p_Val2_38_fu_1273_p2) > signed(ap_const_lv32_640000)) else "0";
    tmp_34_fu_1299_p2 <= (tmp_33_fu_1285_p2 or tmp_32_fu_1279_p2);
    tmp_35_fu_1305_p3 <= 
        p_Val2_1_cast_fu_1291_p3 when (tmp_34_fu_1299_p2(0) = '1') else 
        p_Val2_38_fu_1273_p2;
    tmp_36_fu_1215_p3 <= (last_error_rate_V_0 & ap_const_lv3_0);
    tmp_37_fu_1509_p4 <= p_Val2_44_fu_1504_p2(47 downto 16);
    tmp_38_fu_1519_p2 <= "1" when (signed(tmp_37_fu_1509_p4) < signed(ap_const_lv32_FFFF0000)) else "0";
    tmp_39_fu_1525_p2 <= "1" when (signed(tmp_37_fu_1509_p4) > signed(ap_const_lv32_FFBE)) else "0";
    tmp_3_fu_645_p2 <= "0" when (cmdIn_V_q0 = ap_const_lv16_0) else "1";
    tmp_40_fu_1531_p2 <= (tmp_39_fu_1525_p2 or tmp_38_fu_1519_p2);
    tmp_41_fu_1233_p1 <= p_Val2_35_fu_1193_p2(16 - 1 downto 0);
        tmp_42_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_32_fu_1174_p3),17));

        tmp_43_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_56_reg_2783),17));

    tmp_44_fu_1368_p2 <= "1" when (signed(p_Val2_48_fu_1362_p2) < signed(ap_const_lv32_FF9C0000)) else "0";
    tmp_45_fu_1374_p2 <= "1" when (signed(p_Val2_48_fu_1362_p2) > signed(ap_const_lv32_640000)) else "0";
    tmp_46_fu_1388_p2 <= (tmp_45_fu_1374_p2 or tmp_44_fu_1368_p2);
    tmp_47_fu_1394_p3 <= 
        p_Val2_2_cast_fu_1380_p3 when (tmp_46_fu_1388_p2(0) = '1') else 
        p_Val2_48_fu_1362_p2;
    tmp_48_fu_1412_p3 <= (last_error_rate_V_1 & ap_const_lv3_0);
    tmp_49_fu_1546_p4 <= p_Val2_54_fu_1541_p2(47 downto 16);
    tmp_4_fu_774_p3 <= 
        p_Val2_6_cast_fu_760_p3 when (tmp_fu_768_p2(0) = '1') else 
        p_Val2_6_fu_742_p2;
    tmp_50_fu_1556_p2 <= "1" when (signed(tmp_49_fu_1546_p4) < signed(ap_const_lv32_FFFF0000)) else "0";
        tmp_51_cast_fu_1223_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_36_fu_1215_p3),21));

    tmp_51_fu_1562_p2 <= "1" when (signed(tmp_49_fu_1546_p4) > signed(ap_const_lv32_FFBE)) else "0";
    tmp_52_fu_1568_p2 <= (tmp_51_fu_1562_p2 or tmp_50_fu_1556_p2);
    tmp_53_fu_1256_p1 <= p_Val2_45_fu_1250_p2(16 - 1 downto 0);
        tmp_54_fu_1449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_31_fu_1260_p3),17));

        tmp_55_fu_1453_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_59_reg_2813),17));

    tmp_56_fu_1594_p3 <= 
        tmp_58_cast_fu_1586_p3 when (tmp_40_fu_1531_p2(0) = '1') else 
        tmp_37_fu_1509_p4;
    tmp_57_fu_1610_p3 <= 
        tmp_61_cast_fu_1602_p3 when (tmp_52_fu_1568_p2(0) = '1') else 
        tmp_49_fu_1546_p4;
    tmp_58_cast_fu_1586_p3 <= 
        ap_const_lv32_FFFF0000 when (tmp_38_fu_1519_p2(0) = '1') else 
        ap_const_lv32_FFBE;
    tmp_59_fu_1825_p3 <= (p_Val2_60_reg_2748 & ap_const_lv35_0);
    tmp_5_fu_1013_p4 <= p_Val2_12_fu_1008_p2(47 downto 16);
    tmp_60_fu_1841_p4 <= p_Val2_65_fu_1836_p2(63 downto 32);
    tmp_61_cast_fu_1602_p3 <= 
        ap_const_lv32_FFFF0000 when (tmp_50_fu_1556_p2(0) = '1') else 
        ap_const_lv32_FFBE;
    tmp_61_fu_1851_p3 <= p_Val2_65_fu_1836_p2(63 downto 63);
    tmp_62_fu_1859_p2 <= "1" when (signed(tmp_60_fu_1841_p4) > signed(ap_const_lv32_FFBE)) else "0";
    tmp_63_fu_1865_p3 <= p_Val2_65_fu_1836_p2(63 downto 63);
    tmp_64_fu_1873_p7 <= (((((tmp_63_fu_1865_p3 & ap_const_lv9_0) & tmp_63_fu_1865_p3) & ap_const_lv4_0) & tmp_63_fu_1865_p3) & ap_const_lv1_0);
    tmp_65_fu_1893_p2 <= std_logic_vector(unsigned(ap_const_lv18_FFBE) + unsigned(tmp_69_cast_fu_1889_p1));
    tmp_66_fu_1903_p2 <= (tmp_62_fu_1859_p2 or tmp_61_fu_1851_p3);
    tmp_67_fu_1932_p3 <= p_Val2_69_1_fu_1917_p2(63 downto 63);
        tmp_68_cast_fu_1420_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_48_fu_1412_p3),21));

    tmp_68_fu_1946_p3 <= p_Val2_69_1_fu_1917_p2(63 downto 63);
        tmp_69_cast_fu_1889_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_64_fu_1873_p7),18));

    tmp_69_fu_1954_p7 <= (((((tmp_68_fu_1946_p3 & ap_const_lv9_0) & tmp_68_fu_1946_p3) & ap_const_lv4_0) & tmp_68_fu_1946_p3) & ap_const_lv1_0);
        tmp_6_1_cast_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_1_fu_651_p3),32));

    tmp_6_1_fu_651_p1 <= cmdIn_V_q0;
    tmp_6_1_fu_651_p3 <= (tmp_6_1_fu_651_p1 & ap_const_lv3_0);
        tmp_6_2_cast_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_2_fu_722_p3),32));

    tmp_6_2_fu_722_p1 <= cmdIn_V_q0;
    tmp_6_2_fu_722_p3 <= (tmp_6_2_fu_722_p1 & ap_const_lv3_0);
        tmp_6_3_cast_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_3_fu_872_p3),32));

    tmp_6_3_fu_872_p1 <= cmdIn_V_q0;
    tmp_6_3_fu_872_p3 <= (tmp_6_3_fu_872_p1 & ap_const_lv3_0);
        tmp_6_4_cast_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_4_fu_1098_p3),32));

    tmp_6_4_fu_1098_p3 <= (cmdIn_V_q0 & ap_const_lv3_0);
        tmp_6_5_cast_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_5_fu_632_p3),32));

    tmp_6_5_fu_632_p3 <= (cmdIn_V_q0 & ap_const_lv3_0);
        tmp_6_cast_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_fu_694_p3),21));

    tmp_6_fu_694_p3 <= (last_error_pos_V_0 & ap_const_lv3_0);
        tmp_70_cast_fu_1899_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_65_fu_1893_p2),32));

    tmp_70_fu_1974_p2 <= std_logic_vector(unsigned(ap_const_lv18_FFBE) + unsigned(tmp_73_cast_fu_1970_p1));
    tmp_71_fu_1984_p2 <= (tmp_67_fu_1932_p3 or tmp_116_1_fu_1940_p2);
    tmp_72_fu_2013_p3 <= p_Val2_69_2_fu_1998_p2(63 downto 63);
        tmp_73_cast_fu_1970_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_69_fu_1954_p7),18));

    tmp_73_fu_2027_p3 <= p_Val2_69_2_fu_1998_p2(63 downto 63);
        tmp_74_cast_fu_1980_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_70_fu_1974_p2),32));

    tmp_74_fu_2035_p7 <= (((((tmp_73_fu_2027_p3 & ap_const_lv9_0) & tmp_73_fu_2027_p3) & ap_const_lv4_0) & tmp_73_fu_2027_p3) & ap_const_lv1_0);
    tmp_75_fu_2055_p2 <= std_logic_vector(unsigned(ap_const_lv18_FFBE) + unsigned(tmp_77_cast_fu_2051_p1));
    tmp_76_fu_2065_p2 <= (tmp_72_fu_2013_p3 or tmp_116_2_fu_2021_p2);
        tmp_77_cast_fu_2051_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_74_fu_2035_p7),18));

    tmp_77_fu_2094_p3 <= p_Val2_69_3_fu_2079_p2(63 downto 63);
        tmp_78_cast_fu_2061_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_75_fu_2055_p2),32));

    tmp_78_fu_2108_p3 <= p_Val2_69_3_fu_2079_p2(63 downto 63);
    tmp_79_fu_2116_p7 <= (((((tmp_78_fu_2108_p3 & ap_const_lv9_0) & tmp_78_fu_2108_p3) & ap_const_lv4_0) & tmp_78_fu_2108_p3) & ap_const_lv1_0);
    tmp_7_fu_1023_p2 <= "1" when (signed(tmp_5_fu_1013_p4) < signed(ap_const_lv32_FFFF0000)) else "0";
    tmp_80_fu_2136_p2 <= std_logic_vector(unsigned(ap_const_lv18_FFBE) + unsigned(tmp_83_cast_fu_2132_p1));
        tmp_81_cast_fu_1677_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addconv_fu_1650_p2),50));

    tmp_81_fu_2146_p2 <= (tmp_77_fu_2094_p3 or tmp_116_3_fu_2102_p2);
        tmp_82_cast_fu_1681_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_62_fu_1671_p2),50));

    tmp_82_fu_2175_p3 <= p_Val2_69_4_fu_2160_p2(63 downto 63);
        tmp_83_cast_fu_2132_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_79_fu_2116_p7),18));

    tmp_83_fu_2189_p3 <= p_Val2_69_4_fu_2160_p2(63 downto 63);
        tmp_84_cast2_fu_2142_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_80_fu_2136_p2),32));

        tmp_84_cast_fu_1832_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_59_fu_1825_p3),64));

    tmp_84_fu_2197_p7 <= (((((tmp_83_fu_2189_p3 & ap_const_lv9_0) & tmp_83_fu_2189_p3) & ap_const_lv4_0) & tmp_83_fu_2189_p3) & ap_const_lv1_0);
    tmp_85_fu_2217_p2 <= std_logic_vector(unsigned(ap_const_lv18_FFBE) + unsigned(tmp_87_cast_fu_2213_p1));
    tmp_86_fu_2227_p2 <= (tmp_82_fu_2175_p3 or tmp_116_4_fu_2183_p2);
        tmp_87_cast_fu_2213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_84_fu_2197_p7),18));

    tmp_87_fu_2256_p3 <= p_Val2_69_5_fu_2241_p2(63 downto 63);
        tmp_88_cast_fu_2223_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_85_fu_2217_p2),32));

    tmp_88_fu_2270_p3 <= p_Val2_69_5_fu_2241_p2(63 downto 63);
    tmp_89_fu_2278_p7 <= (((((tmp_88_fu_2270_p3 & ap_const_lv9_0) & tmp_88_fu_2270_p3) & ap_const_lv4_0) & tmp_88_fu_2270_p3) & ap_const_lv1_0);
    tmp_8_fu_664_p0 <= cmdIn_V_q0;
        tmp_8_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_664_p0),17));

    tmp_90_fu_2298_p2 <= std_logic_vector(unsigned(ap_const_lv18_FFBE) + unsigned(tmp_91_cast_fu_2294_p1));
        tmp_91_cast_fu_2294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_89_fu_2278_p7),18));

    tmp_91_fu_2308_p2 <= (tmp_87_fu_2256_p3 or tmp_116_5_fu_2264_p2);
        tmp_92_cast_fu_2304_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_90_fu_2298_p2),32));

    tmp_92_fu_2337_p3 <= p_Val2_69_6_fu_2322_p2(63 downto 63);
    tmp_93_fu_2351_p3 <= p_Val2_69_6_fu_2322_p2(63 downto 63);
    tmp_94_fu_2359_p7 <= (((((tmp_93_fu_2351_p3 & ap_const_lv9_0) & tmp_93_fu_2351_p3) & ap_const_lv4_0) & tmp_93_fu_2351_p3) & ap_const_lv1_0);
        tmp_95_cast_fu_2375_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_94_fu_2359_p7),18));

    tmp_95_fu_2379_p2 <= std_logic_vector(unsigned(ap_const_lv18_FFBE) + unsigned(tmp_95_cast_fu_2375_p1));
        tmp_96_cast_fu_2385_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_95_fu_2379_p2),32));

    tmp_96_fu_2389_p2 <= (tmp_92_fu_2337_p3 or tmp_116_6_fu_2345_p2);
    tmp_97_fu_2418_p3 <= p_Val2_69_7_fu_2403_p2(63 downto 63);
    tmp_98_fu_2432_p3 <= p_Val2_69_7_fu_2403_p2(63 downto 63);
        tmp_99_cast_fu_2456_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_99_fu_2440_p7),18));

    tmp_99_fu_2440_p7 <= (((((tmp_98_fu_2432_p3 & ap_const_lv9_0) & tmp_98_fu_2432_p3) & ap_const_lv4_0) & tmp_98_fu_2432_p3) & ap_const_lv1_0);
        tmp_9_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(measured_V_q0),17));

    tmp_fu_768_p2 <= (tmp_2_fu_754_p2 or tmp_1_fu_748_p2);
    tmp_s_fu_1029_p2 <= "1" when (signed(tmp_5_fu_1013_p4) > signed(ap_const_lv32_FFBE)) else "0";
end behav;
