-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pid is
generic (
    C_M_AXI_OUT_R_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_OUT_R_ID_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_R_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_R_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_OUT_R_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_R_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_R_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_R_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_TEST_ADDR_WIDTH : INTEGER := 15;
    C_S_AXI_TEST_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_OUT_R_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_OUT_R_USER_VALUE : INTEGER := 0;
    C_M_AXI_OUT_R_PROT_VALUE : INTEGER := 0;
    C_M_AXI_OUT_R_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_OUT_r_AWVALID : OUT STD_LOGIC;
    m_axi_OUT_r_AWREADY : IN STD_LOGIC;
    m_axi_OUT_r_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ADDR_WIDTH-1 downto 0);
    m_axi_OUT_r_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ID_WIDTH-1 downto 0);
    m_axi_OUT_r_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_OUT_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_OUT_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_OUT_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_AWUSER_WIDTH-1 downto 0);
    m_axi_OUT_r_WVALID : OUT STD_LOGIC;
    m_axi_OUT_r_WREADY : IN STD_LOGIC;
    m_axi_OUT_r_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_DATA_WIDTH-1 downto 0);
    m_axi_OUT_r_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_DATA_WIDTH/8-1 downto 0);
    m_axi_OUT_r_WLAST : OUT STD_LOGIC;
    m_axi_OUT_r_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ID_WIDTH-1 downto 0);
    m_axi_OUT_r_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_WUSER_WIDTH-1 downto 0);
    m_axi_OUT_r_ARVALID : OUT STD_LOGIC;
    m_axi_OUT_r_ARREADY : IN STD_LOGIC;
    m_axi_OUT_r_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ADDR_WIDTH-1 downto 0);
    m_axi_OUT_r_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ID_WIDTH-1 downto 0);
    m_axi_OUT_r_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_OUT_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_OUT_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_OUT_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_OUT_r_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ARUSER_WIDTH-1 downto 0);
    m_axi_OUT_r_RVALID : IN STD_LOGIC;
    m_axi_OUT_r_RREADY : OUT STD_LOGIC;
    m_axi_OUT_r_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_R_DATA_WIDTH-1 downto 0);
    m_axi_OUT_r_RLAST : IN STD_LOGIC;
    m_axi_OUT_r_RID : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ID_WIDTH-1 downto 0);
    m_axi_OUT_r_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_R_RUSER_WIDTH-1 downto 0);
    m_axi_OUT_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_BVALID : IN STD_LOGIC;
    m_axi_OUT_r_BREADY : OUT STD_LOGIC;
    m_axi_OUT_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_OUT_r_BID : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_R_ID_WIDTH-1 downto 0);
    m_axi_OUT_r_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_R_BUSER_WIDTH-1 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_TEST_AWVALID : IN STD_LOGIC;
    s_axi_TEST_AWREADY : OUT STD_LOGIC;
    s_axi_TEST_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_TEST_ADDR_WIDTH-1 downto 0);
    s_axi_TEST_WVALID : IN STD_LOGIC;
    s_axi_TEST_WREADY : OUT STD_LOGIC;
    s_axi_TEST_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_TEST_DATA_WIDTH-1 downto 0);
    s_axi_TEST_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_TEST_DATA_WIDTH/8-1 downto 0);
    s_axi_TEST_ARVALID : IN STD_LOGIC;
    s_axi_TEST_ARREADY : OUT STD_LOGIC;
    s_axi_TEST_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_TEST_ADDR_WIDTH-1 downto 0);
    s_axi_TEST_RVALID : OUT STD_LOGIC;
    s_axi_TEST_RREADY : IN STD_LOGIC;
    s_axi_TEST_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_TEST_DATA_WIDTH-1 downto 0);
    s_axi_TEST_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_TEST_BVALID : OUT STD_LOGIC;
    s_axi_TEST_BREADY : IN STD_LOGIC;
    s_axi_TEST_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of pid is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "pid,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=26,HLS_SYN_TPT=22,HLS_SYN_MEM=20,HLS_SYN_DSP=74,HLS_SYN_FF=3969,HLS_SYN_LUT=5778,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_iter0_fsm_state2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_iter0_fsm_state3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_iter0_fsm_state4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_iter0_fsm_state5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_iter0_fsm_state6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_iter0_fsm_state7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_iter0_fsm_state8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_iter0_fsm_state9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_iter0_fsm_state10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_iter0_fsm_state11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_iter0_fsm_state12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_iter0_fsm_state13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_iter0_fsm_state14 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_iter0_fsm_state15 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_iter0_fsm_state16 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_iter0_fsm_state17 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_iter0_fsm_state18 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_iter0_fsm_state19 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_iter0_fsm_state20 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_iter0_fsm_state21 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_iter0_fsm_state22 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_ST_iter1_fsm_state23 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_iter1_fsm_state24 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_iter1_fsm_state25 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_iter1_fsm_state26 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_iter1_fsm_state27 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_FFF38000 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111100111000000000000000";
    constant ap_const_lv32_C8000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000011001000000000000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_FFFFE000 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111110000000000000";
    constant ap_const_lv32_1FF7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001111111110111";
    constant ap_const_lv16_E000 : STD_LOGIC_VECTOR (15 downto 0) := "1110000000000000";
    constant ap_const_lv16_1FF7 : STD_LOGIC_VECTOR (15 downto 0) := "0001111111110111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv19_78000 : STD_LOGIC_VECTOR (18 downto 0) := "1111000000000000000";
    constant ap_const_lv19_7FDC : STD_LOGIC_VECTOR (18 downto 0) := "0000111111111011100";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv49_2A3D : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000010101000111101";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv19_7FDF : STD_LOGIC_VECTOR (18 downto 0) := "0000111111111011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    signal ap_CS_iter0_fsm_state1 : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    signal ap_CS_iter1_fsm_state0 : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_CS_iter0_fsm_state22 : STD_LOGIC;
    signal OUT_r_AWVALID : STD_LOGIC;
    signal OUT_r_AWREADY : STD_LOGIC;
    signal OUT_r_WVALID : STD_LOGIC;
    signal OUT_r_WREADY : STD_LOGIC;
    signal OUT_r_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal OUT_r_ARREADY : STD_LOGIC;
    signal OUT_r_RVALID : STD_LOGIC;
    signal OUT_r_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal OUT_r_RLAST : STD_LOGIC;
    signal OUT_r_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal OUT_r_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal OUT_r_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal OUT_r_BVALID : STD_LOGIC;
    signal OUT_r_BREADY : STD_LOGIC;
    signal OUT_r_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal OUT_r_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal OUT_r_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_sig_ioackin_OUT_r_WREADY : STD_LOGIC;
    signal ap_block_state23_pp0_stage0_iter1 : BOOLEAN;
    signal ap_CS_iter1_fsm_state23 : STD_LOGIC;
    signal ap_block_state24_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state26_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state27_pp0_stage4_iter1 : BOOLEAN;
    signal ap_CS_iter1_fsm_state27 : STD_LOGIC;
    signal cmdIn_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cmdIn_V_ce0 : STD_LOGIC;
    signal cmdIn_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal measured_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal measured_V_ce0 : STD_LOGIC;
    signal measured_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal kp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal kp_V_ce0 : STD_LOGIC;
    signal kp_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal kd_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kd_V_ce0 : STD_LOGIC;
    signal kd_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ki_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal ki_V_ce0 : STD_LOGIC;
    signal ki_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal test_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal test_V_ce0 : STD_LOGIC;
    signal test_V_we0 : STD_LOGIC;
    signal test_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal integral_pos_V_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal last_error_pos_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal integral_pos_V_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal last_error_pos_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal integral_rate_V_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal last_error_rate_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal integral_rate_V_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal last_error_rate_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal OUT_r_blk_n_AW : STD_LOGIC;
    signal ap_CS_iter0_fsm_state14 : STD_LOGIC;
    signal OUT_r_blk_n_W : STD_LOGIC;
    signal ap_CS_iter0_fsm_state15 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state16 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state17 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state18 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state19 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state20 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state21 : STD_LOGIC;
    signal OUT_r_blk_n_B : STD_LOGIC;
    signal reg_698 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_iter0_fsm_state3 : STD_LOGIC;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal tmp_7_reg_2815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_iter0_fsm_state4 : STD_LOGIC;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state5 : STD_LOGIC;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state6 : STD_LOGIC;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal reg_702 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_706 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state2 : STD_LOGIC;
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal p_Val2_s_reg_2810 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_29_reg_2822 : STD_LOGIC_VECTOR (15 downto 0);
    signal kp_V_load_3_reg_2827 : STD_LOGIC_VECTOR (31 downto 0);
    signal ki_V_load_2_reg_2832 : STD_LOGIC_VECTOR (31 downto 0);
    signal kd_V_load_2_reg_2837 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_reg_2842 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_fu_798_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_3_reg_2853 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_fu_816_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_10_reg_2859 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_11_reg_2884 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_871_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_2895 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_fu_892_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_7_reg_2900 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_8_fu_905_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_8_reg_2905 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_13_fu_919_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_13_reg_2910 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_27_fu_937_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_27_reg_2916 : STD_LOGIC_VECTOR (17 downto 0);
    signal ki_V_load_1_reg_2921 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_1_fu_953_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_21_reg_2961 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_6_fu_964_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_6_reg_2967 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_1009_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_reg_2972 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_17_fu_1030_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_17_reg_2977 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_18_fu_1043_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_18_reg_2982 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_fu_1057_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_reg_2987 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_49_reg_3002 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_1063_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_fu_1078_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_9_reg_3022 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_16_fu_1090_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_16_reg_3027 : STD_LOGIC_VECTOR (63 downto 0);
    signal phitmp_reg_3032 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_38_reg_3037 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_2_fu_1119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_iter0_fsm_state7 : STD_LOGIC;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal cmdIn_V_load_4_reg_3062 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_20_fu_1188_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal p_Val2_20_reg_3067 : STD_LOGIC_VECTOR (65 downto 0);
    signal tmp_32_reg_3072 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp5_fu_1228_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp5_reg_3078 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_47_reg_3083 : STD_LOGIC_VECTOR (15 downto 0);
    signal kp_V_load_5_reg_3088 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_fu_1236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_iter0_fsm_state8 : STD_LOGIC;
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal p_Val2_30_fu_1307_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_30_reg_3103 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_62_fu_1313_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_62_reg_3110 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_39_fu_1324_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_39_reg_3115 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_81_fu_1330_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_reg_3122 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_1_fu_1341_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_1_reg_3127 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_4_fu_1347_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_iter0_fsm_state9 : STD_LOGIC;
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal tmp_51_fu_1393_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_reg_3142 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1415_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_52_reg_3147 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_33_fu_1427_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_33_reg_3152 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_70_fu_1480_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_reg_3157 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_fu_1502_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_71_reg_3162 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_42_fu_1515_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_42_reg_3167 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_84_reg_3172 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_5_fu_1548_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_iter0_fsm_state10 : STD_LOGIC;
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal p_Val2_34_fu_1558_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_34_reg_3187 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_36_fu_1570_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_36_reg_3192 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_43_fu_1583_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_43_reg_3197 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_45_fu_1596_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_45_reg_3202 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_37_fu_1629_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal p_Val2_37_reg_3207 : STD_LOGIC_VECTOR (65 downto 0);
    signal ap_CS_iter0_fsm_state11 : STD_LOGIC;
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal tmp_57_reg_3212 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_46_fu_1672_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal p_Val2_46_reg_3218 : STD_LOGIC_VECTOR (65 downto 0);
    signal tmp_76_reg_3223 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_fu_1869_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_2_reg_3229 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_CS_iter0_fsm_state12 : STD_LOGIC;
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal r_V_2_1_fu_1885_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_2_1_reg_3234 : STD_LOGIC_VECTOR (33 downto 0);
    signal addconv2_fu_1891_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal addconv2_reg_3239 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_2_3_fu_1907_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_2_3_reg_3244 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_2_4_fu_1913_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_2_4_reg_3249 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_2_5_fu_1919_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_2_5_reg_3254 : STD_LOGIC_VECTOR (33 downto 0);
    signal addconv4_fu_1925_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal addconv4_reg_3259 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_2_7_fu_1931_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_2_7_reg_3264 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_52_fu_1940_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_52_reg_3269 : STD_LOGIC_VECTOR (48 downto 0);
    signal ap_CS_iter0_fsm_state13 : STD_LOGIC;
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal tmp_88_fu_1946_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_88_reg_3274 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_81_1_fu_1953_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_81_1_reg_3279 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_95_fu_1959_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_95_reg_3284 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_81_2_fu_1966_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_81_2_reg_3289 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_98_fu_1972_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_98_reg_3294 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_81_3_fu_1979_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_81_3_reg_3299 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_101_fu_1985_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_101_reg_3304 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_93_cast_cast1_fu_1999_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_93_cast_cast1_reg_3309 : STD_LOGIC_VECTOR (50 downto 0);
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_sig_ioackin_OUT_r_AWREADY : STD_LOGIC;
    signal tmp_93_cast_cast2_fu_2003_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_93_cast_cast2_reg_3316 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_89_fu_2015_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_89_reg_3321 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_54_fu_2090_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_54_reg_3329 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_1_fu_2176_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_1_reg_3335 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_2_fu_2258_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_2_reg_3341 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_3_fu_2344_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_3_reg_3347 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_81_4_fu_2355_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_81_4_reg_3353 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_104_fu_2361_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_104_reg_3358 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_81_5_fu_2368_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_81_5_reg_3363 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_108_fu_2374_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_108_reg_3368 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_81_6_fu_2381_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_81_6_reg_3373 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_112_fu_2387_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_112_reg_3378 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_81_7_fu_2394_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_81_7_reg_3383 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_114_fu_2400_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_114_reg_3388 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_94_fu_2404_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal p_Val2_83_4_fu_2480_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_4_reg_3403 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_5_fu_2564_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_5_reg_3409 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_6_fu_2644_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_6_reg_3415 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_7_fu_2724_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_83_7_reg_3421 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_114_1_fu_2732_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal tmp_114_2_fu_2736_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal tmp_114_3_fu_2740_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal tmp_114_4_fu_2744_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal tmp_114_5_fu_2748_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal tmp_114_6_fu_2752_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal tmp_114_7_fu_2756_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_Val2_s_16_phi_fu_669_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_Val2_24_phi_fu_680_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp6_fu_1273_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_Val2_25_phi_fu_691_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ioackin_OUT_r_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_OUT_r_WREADY : STD_LOGIC := '0';
    signal tmp_39_fu_822_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_fu_943_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_710_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_fu_720_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_fu_728_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_fu_728_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_fu_710_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_1_fu_738_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_18_fu_720_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_744_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_1_fu_752_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_790_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_790_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_9_fu_794_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_4_cast_fu_812_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_cast_fu_804_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_cast_fu_812_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_fu_836_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_839_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_tmp_6_cast_fu_857_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_fu_892_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_7_fu_892_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_8_fu_905_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_8_fu_905_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_911_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_911_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_20_fu_915_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_28_cast_fu_933_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_cast_fu_925_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_28_cast_fu_933_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_6_fu_964_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_6_fu_964_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_974_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_977_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_tmp_1_cast_fu_995_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_17_fu_1030_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_17_fu_1030_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_18_fu_1043_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_18_fu_1043_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_1049_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_fu_1049_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_37_fu_1053_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_fu_1063_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_7_cast_fu_1068_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1071_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_12_fu_1075_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_16_fu_1090_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_16_fu_1090_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_23_fu_1103_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_23_fu_1103_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_23_fu_1103_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_8_cast_fu_1123_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_1129_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal tmp_13_fu_1126_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal p_Val2_10_fu_1133_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal tmp_15_fu_1139_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_17_cast_fu_1161_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_1164_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_29_fu_1168_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_19_fu_1171_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_18_cast_fu_1177_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_1184_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal tmp_30_fu_1180_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal tmp_16_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_cast_fu_1214_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_1204_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_cast_fu_1259_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_fu_1250_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_28_fu_1294_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_fu_1300_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_45_fu_1304_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_27_fu_1288_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_63_fu_1317_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_64_fu_1321_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_26_fu_1282_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_82_fu_1334_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_83_fu_1338_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_46_fu_1355_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_1361_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_tmp_3_cast_fu_1379_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_cast_fu_1411_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_cast_fu_1358_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_52_cast_fu_1411_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_33_fu_1427_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_33_fu_1427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_1442_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_1448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_1454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_1474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_tmp_4_cast_fu_1466_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_cast_fu_1498_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_67_cast_fu_1445_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_72_cast_fu_1498_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_42_fu_1515_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_42_fu_1515_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_48_fu_1532_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_48_fu_1532_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_48_fu_1532_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_34_fu_1558_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_34_fu_1558_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_36_fu_1570_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_36_fu_1570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_43_fu_1583_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_43_fu_1583_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_45_fu_1596_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_45_fu_1596_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_33_cast_fu_1602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_fu_1605_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_54_fu_1609_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_35_fu_1612_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_36_cast_fu_1618_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_1625_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal tmp_55_fu_1621_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal p_Val2_42_cast_fu_1645_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_72_fu_1648_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_73_fu_1652_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_44_fu_1655_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_45_cast_fu_1661_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_75_fu_1668_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal tmp_74_fu_1664_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal tmp_60_fu_1698_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_58_fu_1688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_1721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_fu_1743_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_77_fu_1733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_1738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_1766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_cast_fu_1778_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal phitmp1_fu_1707_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_85_fu_1786_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl1_fu_1794_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_1772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_cast_fu_1806_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal phitmp2_fu_1752_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_86_fu_1814_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_50_fu_1822_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_50_cast_fu_1830_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_shl1_cast_fu_1802_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_shl_fu_1840_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_cast_fu_1851_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal addconv_fu_1834_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_51_fu_1855_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_90_cast_fu_1861_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl_cast1_fu_1847_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sum_fu_1875_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sum_cast_fu_1881_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal addconv3_fu_1897_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_102_3_cast_fu_1903_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_91_cast_fu_1865_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_52_fu_1940_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_81_1_fu_1953_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_81_2_fu_1966_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_81_3_fu_1979_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_87_fu_1992_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal p_Val2_52_cast_fu_1989_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_90_cast9_fu_2011_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_93_cast_cast_fu_2007_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Val2_54_cast_fu_2025_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_90_fu_2030_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_53_fu_2019_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_91_fu_2040_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_fu_2048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_2064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_2070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_fu_2084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_cast_fu_2076_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp4_fu_2054_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_81_1_cast_fu_2098_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_10646_1_cast_fu_2101_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Val2_82_1_cast_fu_2111_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_108_1_fu_2116_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_82_1_fu_2105_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_96_fu_2126_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_1_fu_2134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_2150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_2156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_fu_2170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_cast_fu_2162_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp49_1_fu_2140_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10646_2_cast_fu_2184_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_82_2_cast_fu_2193_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_108_2_fu_2198_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_82_2_fu_2187_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_99_fu_2208_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_2_fu_2216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_2232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_2238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_fu_2252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_cast_fu_2244_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp49_2_fu_2222_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_81_3_cast_fu_2266_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_10646_3_cast_fu_2269_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Val2_82_3_cast_fu_2279_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_108_3_fu_2284_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_82_3_fu_2273_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_102_fu_2294_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_3_fu_2302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_2318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_2324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_2338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_cast_fu_2330_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp49_3_fu_2308_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_81_4_fu_2355_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_81_5_fu_2368_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_81_6_fu_2381_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_81_7_fu_2394_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_10646_4_cast_fu_2408_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_82_4_cast_fu_2416_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_108_4_fu_2420_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_82_4_fu_2411_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_106_fu_2430_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_4_fu_2438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_2454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_2460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_2474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp18_cast_fu_2466_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp49_4_fu_2444_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_81_5_cast_fu_2488_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_10646_5_cast_fu_2491_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Val2_82_5_cast_fu_2500_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_108_5_fu_2504_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_82_5_fu_2495_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_110_fu_2514_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_5_fu_2522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_2538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_2544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_fu_2558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_cast_fu_2550_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp49_5_fu_2528_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10646_6_cast_fu_2572_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_82_6_cast_fu_2580_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_108_6_fu_2584_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_82_6_fu_2575_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_113_fu_2594_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_6_fu_2602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_2618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_fu_2624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_fu_2638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp24_cast_fu_2630_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp49_6_fu_2608_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10646_7_cast_fu_2652_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_82_7_cast_fu_2660_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_108_7_fu_2664_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_82_7_fu_2655_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_115_fu_2674_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_7_fu_2682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp18_fu_2698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp19_fu_2704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_fu_2718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp27_cast_fu_2710_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal phitmp49_7_fu_2688_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_condition_2234 : BOOLEAN;
    signal ap_condition_2237 : BOOLEAN;
    signal ap_condition_699 : BOOLEAN;

    component pid_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        cmdIn_V_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        cmdIn_V_ce0 : IN STD_LOGIC;
        cmdIn_V_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        measured_V_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        measured_V_ce0 : IN STD_LOGIC;
        measured_V_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        kp_V_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        kp_V_ce0 : IN STD_LOGIC;
        kp_V_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        kd_V_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        kd_V_ce0 : IN STD_LOGIC;
        kd_V_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ki_V_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ki_V_ce0 : IN STD_LOGIC;
        ki_V_q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pid_TEST_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        test_V_address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        test_V_ce0 : IN STD_LOGIC;
        test_V_we0 : IN STD_LOGIC;
        test_V_d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pid_OUT_r_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    pid_CTRL_s_axi_U : component pid_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        cmdIn_V_address0 => cmdIn_V_address0,
        cmdIn_V_ce0 => cmdIn_V_ce0,
        cmdIn_V_q0 => cmdIn_V_q0,
        measured_V_address0 => measured_V_address0,
        measured_V_ce0 => measured_V_ce0,
        measured_V_q0 => measured_V_q0,
        kp_V_address0 => kp_V_address0,
        kp_V_ce0 => kp_V_ce0,
        kp_V_q0 => kp_V_q0,
        kd_V_address0 => kd_V_address0,
        kd_V_ce0 => kd_V_ce0,
        kd_V_q0 => kd_V_q0,
        ki_V_address0 => ki_V_address0,
        ki_V_ce0 => ki_V_ce0,
        ki_V_q0 => ki_V_q0);

    pid_TEST_s_axi_U : component pid_TEST_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_TEST_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_TEST_DATA_WIDTH)
    port map (
        AWVALID => s_axi_TEST_AWVALID,
        AWREADY => s_axi_TEST_AWREADY,
        AWADDR => s_axi_TEST_AWADDR,
        WVALID => s_axi_TEST_WVALID,
        WREADY => s_axi_TEST_WREADY,
        WDATA => s_axi_TEST_WDATA,
        WSTRB => s_axi_TEST_WSTRB,
        ARVALID => s_axi_TEST_ARVALID,
        ARREADY => s_axi_TEST_ARREADY,
        ARADDR => s_axi_TEST_ARADDR,
        RVALID => s_axi_TEST_RVALID,
        RREADY => s_axi_TEST_RREADY,
        RDATA => s_axi_TEST_RDATA,
        RRESP => s_axi_TEST_RRESP,
        BVALID => s_axi_TEST_BVALID,
        BREADY => s_axi_TEST_BREADY,
        BRESP => s_axi_TEST_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        test_V_address0 => test_V_address0,
        test_V_ce0 => test_V_ce0,
        test_V_we0 => test_V_we0,
        test_V_d0 => test_V_d0);

    pid_OUT_r_m_axi_U : component pid_OUT_r_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 16,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_OUT_R_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_OUT_R_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_OUT_R_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_OUT_R_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_OUT_R_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_OUT_R_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_OUT_R_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_OUT_R_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_OUT_R_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_OUT_R_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_OUT_R_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_OUT_R_CACHE_VALUE)
    port map (
        AWVALID => m_axi_OUT_r_AWVALID,
        AWREADY => m_axi_OUT_r_AWREADY,
        AWADDR => m_axi_OUT_r_AWADDR,
        AWID => m_axi_OUT_r_AWID,
        AWLEN => m_axi_OUT_r_AWLEN,
        AWSIZE => m_axi_OUT_r_AWSIZE,
        AWBURST => m_axi_OUT_r_AWBURST,
        AWLOCK => m_axi_OUT_r_AWLOCK,
        AWCACHE => m_axi_OUT_r_AWCACHE,
        AWPROT => m_axi_OUT_r_AWPROT,
        AWQOS => m_axi_OUT_r_AWQOS,
        AWREGION => m_axi_OUT_r_AWREGION,
        AWUSER => m_axi_OUT_r_AWUSER,
        WVALID => m_axi_OUT_r_WVALID,
        WREADY => m_axi_OUT_r_WREADY,
        WDATA => m_axi_OUT_r_WDATA,
        WSTRB => m_axi_OUT_r_WSTRB,
        WLAST => m_axi_OUT_r_WLAST,
        WID => m_axi_OUT_r_WID,
        WUSER => m_axi_OUT_r_WUSER,
        ARVALID => m_axi_OUT_r_ARVALID,
        ARREADY => m_axi_OUT_r_ARREADY,
        ARADDR => m_axi_OUT_r_ARADDR,
        ARID => m_axi_OUT_r_ARID,
        ARLEN => m_axi_OUT_r_ARLEN,
        ARSIZE => m_axi_OUT_r_ARSIZE,
        ARBURST => m_axi_OUT_r_ARBURST,
        ARLOCK => m_axi_OUT_r_ARLOCK,
        ARCACHE => m_axi_OUT_r_ARCACHE,
        ARPROT => m_axi_OUT_r_ARPROT,
        ARQOS => m_axi_OUT_r_ARQOS,
        ARREGION => m_axi_OUT_r_ARREGION,
        ARUSER => m_axi_OUT_r_ARUSER,
        RVALID => m_axi_OUT_r_RVALID,
        RREADY => m_axi_OUT_r_RREADY,
        RDATA => m_axi_OUT_r_RDATA,
        RLAST => m_axi_OUT_r_RLAST,
        RID => m_axi_OUT_r_RID,
        RUSER => m_axi_OUT_r_RUSER,
        RRESP => m_axi_OUT_r_RRESP,
        BVALID => m_axi_OUT_r_BVALID,
        BREADY => m_axi_OUT_r_BREADY,
        BRESP => m_axi_OUT_r_BRESP,
        BID => m_axi_OUT_r_BID,
        BUSER => m_axi_OUT_r_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => OUT_r_ARREADY,
        I_ARADDR => ap_const_lv32_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => OUT_r_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => OUT_r_RDATA,
        I_RID => OUT_r_RID,
        I_RUSER => OUT_r_RUSER,
        I_RRESP => OUT_r_RRESP,
        I_RLAST => OUT_r_RLAST,
        I_AWVALID => OUT_r_AWVALID,
        I_AWREADY => OUT_r_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_8,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => OUT_r_WVALID,
        I_WREADY => OUT_r_WREADY,
        I_WDATA => OUT_r_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv2_3,
        I_BVALID => OUT_r_BVALID,
        I_BREADY => OUT_r_BREADY,
        I_BRESP => OUT_r_BRESP,
        I_BID => OUT_r_BID,
        I_BUSER => OUT_r_BUSER);





    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_OUT_r_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_OUT_r_AWREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_iter0_fsm_state14)) then
                    if ((ap_const_boolean_1 = ap_condition_699)) then 
                        ap_reg_ioackin_OUT_r_AWREADY <= ap_const_logic_0;
                    elsif ((ap_const_boolean_1 = ap_condition_2237)) then 
                        ap_reg_ioackin_OUT_r_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_OUT_r_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_OUT_r_WREADY <= ap_const_logic_0;
            else
                if (((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state21)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state20)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15)))) then 
                    ap_reg_ioackin_OUT_r_WREADY <= ap_const_logic_0;
                elsif (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state21)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state20)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = OUT_r_WREADY) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15)))) then 
                    ap_reg_ioackin_OUT_r_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    integral_pos_V_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) then
                if (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
                    integral_pos_V_0 <= tmp_2_fu_871_p3;
                elsif (((tmp_7_fu_760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
                    integral_pos_V_0 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    integral_pos_V_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) then
                if (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5))) then 
                    integral_pos_V_1 <= tmp_26_fu_1009_p3;
                elsif (((tmp_7_fu_760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
                    integral_pos_V_1 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    last_error_pos_V_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) then
                if (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then 
                    last_error_pos_V_0 <= tmp_39_fu_822_p1;
                elsif (((tmp_7_fu_760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
                    last_error_pos_V_0 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    last_error_pos_V_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) then
                if (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
                    last_error_pos_V_1 <= tmp_42_fu_943_p1;
                elsif (((tmp_7_fu_760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
                    last_error_pos_V_1 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12))) then
                    addconv2_reg_3239(33 downto 15) <= addconv2_fu_1891_p2(33 downto 15);
                    addconv4_reg_3259(33 downto 15) <= addconv4_fu_1925_p2(33 downto 15);
                    r_V_2_1_reg_3234(33 downto 15) <= r_V_2_1_fu_1885_p2(33 downto 15);
                    r_V_2_3_reg_3244(33 downto 15) <= r_V_2_3_fu_1907_p2(33 downto 15);
                    r_V_2_4_reg_3249(33 downto 15) <= r_V_2_4_fu_1913_p2(33 downto 15);
                    r_V_2_5_reg_3254(33 downto 15) <= r_V_2_5_fu_1919_p2(33 downto 15);
                    r_V_2_7_reg_3264(33 downto 15) <= r_V_2_7_fu_1931_p2(33 downto 15);
                    r_V_2_reg_3229(33 downto 15) <= r_V_2_fu_1869_p2(33 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7))) then
                cmdIn_V_load_4_reg_3062 <= cmdIn_V_q0;
                kp_V_load_5_reg_3088 <= kp_V_q0;
                p_Val2_47_reg_3083 <= measured_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state9))) then
                integral_rate_V_0 <= tmp_51_fu_1393_p3;
                integral_rate_V_1 <= tmp_70_fu_1480_p3;
                last_error_rate_V_0 <= tmp_62_reg_3110;
                last_error_rate_V_1 <= tmp_81_reg_3122;
                p_Val2_33_reg_3152 <= p_Val2_33_fu_1427_p2;
                p_Val2_42_reg_3167 <= p_Val2_42_fu_1515_p2;
                tmp_51_reg_3142 <= tmp_51_fu_1393_p3;
                tmp_52_reg_3147 <= tmp_52_fu_1415_p2;
                tmp_70_reg_3157 <= tmp_70_fu_1480_p3;
                tmp_71_reg_3162 <= tmp_71_fu_1502_p2;
                tmp_84_reg_3172 <= p_Val2_48_fu_1532_p2(29 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                kd_V_load_2_reg_2837 <= kd_V_q0;
                ki_V_load_2_reg_2832 <= ki_V_q0;
                kp_V_load_3_reg_2827 <= kp_V_q0;
                p_Val2_29_reg_2822 <= measured_V_q0;
                p_Val2_s_reg_2810 <= cmdIn_V_q0;
                tmp_7_reg_2815 <= tmp_7_fu_760_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then
                ki_V_load_1_reg_2921 <= ki_V_q0;
                p_Val2_13_reg_2910 <= p_Val2_13_fu_919_p2;
                p_Val2_7_reg_2900 <= p_Val2_7_fu_892_p2;
                p_Val2_8_reg_2905 <= p_Val2_8_fu_905_p2;
                tmp_27_reg_2916 <= tmp_27_fu_937_p2;
                tmp_2_reg_2895 <= tmp_2_fu_871_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then
                p_Val2_11_reg_2884 <= cmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6))) then
                p_Val2_16_reg_3027 <= p_Val2_16_fu_1090_p2;
                p_Val2_9_reg_3022 <= p_Val2_9_fu_1078_p2;
                phitmp_reg_3032 <= p_Val2_23_fu_1103_p2(28 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5))) then
                p_Val2_17_reg_2977 <= p_Val2_17_fu_1030_p2;
                p_Val2_18_reg_2982 <= p_Val2_18_fu_1043_p2;
                p_Val2_6_reg_2967 <= p_Val2_6_fu_964_p2;
                r_V_reg_2987 <= r_V_fu_1057_p2;
                tmp_26_reg_2972 <= tmp_26_fu_1009_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then
                p_Val2_1_reg_2842 <= cmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7))) then
                p_Val2_20_reg_3067 <= p_Val2_20_fu_1188_p2;
                phitmp5_reg_3078 <= phitmp5_fu_1228_p3;
                tmp_32_reg_3072 <= p_Val2_20_fu_1188_p2(44 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5))) then
                p_Val2_21_reg_2961 <= cmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then
                p_Val2_30_reg_3103 <= p_Val2_30_fu_1307_p2;
                p_Val2_39_reg_3115 <= p_Val2_39_fu_1324_p2;
                r_V_1_reg_3127 <= r_V_1_fu_1341_p2;
                tmp_62_reg_3110 <= tmp_62_fu_1313_p1;
                tmp_81_reg_3122 <= tmp_81_fu_1330_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10))) then
                p_Val2_34_reg_3187 <= p_Val2_34_fu_1558_p2;
                p_Val2_36_reg_3192 <= p_Val2_36_fu_1570_p2;
                p_Val2_43_reg_3197 <= p_Val2_43_fu_1583_p2;
                p_Val2_45_reg_3202 <= p_Val2_45_fu_1596_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11))) then
                p_Val2_37_reg_3207 <= p_Val2_37_fu_1629_p2;
                p_Val2_46_reg_3218 <= p_Val2_46_fu_1672_p2;
                tmp_57_reg_3212 <= p_Val2_37_fu_1629_p2(44 downto 13);
                tmp_76_reg_3223 <= p_Val2_46_fu_1672_p2(44 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6))) then
                p_Val2_38_reg_3037 <= measured_V_q0;
                p_Val2_49_reg_3002 <= cmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then
                p_Val2_3_reg_2853 <= p_Val2_3_fu_798_p2;
                tmp_10_reg_2859 <= tmp_10_fu_816_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13))) then
                    p_Val2_52_reg_3269(48 downto 15) <= p_Val2_52_fu_1940_p2(48 downto 15);
                    p_Val2_81_1_reg_3279(48 downto 15) <= p_Val2_81_1_fu_1953_p2(48 downto 15);
                    p_Val2_81_2_reg_3289(48 downto 15) <= p_Val2_81_2_fu_1966_p2(48 downto 15);
                    p_Val2_81_3_reg_3299(48 downto 15) <= p_Val2_81_3_fu_1979_p2(48 downto 15);
                    tmp_101_reg_3304(46 downto 15) <= tmp_101_fu_1985_p1(46 downto 15);
                    tmp_88_reg_3274(46 downto 15) <= tmp_88_fu_1946_p1(46 downto 15);
                    tmp_95_reg_3284(46 downto 15) <= tmp_95_fu_1959_p1(46 downto 15);
                    tmp_98_reg_3294(46 downto 15) <= tmp_98_fu_1972_p1(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_ioackin_OUT_r_AWREADY = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state27) and (ap_const_logic_1 = OUT_r_BVALID)) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14))) then
                p_Val2_54_reg_3329 <= p_Val2_54_fu_2090_p3;
                    p_Val2_81_4_reg_3353(48 downto 15) <= p_Val2_81_4_fu_2355_p2(48 downto 15);
                    p_Val2_81_5_reg_3363(48 downto 15) <= p_Val2_81_5_fu_2368_p2(48 downto 15);
                    p_Val2_81_6_reg_3373(48 downto 15) <= p_Val2_81_6_fu_2381_p2(48 downto 15);
                    p_Val2_81_7_reg_3383(48 downto 15) <= p_Val2_81_7_fu_2394_p2(48 downto 15);
                p_Val2_83_1_reg_3335 <= p_Val2_83_1_fu_2176_p3;
                p_Val2_83_2_reg_3341 <= p_Val2_83_2_fu_2258_p3;
                p_Val2_83_3_reg_3347 <= p_Val2_83_3_fu_2344_p3;
                    tmp_104_reg_3358(46 downto 15) <= tmp_104_fu_2361_p1(46 downto 15);
                    tmp_108_reg_3368(46 downto 15) <= tmp_108_fu_2374_p1(46 downto 15);
                    tmp_112_reg_3378(46 downto 15) <= tmp_112_fu_2387_p1(46 downto 15);
                    tmp_114_reg_3388(46 downto 15) <= tmp_114_fu_2400_p1(46 downto 15);
                    tmp_89_reg_3321(46 downto 30) <= tmp_89_fu_2015_p1(46 downto 30);
                    tmp_93_cast_cast1_reg_3309(50 downto 30) <= tmp_93_cast_cast1_fu_1999_p1(50 downto 30);
                    tmp_93_cast_cast2_reg_3316(52 downto 30) <= tmp_93_cast_cast2_fu_2003_p1(52 downto 30);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15))) then
                p_Val2_83_4_reg_3403 <= p_Val2_83_4_fu_2480_p3;
                p_Val2_83_5_reg_3409 <= p_Val2_83_5_fu_2564_p3;
                p_Val2_83_6_reg_3415 <= p_Val2_83_6_fu_2644_p3;
                p_Val2_83_7_reg_3421 <= p_Val2_83_7_fu_2724_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then
                reg_698 <= kp_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then
                reg_702 <= ki_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then
                reg_706 <= kd_V_q0;
            end if;
        end if;
    end process;
    r_V_2_reg_3229(14 downto 0) <= "000000000000000";
    r_V_2_1_reg_3234(14 downto 0) <= "000000000000000";
    addconv2_reg_3239(14 downto 0) <= "000000000000000";
    r_V_2_3_reg_3244(14 downto 0) <= "000000000000000";
    r_V_2_4_reg_3249(14 downto 0) <= "000000000000000";
    r_V_2_5_reg_3254(14 downto 0) <= "000000000000000";
    addconv4_reg_3259(14 downto 0) <= "000000000000000";
    r_V_2_7_reg_3264(14 downto 0) <= "000000000000000";
    p_Val2_52_reg_3269(14 downto 0) <= "000000000000000";
    tmp_88_reg_3274(14 downto 0) <= "000000000000000";
    p_Val2_81_1_reg_3279(14 downto 0) <= "000000000000000";
    tmp_95_reg_3284(14 downto 0) <= "000000000000000";
    p_Val2_81_2_reg_3289(14 downto 0) <= "000000000000000";
    tmp_98_reg_3294(14 downto 0) <= "000000000000000";
    p_Val2_81_3_reg_3299(14 downto 0) <= "000000000000000";
    tmp_101_reg_3304(14 downto 0) <= "000000000000000";
    tmp_93_cast_cast1_reg_3309(29 downto 0) <= "000000000000000000000000000000";
    tmp_93_cast_cast2_reg_3316(29 downto 0) <= "000000000000000000000000000000";
    tmp_89_reg_3321(29 downto 0) <= "000000000000000000000000000000";
    p_Val2_81_4_reg_3353(14 downto 0) <= "000000000000000";
    tmp_104_reg_3358(14 downto 0) <= "000000000000000";
    p_Val2_81_5_reg_3363(14 downto 0) <= "000000000000000";
    tmp_108_reg_3368(14 downto 0) <= "000000000000000";
    p_Val2_81_6_reg_3373(14 downto 0) <= "000000000000000";
    tmp_112_reg_3378(14 downto 0) <= "000000000000000";
    p_Val2_81_7_reg_3383(14 downto 0) <= "000000000000000";
    tmp_114_reg_3388(14 downto 0) <= "000000000000000";

    ap_NS_iter0_fsm_assign_proc : process (ap_start, ap_CS_iter0_fsm, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_sig_ioackin_OUT_r_WREADY, ap_CS_iter1_fsm_state27, ap_CS_iter0_fsm_state14, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state7, ap_CS_iter0_fsm_state8, ap_CS_iter0_fsm_state9, ap_CS_iter0_fsm_state10, ap_CS_iter0_fsm_state11, ap_CS_iter0_fsm_state12, ap_CS_iter0_fsm_state13, ap_sig_ioackin_OUT_r_AWREADY)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state2;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
                end if;
            when ap_ST_iter0_fsm_state2 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state3;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state2;
                end if;
            when ap_ST_iter0_fsm_state3 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state4;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state3;
                end if;
            when ap_ST_iter0_fsm_state4 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state5;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state4;
                end if;
            when ap_ST_iter0_fsm_state5 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state6;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state5;
                end if;
            when ap_ST_iter0_fsm_state6 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state7;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state6;
                end if;
            when ap_ST_iter0_fsm_state7 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state8;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state7;
                end if;
            when ap_ST_iter0_fsm_state8 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state9;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state8;
                end if;
            when ap_ST_iter0_fsm_state9 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state9))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state10;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state9;
                end if;
            when ap_ST_iter0_fsm_state10 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state11;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state10;
                end if;
            when ap_ST_iter0_fsm_state11 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state12;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state11;
                end if;
            when ap_ST_iter0_fsm_state12 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state13;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state12;
                end if;
            when ap_ST_iter0_fsm_state13 => 
                if ((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state14;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state13;
                end if;
            when ap_ST_iter0_fsm_state14 => 
                if ((not(((ap_sig_ioackin_OUT_r_AWREADY = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state27) and (ap_const_logic_1 = OUT_r_BVALID)) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state15;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state14;
                end if;
            when ap_ST_iter0_fsm_state15 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state16;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state15;
                end if;
            when ap_ST_iter0_fsm_state16 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state17;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state16;
                end if;
            when ap_ST_iter0_fsm_state17 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state18;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state17;
                end if;
            when ap_ST_iter0_fsm_state18 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state19;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state18;
                end if;
            when ap_ST_iter0_fsm_state19 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state20;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state19;
                end if;
            when ap_ST_iter0_fsm_state20 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state20))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state21;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state20;
                end if;
            when ap_ST_iter0_fsm_state21 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state21))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state22;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state21;
                end if;
            when ap_ST_iter0_fsm_state22 => 
                if (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state22;
                end if;
            when others =>  
                ap_NS_iter0_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (ap_CS_iter1_fsm, ap_CS_iter0_fsm_state22, OUT_r_BVALID, ap_sig_ioackin_OUT_r_WREADY, ap_CS_iter1_fsm_state27)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state23 => 
                ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state24;
            when ap_ST_iter1_fsm_state24 => 
                ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state25;
            when ap_ST_iter1_fsm_state25 => 
                ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state26;
            when ap_ST_iter1_fsm_state26 => 
                ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state27;
            when ap_ST_iter1_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_iter0_fsm_state22) and (ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = OUT_r_BVALID))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state23;
                elsif (((ap_const_logic_1 = OUT_r_BVALID) and ((ap_const_logic_0 = ap_CS_iter0_fsm_state22) or ((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22))))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state27;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state23;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "XXXXXX";
        end case;
    end process;

    OUT_r_AWVALID_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state27, ap_CS_iter0_fsm_state14, ap_reg_ioackin_OUT_r_AWREADY)
    begin
        if ((not((((ap_const_logic_1 = ap_CS_iter1_fsm_state27) and (ap_const_logic_1 = OUT_r_BVALID)) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_reg_ioackin_OUT_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14))) then 
            OUT_r_AWVALID <= ap_const_logic_1;
        else 
            OUT_r_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_BREADY_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_iter1_fsm_state27) and (ap_const_logic_1 = OUT_r_BVALID))) then 
            OUT_r_BREADY <= ap_const_logic_1;
        else 
            OUT_r_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_WDATA_assign_proc : process(ap_CS_iter0_fsm_state22, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, p_Val2_54_reg_3329, p_Val2_83_1_reg_3335, p_Val2_83_2_reg_3341, p_Val2_83_3_reg_3347, p_Val2_83_4_reg_3403, p_Val2_83_5_reg_3409, p_Val2_83_6_reg_3415, p_Val2_83_7_reg_3421, ap_condition_2234)
    begin
        if ((ap_const_boolean_1 = ap_condition_2234)) then
            if ((ap_const_logic_1 = ap_CS_iter0_fsm_state22)) then 
                OUT_r_WDATA <= p_Val2_83_7_reg_3421;
            elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state21)) then 
                OUT_r_WDATA <= p_Val2_83_6_reg_3415;
            elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state20)) then 
                OUT_r_WDATA <= p_Val2_83_5_reg_3409;
            elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state19)) then 
                OUT_r_WDATA <= p_Val2_83_4_reg_3403;
            elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state18)) then 
                OUT_r_WDATA <= p_Val2_83_3_reg_3347;
            elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state17)) then 
                OUT_r_WDATA <= p_Val2_83_2_reg_3341;
            elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state16)) then 
                OUT_r_WDATA <= p_Val2_83_1_reg_3335;
            elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state15)) then 
                OUT_r_WDATA <= p_Val2_54_reg_3329;
            else 
                OUT_r_WDATA <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            OUT_r_WDATA <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    OUT_r_WVALID_assign_proc : process(ap_CS_iter0_fsm_state22, OUT_r_BVALID, ap_CS_iter1_fsm_state27, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_reg_ioackin_OUT_r_WREADY)
    begin
        if (((not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state21)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state20)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15)))) then 
            OUT_r_WVALID <= ap_const_logic_1;
        else 
            OUT_r_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_blk_n_AW_assign_proc : process(m_axi_OUT_r_AWREADY, ap_CS_iter0_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state14)) then 
            OUT_r_blk_n_AW <= m_axi_OUT_r_AWREADY;
        else 
            OUT_r_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    OUT_r_blk_n_B_assign_proc : process(ap_CS_iter1_fsm_state27, m_axi_OUT_r_BVALID)
    begin
        if ((ap_const_logic_1 = ap_CS_iter1_fsm_state27)) then 
            OUT_r_blk_n_B <= m_axi_OUT_r_BVALID;
        else 
            OUT_r_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    OUT_r_blk_n_W_assign_proc : process(ap_CS_iter0_fsm_state22, m_axi_OUT_r_WREADY, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_iter0_fsm_state22) or (ap_const_logic_1 = ap_CS_iter0_fsm_state21) or (ap_const_logic_1 = ap_CS_iter0_fsm_state20) or (ap_const_logic_1 = ap_CS_iter0_fsm_state19) or (ap_const_logic_1 = ap_CS_iter0_fsm_state18) or (ap_const_logic_1 = ap_CS_iter0_fsm_state17) or (ap_const_logic_1 = ap_CS_iter0_fsm_state16) or (ap_const_logic_1 = ap_CS_iter0_fsm_state15))) then 
            OUT_r_blk_n_W <= m_axi_OUT_r_WREADY;
        else 
            OUT_r_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    addconv2_fu_1891_p2 <= std_logic_vector(signed(p_shl_cast1_fu_1847_p1) + signed(sum_cast_fu_1881_p1));
    addconv3_fu_1897_p2 <= std_logic_vector(signed(p_shl1_cast_fu_1802_p1) - signed(p_Val2_50_cast_fu_1830_p1));
    addconv4_fu_1925_p2 <= std_logic_vector(signed(sum_cast_fu_1881_p1) - signed(p_shl_cast1_fu_1847_p1));
    addconv_fu_1834_p2 <= std_logic_vector(signed(p_Val2_50_cast_fu_1830_p1) - signed(p_shl1_cast_fu_1802_p1));
    ap_CS_iter0_fsm_state1 <= ap_CS_iter0_fsm(0);
    ap_CS_iter0_fsm_state10 <= ap_CS_iter0_fsm(9);
    ap_CS_iter0_fsm_state11 <= ap_CS_iter0_fsm(10);
    ap_CS_iter0_fsm_state12 <= ap_CS_iter0_fsm(11);
    ap_CS_iter0_fsm_state13 <= ap_CS_iter0_fsm(12);
    ap_CS_iter0_fsm_state14 <= ap_CS_iter0_fsm(13);
    ap_CS_iter0_fsm_state15 <= ap_CS_iter0_fsm(14);
    ap_CS_iter0_fsm_state16 <= ap_CS_iter0_fsm(15);
    ap_CS_iter0_fsm_state17 <= ap_CS_iter0_fsm(16);
    ap_CS_iter0_fsm_state18 <= ap_CS_iter0_fsm(17);
    ap_CS_iter0_fsm_state19 <= ap_CS_iter0_fsm(18);
    ap_CS_iter0_fsm_state2 <= ap_CS_iter0_fsm(1);
    ap_CS_iter0_fsm_state20 <= ap_CS_iter0_fsm(19);
    ap_CS_iter0_fsm_state21 <= ap_CS_iter0_fsm(20);
    ap_CS_iter0_fsm_state22 <= ap_CS_iter0_fsm(21);
    ap_CS_iter0_fsm_state3 <= ap_CS_iter0_fsm(2);
    ap_CS_iter0_fsm_state4 <= ap_CS_iter0_fsm(3);
    ap_CS_iter0_fsm_state5 <= ap_CS_iter0_fsm(4);
    ap_CS_iter0_fsm_state6 <= ap_CS_iter0_fsm(5);
    ap_CS_iter0_fsm_state7 <= ap_CS_iter0_fsm(6);
    ap_CS_iter0_fsm_state8 <= ap_CS_iter0_fsm(7);
    ap_CS_iter0_fsm_state9 <= ap_CS_iter0_fsm(8);
    ap_CS_iter1_fsm_state0 <= ap_CS_iter1_fsm(0);
    ap_CS_iter1_fsm_state23 <= ap_CS_iter1_fsm(1);
    ap_CS_iter1_fsm_state27 <= ap_CS_iter1_fsm(5);
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp0_stage13_iter0_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state27)
    begin
                ap_block_state14_pp0_stage13_iter0 <= ((ap_const_logic_1 = ap_CS_iter1_fsm_state27) and (ap_const_logic_1 = OUT_r_BVALID));
    end process;

        ap_block_state15_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage20_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage21_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state27_pp0_stage4_iter1_assign_proc : process(OUT_r_BVALID)
    begin
                ap_block_state27_pp0_stage4_iter1 <= (ap_const_logic_0 = OUT_r_BVALID);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_2234_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state27, ap_reg_ioackin_OUT_r_WREADY)
    begin
                ap_condition_2234 <= (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0));
    end process;


    ap_condition_2237_assign_proc : process(OUT_r_AWREADY, OUT_r_BVALID, ap_CS_iter1_fsm_state27)
    begin
                ap_condition_2237 <= (not((((ap_const_logic_1 = ap_CS_iter1_fsm_state27) and (ap_const_logic_1 = OUT_r_BVALID)) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = OUT_r_AWREADY));
    end process;


    ap_condition_699_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state27, ap_sig_ioackin_OUT_r_AWREADY)
    begin
                ap_condition_699 <= not(((ap_sig_ioackin_OUT_r_AWREADY = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state27) and (ap_const_logic_1 = OUT_r_BVALID)) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))));
    end process;


    ap_done_assign_proc : process(OUT_r_BVALID, ap_CS_iter1_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_iter1_fsm_state27) and (ap_const_logic_1 = OUT_r_BVALID))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter1_fsm_state0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_Val2_24_phi_fu_680_p4_assign_proc : process(tmp_7_reg_2815, ap_CS_iter0_fsm_state8, phitmp6_fu_1273_p3)
    begin
        if (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then 
            ap_phi_mux_p_Val2_24_phi_fu_680_p4 <= phitmp6_fu_1273_p3;
        else 
            ap_phi_mux_p_Val2_24_phi_fu_680_p4 <= ap_const_lv16_0;
        end if; 
    end process;


    ap_phi_mux_p_Val2_25_phi_fu_691_p4_assign_proc : process(tmp_7_reg_2815, phitmp5_reg_3078, ap_CS_iter0_fsm_state8)
    begin
        if (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then 
            ap_phi_mux_p_Val2_25_phi_fu_691_p4 <= phitmp5_reg_3078;
        else 
            ap_phi_mux_p_Val2_25_phi_fu_691_p4 <= ap_const_lv16_0;
        end if; 
    end process;


    ap_phi_mux_p_Val2_s_16_phi_fu_669_p4_assign_proc : process(tmp_7_reg_2815, phitmp_reg_3032, ap_CS_iter0_fsm_state8)
    begin
        if (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then 
            ap_phi_mux_p_Val2_s_16_phi_fu_669_p4 <= phitmp_reg_3032;
        else 
            ap_phi_mux_p_Val2_s_16_phi_fu_669_p4 <= ap_const_lv16_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_iter0_fsm_state22, OUT_r_BVALID, ap_sig_ioackin_OUT_r_WREADY, ap_CS_iter1_fsm_state27)
    begin
        if ((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_OUT_r_AWREADY_assign_proc : process(OUT_r_AWREADY, ap_reg_ioackin_OUT_r_AWREADY)
    begin
        if ((ap_reg_ioackin_OUT_r_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_OUT_r_AWREADY <= OUT_r_AWREADY;
        else 
            ap_sig_ioackin_OUT_r_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_OUT_r_WREADY_assign_proc : process(OUT_r_WREADY, ap_reg_ioackin_OUT_r_WREADY)
    begin
        if ((ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_OUT_r_WREADY <= OUT_r_WREADY;
        else 
            ap_sig_ioackin_OUT_r_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    cmdIn_V_address0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state6)) then 
            cmdIn_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state5)) then 
            cmdIn_V_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state4)) then 
            cmdIn_V_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state3)) then 
            cmdIn_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state2)) then 
            cmdIn_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            cmdIn_V_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        else 
            cmdIn_V_address0 <= "XXX";
        end if; 
    end process;


    cmdIn_V_ce0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_CS_iter1_fsm_state27, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2)
    begin
        if (((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            cmdIn_V_ce0 <= ap_const_logic_1;
        else 
            cmdIn_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kd_V_address0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter0_fsm_state3, tmp_7_reg_2815, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state2, tmp_7_fu_760_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state4)) then 
            kd_V_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then 
            kd_V_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((tmp_7_fu_760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            kd_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            kd_V_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        else 
            kd_V_address0 <= "XX";
        end if; 
    end process;


    kd_V_ce0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_CS_iter1_fsm_state27, ap_CS_iter0_fsm_state3, tmp_7_reg_2815, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state2, tmp_7_fu_760_p2)
    begin
        if (((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_fu_760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            kd_V_ce0 <= ap_const_logic_1;
        else 
            kd_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ki_V_address0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter0_fsm_state3, tmp_7_reg_2815, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state2, tmp_7_fu_760_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state4)) then 
            ki_V_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then 
            ki_V_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((tmp_7_fu_760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            ki_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            ki_V_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        else 
            ki_V_address0 <= "XX";
        end if; 
    end process;


    ki_V_ce0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_CS_iter1_fsm_state27, ap_CS_iter0_fsm_state3, tmp_7_reg_2815, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state2, tmp_7_fu_760_p2)
    begin
        if (((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_fu_760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            ki_V_ce0 <= ap_const_logic_1;
        else 
            ki_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kp_V_address0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter0_fsm_state3, tmp_7_reg_2815, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, tmp_7_fu_760_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state6)) then 
            kp_V_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state5)) then 
            kp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            kp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then 
            kp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((tmp_7_fu_760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            kp_V_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            kp_V_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        else 
            kp_V_address0 <= "XXX";
        end if; 
    end process;


    kp_V_ce0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_CS_iter1_fsm_state27, ap_CS_iter0_fsm_state3, tmp_7_reg_2815, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, tmp_7_fu_760_p2)
    begin
        if (((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_fu_760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            kp_V_ce0 <= ap_const_logic_1;
        else 
            kp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    measured_V_address0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter0_fsm_state3, tmp_7_reg_2815, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, tmp_7_fu_760_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state6)) then 
            measured_V_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state5)) then 
            measured_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            measured_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then 
            measured_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((tmp_7_fu_760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            measured_V_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            measured_V_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        else 
            measured_V_address0 <= "XXX";
        end if; 
    end process;


    measured_V_ce0_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, OUT_r_BVALID, ap_CS_iter1_fsm_state27, ap_CS_iter0_fsm_state3, tmp_7_reg_2815, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state2, tmp_7_fu_760_p2)
    begin
        if (((not(((ap_start = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_fu_760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (tmp_7_reg_2815 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            measured_V_ce0 <= ap_const_logic_1;
        else 
            measured_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_1_fu_752_p3 <= 
        p_s_fu_744_p3 when (tmp_18_fu_720_p3(0) = '1') else 
        ret_V_fu_710_p4;
    p_Val2_10_fu_1133_p2 <= std_logic_vector(unsigned(tmp_14_fu_1129_p1) + unsigned(tmp_13_fu_1126_p1));
    p_Val2_13_fu_919_p2 <= std_logic_vector(signed(tmp_19_fu_911_p1) - signed(tmp_20_fu_915_p1));
    p_Val2_16_fu_1090_p0 <= tmp_26_reg_2972;
    p_Val2_16_fu_1090_p1 <= ki_V_load_1_reg_2921;
    p_Val2_16_fu_1090_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_16_fu_1090_p0) * signed(p_Val2_16_fu_1090_p1))), 64));
        p_Val2_17_cast_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_17_reg_2977),64));

    p_Val2_17_fu_1030_p0 <= p_Val2_13_reg_2910;
    p_Val2_17_fu_1030_p1 <= reg_698;
    p_Val2_17_fu_1030_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_17_fu_1030_p0) * signed(p_Val2_17_fu_1030_p1))), 49));
        p_Val2_18_cast_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_18_reg_2982),64));

    p_Val2_18_fu_1043_p0 <= tmp_27_reg_2916;
    p_Val2_18_fu_1043_p1 <= reg_706;
    p_Val2_18_fu_1043_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_18_fu_1043_p0) * signed(p_Val2_18_fu_1043_p1))), 50));
    p_Val2_19_fu_1171_p2 <= std_logic_vector(unsigned(tmp_28_fu_1164_p1) + unsigned(tmp_29_fu_1168_p1));
    p_Val2_20_fu_1188_p2 <= std_logic_vector(unsigned(tmp_31_fu_1184_p1) + unsigned(tmp_30_fu_1180_p1));
    p_Val2_23_fu_1103_p0 <= r_V_reg_2987;
    p_Val2_23_fu_1103_p1 <= reg_698;
    p_Val2_23_fu_1103_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_23_fu_1103_p0) * signed(p_Val2_23_fu_1103_p1))), 49));
    p_Val2_26_fu_1282_p3 <= 
        ap_phi_mux_p_Val2_s_16_phi_fu_669_p4 when (tmp_7_reg_2815(0) = '1') else 
        p_Val2_21_reg_2961;
    p_Val2_27_fu_1288_p3 <= 
        ap_phi_mux_p_Val2_24_phi_fu_680_p4 when (tmp_7_reg_2815(0) = '1') else 
        p_Val2_11_reg_2884;
    p_Val2_28_fu_1294_p3 <= 
        ap_phi_mux_p_Val2_25_phi_fu_691_p4 when (tmp_7_reg_2815(0) = '1') else 
        p_Val2_1_reg_2842;
    p_Val2_30_fu_1307_p2 <= std_logic_vector(signed(tmp_44_fu_1300_p1) - signed(tmp_45_fu_1304_p1));
        p_Val2_33_cast_fu_1602_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_33_reg_3152),64));

    p_Val2_33_fu_1427_p0 <= p_Val2_30_reg_3103;
    p_Val2_33_fu_1427_p1 <= kp_V_load_3_reg_2827;
    p_Val2_33_fu_1427_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_33_fu_1427_p0) * signed(p_Val2_33_fu_1427_p1))), 49));
    p_Val2_34_fu_1558_p0 <= tmp_51_reg_3142;
    p_Val2_34_fu_1558_p1 <= ki_V_load_2_reg_2832;
    p_Val2_34_fu_1558_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_34_fu_1558_p0) * signed(p_Val2_34_fu_1558_p1))), 64));
    p_Val2_35_fu_1612_p2 <= std_logic_vector(unsigned(tmp_53_fu_1605_p1) + unsigned(tmp_54_fu_1609_p1));
        p_Val2_36_cast_fu_1618_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_36_reg_3192),64));

    p_Val2_36_fu_1570_p0 <= tmp_52_reg_3147;
    p_Val2_36_fu_1570_p1 <= kd_V_load_2_reg_2837;
    p_Val2_36_fu_1570_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_36_fu_1570_p0) * signed(p_Val2_36_fu_1570_p1))), 50));
    p_Val2_37_fu_1629_p2 <= std_logic_vector(unsigned(tmp_56_fu_1625_p1) + unsigned(tmp_55_fu_1621_p1));
    p_Val2_39_fu_1324_p2 <= std_logic_vector(signed(tmp_63_fu_1317_p1) - signed(tmp_64_fu_1321_p1));
    p_Val2_3_fu_798_p2 <= std_logic_vector(signed(tmp_8_fu_790_p1) - signed(tmp_9_fu_794_p1));
        p_Val2_42_cast_fu_1645_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_42_reg_3167),64));

    p_Val2_42_fu_1515_p0 <= p_Val2_39_reg_3115;
    p_Val2_42_fu_1515_p1 <= reg_698;
    p_Val2_42_fu_1515_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_42_fu_1515_p0) * signed(p_Val2_42_fu_1515_p1))), 49));
    p_Val2_43_fu_1583_p0 <= tmp_70_reg_3157;
    p_Val2_43_fu_1583_p1 <= reg_702;
    p_Val2_43_fu_1583_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_43_fu_1583_p0) * signed(p_Val2_43_fu_1583_p1))), 64));
    p_Val2_44_fu_1655_p2 <= std_logic_vector(unsigned(tmp_72_fu_1648_p1) + unsigned(tmp_73_fu_1652_p1));
        p_Val2_45_cast_fu_1661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_45_reg_3202),64));

    p_Val2_45_fu_1596_p0 <= tmp_71_reg_3162;
    p_Val2_45_fu_1596_p1 <= reg_706;
    p_Val2_45_fu_1596_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_45_fu_1596_p0) * signed(p_Val2_45_fu_1596_p1))), 50));
    p_Val2_46_fu_1672_p2 <= std_logic_vector(unsigned(tmp_75_fu_1668_p1) + unsigned(tmp_74_fu_1664_p1));
    p_Val2_48_fu_1532_p0 <= r_V_1_reg_3127;
    p_Val2_48_fu_1532_p1 <= kp_V_load_5_reg_3088;
    p_Val2_48_fu_1532_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_48_fu_1532_p0) * signed(p_Val2_48_fu_1532_p1))), 49));
        p_Val2_50_cast_fu_1830_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_50_fu_1822_p3),33));

    p_Val2_50_fu_1822_p3 <= (tmp_86_fu_1814_p3 & ap_const_lv13_0);
    p_Val2_51_fu_1855_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(p_shl_cast_fu_1851_p1));
        p_Val2_52_cast_fu_1989_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_52_reg_3269),50));

    p_Val2_52_fu_1940_p1 <= r_V_2_reg_3229;
    p_Val2_52_fu_1940_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv49_2A3D) * signed(p_Val2_52_fu_1940_p1))), 49));
    p_Val2_53_fu_2019_p2 <= std_logic_vector(unsigned(tmp_90_cast9_fu_2011_p1) + unsigned(tmp_93_cast_cast_fu_2007_p1));
    p_Val2_54_cast_fu_2025_p2 <= std_logic_vector(signed(tmp_89_fu_2015_p1) + signed(tmp_88_reg_3274));
    p_Val2_54_fu_2090_p3 <= 
        sel_tmp5_cast_fu_2076_p3 when (tmp_93_fu_2084_p2(0) = '1') else 
        phitmp4_fu_2054_p4;
    p_Val2_6_fu_964_p0 <= tmp_2_reg_2895;
    p_Val2_6_fu_964_p1 <= reg_702;
    p_Val2_6_fu_964_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_6_fu_964_p0) * signed(p_Val2_6_fu_964_p1))), 64));
        p_Val2_7_cast_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_2900),64));

    p_Val2_7_fu_892_p0 <= p_Val2_3_reg_2853;
    p_Val2_7_fu_892_p1 <= reg_698;
    p_Val2_7_fu_892_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_fu_892_p0) * signed(p_Val2_7_fu_892_p1))), 49));
        p_Val2_81_1_cast_fu_2098_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_81_1_reg_3279),51));

    p_Val2_81_1_fu_1953_p1 <= r_V_2_1_reg_3234;
    p_Val2_81_1_fu_1953_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv49_2A3D) * signed(p_Val2_81_1_fu_1953_p1))), 49));
    p_Val2_81_2_fu_1966_p1 <= addconv2_reg_3239;
    p_Val2_81_2_fu_1966_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv49_2A3D) * signed(p_Val2_81_2_fu_1966_p1))), 49));
        p_Val2_81_3_cast_fu_2266_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_81_3_reg_3299),50));

    p_Val2_81_3_fu_1979_p1 <= r_V_2_3_reg_3244;
    p_Val2_81_3_fu_1979_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv49_2A3D) * signed(p_Val2_81_3_fu_1979_p1))), 49));
    p_Val2_81_4_fu_2355_p1 <= r_V_2_4_reg_3249;
    p_Val2_81_4_fu_2355_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv49_2A3D) * signed(p_Val2_81_4_fu_2355_p1))), 49));
        p_Val2_81_5_cast_fu_2488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_81_5_reg_3363),51));

    p_Val2_81_5_fu_2368_p1 <= r_V_2_5_reg_3254;
    p_Val2_81_5_fu_2368_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv49_2A3D) * signed(p_Val2_81_5_fu_2368_p1))), 49));
    p_Val2_81_6_fu_2381_p1 <= addconv4_reg_3259;
    p_Val2_81_6_fu_2381_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv49_2A3D) * signed(p_Val2_81_6_fu_2381_p1))), 49));
    p_Val2_81_7_fu_2394_p1 <= r_V_2_7_reg_3264;
    p_Val2_81_7_fu_2394_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv49_2A3D) * signed(p_Val2_81_7_fu_2394_p1))), 49));
    p_Val2_82_1_cast_fu_2111_p2 <= std_logic_vector(signed(tmp_89_fu_2015_p1) + signed(tmp_95_reg_3284));
    p_Val2_82_1_fu_2105_p2 <= std_logic_vector(unsigned(tmp_10646_1_cast_fu_2101_p1) + unsigned(tmp_93_cast_cast2_fu_2003_p1));
    p_Val2_82_2_cast_fu_2193_p2 <= std_logic_vector(signed(tmp_89_fu_2015_p1) + signed(tmp_98_reg_3294));
    p_Val2_82_2_fu_2187_p2 <= std_logic_vector(unsigned(tmp_10646_2_cast_fu_2184_p1) + unsigned(tmp_93_cast_cast1_fu_1999_p1));
    p_Val2_82_3_cast_fu_2279_p2 <= std_logic_vector(signed(tmp_89_fu_2015_p1) + signed(tmp_101_reg_3304));
    p_Val2_82_3_fu_2273_p2 <= std_logic_vector(unsigned(tmp_10646_3_cast_fu_2269_p1) + unsigned(tmp_93_cast_cast_fu_2007_p1));
    p_Val2_82_4_cast_fu_2416_p2 <= std_logic_vector(signed(tmp_89_reg_3321) + signed(tmp_104_reg_3358));
    p_Val2_82_4_fu_2411_p2 <= std_logic_vector(unsigned(tmp_10646_4_cast_fu_2408_p1) + unsigned(tmp_93_cast_cast1_reg_3309));
    p_Val2_82_5_cast_fu_2500_p2 <= std_logic_vector(signed(tmp_89_reg_3321) + signed(tmp_108_reg_3368));
    p_Val2_82_5_fu_2495_p2 <= std_logic_vector(unsigned(tmp_10646_5_cast_fu_2491_p1) + unsigned(tmp_93_cast_cast2_reg_3316));
    p_Val2_82_6_cast_fu_2580_p2 <= std_logic_vector(signed(tmp_89_reg_3321) + signed(tmp_112_reg_3378));
    p_Val2_82_6_fu_2575_p2 <= std_logic_vector(unsigned(tmp_10646_6_cast_fu_2572_p1) + unsigned(tmp_93_cast_cast1_reg_3309));
    p_Val2_82_7_cast_fu_2660_p2 <= std_logic_vector(signed(tmp_89_reg_3321) + signed(tmp_114_reg_3388));
    p_Val2_82_7_fu_2655_p2 <= std_logic_vector(unsigned(tmp_10646_7_cast_fu_2652_p1) + unsigned(tmp_93_cast_cast1_reg_3309));
    p_Val2_83_1_fu_2176_p3 <= 
        sel_tmp8_cast_fu_2162_p3 when (tmp_97_fu_2170_p2(0) = '1') else 
        phitmp49_1_fu_2140_p4;
    p_Val2_83_2_fu_2258_p3 <= 
        sel_tmp12_cast_fu_2244_p3 when (tmp_100_fu_2252_p2(0) = '1') else 
        phitmp49_2_fu_2222_p4;
    p_Val2_83_3_fu_2344_p3 <= 
        sel_tmp15_cast_fu_2330_p3 when (tmp_103_fu_2338_p2(0) = '1') else 
        phitmp49_3_fu_2308_p4;
    p_Val2_83_4_fu_2480_p3 <= 
        sel_tmp18_cast_fu_2466_p3 when (tmp_105_fu_2474_p2(0) = '1') else 
        phitmp49_4_fu_2444_p4;
    p_Val2_83_5_fu_2564_p3 <= 
        sel_tmp21_cast_fu_2550_p3 when (tmp_107_fu_2558_p2(0) = '1') else 
        phitmp49_5_fu_2528_p4;
    p_Val2_83_6_fu_2644_p3 <= 
        sel_tmp24_cast_fu_2630_p3 when (tmp_109_fu_2638_p2(0) = '1') else 
        phitmp49_6_fu_2608_p4;
    p_Val2_83_7_fu_2724_p3 <= 
        sel_tmp27_cast_fu_2710_p3 when (tmp_111_fu_2718_p2(0) = '1') else 
        phitmp49_7_fu_2688_p4;
        p_Val2_8_cast_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_2905),64));

    p_Val2_8_fu_905_p0 <= tmp_10_reg_2859;
    p_Val2_8_fu_905_p1 <= reg_706;
    p_Val2_8_fu_905_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_8_fu_905_p0) * signed(p_Val2_8_fu_905_p1))), 50));
    p_Val2_9_fu_1078_p2 <= std_logic_vector(unsigned(tmp_11_fu_1071_p1) + unsigned(tmp_12_fu_1075_p1));
    p_s_fu_744_p3 <= 
        ret_V_fu_710_p4 when (tmp_5_fu_732_p2(0) = '1') else 
        ret_V_1_fu_738_p2;
        p_shl1_cast_fu_1802_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl1_fu_1794_p3),33));

    p_shl1_fu_1794_p3 <= (tmp_85_fu_1786_p3 & ap_const_lv13_0);
        p_shl_cast1_fu_1847_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_fu_1840_p3),34));

        p_shl_cast_fu_1851_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_fu_1840_p3),33));

    p_shl_fu_1840_p3 <= (tmp_84_reg_3172 & ap_const_lv15_0);
    p_tmp_1_cast_fu_995_p3 <= 
        ap_const_lv32_FFF38000 when (tmp_23_fu_983_p2(0) = '1') else 
        ap_const_lv32_C8000;
    p_tmp_3_cast_fu_1379_p3 <= 
        ap_const_lv32_FFF38000 when (tmp_48_fu_1367_p2(0) = '1') else 
        ap_const_lv32_C8000;
    p_tmp_4_cast_fu_1466_p3 <= 
        ap_const_lv32_FFF38000 when (tmp_67_fu_1454_p2(0) = '1') else 
        ap_const_lv32_C8000;
    p_tmp_6_cast_fu_857_p3 <= 
        ap_const_lv32_FFF38000 when (tmp_s_fu_845_p2(0) = '1') else 
        ap_const_lv32_C8000;
    phitmp1_fu_1707_p3 <= (tmp_60_fu_1698_p4 & ap_const_lv2_0);
    phitmp2_fu_1752_p3 <= (tmp_79_fu_1743_p4 & ap_const_lv2_0);
    phitmp49_1_fu_2140_p4 <= p_Val2_82_1_fu_2105_p2(45 downto 30);
    phitmp49_2_fu_2222_p4 <= p_Val2_82_2_fu_2187_p2(45 downto 30);
    phitmp49_3_fu_2308_p4 <= p_Val2_82_3_fu_2273_p2(45 downto 30);
    phitmp49_4_fu_2444_p4 <= p_Val2_82_4_fu_2411_p2(45 downto 30);
    phitmp49_5_fu_2528_p4 <= p_Val2_82_5_fu_2495_p2(45 downto 30);
    phitmp49_6_fu_2608_p4 <= p_Val2_82_6_fu_2575_p2(45 downto 30);
    phitmp49_7_fu_2688_p4 <= p_Val2_82_7_fu_2655_p2(45 downto 30);
    phitmp4_fu_2054_p4 <= p_Val2_53_fu_2019_p2(45 downto 30);
    phitmp5_fu_1228_p3 <= 
        tmp_39_cast_fu_1214_p3 when (tmp_40_fu_1222_p2(0) = '1') else 
        tmp_38_fu_1204_p4;
    phitmp6_fu_1273_p3 <= 
        tmp_42_cast_fu_1259_p3 when (tmp_43_fu_1267_p2(0) = '1') else 
        tmp_41_fu_1250_p4;
    r_V_1_fu_1341_p2 <= std_logic_vector(signed(tmp_82_fu_1334_p1) - signed(tmp_83_fu_1338_p1));
    r_V_2_1_fu_1885_p2 <= std_logic_vector(signed(p_shl_cast1_fu_1847_p1) - signed(sum_cast_fu_1881_p1));
    r_V_2_3_fu_1907_p2 <= std_logic_vector(signed(tmp_102_3_cast_fu_1903_p1) - signed(p_shl_cast1_fu_1847_p1));
    r_V_2_4_fu_1913_p2 <= std_logic_vector(signed(p_shl_cast1_fu_1847_p1) + signed(tmp_90_cast_fu_1861_p1));
    r_V_2_5_fu_1919_p2 <= std_logic_vector(signed(tmp_91_cast_fu_1865_p1) - signed(sum_cast_fu_1881_p1));
    r_V_2_7_fu_1931_p2 <= std_logic_vector(signed(p_shl_cast1_fu_1847_p1) + signed(tmp_102_3_cast_fu_1903_p1));
    r_V_2_fu_1869_p2 <= std_logic_vector(signed(tmp_90_cast_fu_1861_p1) - signed(p_shl_cast1_fu_1847_p1));
    r_V_fu_1057_p2 <= std_logic_vector(signed(tmp_36_fu_1049_p1) - signed(tmp_37_fu_1053_p1));
    ret_V_1_fu_738_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(ret_V_fu_710_p4));
    ret_V_fu_710_p1 <= cmdIn_V_q0;
    ret_V_fu_710_p4 <= ret_V_fu_710_p1(15 downto 13);
    sel_tmp10_fu_2318_p2 <= (tmp_102_fu_2294_p3 xor ap_const_lv1_1);
    sel_tmp11_fu_2324_p2 <= (tmp_110_3_fu_2302_p2 and sel_tmp10_fu_2318_p2);
    sel_tmp12_cast_fu_2244_p3 <= 
        ap_const_lv16_1FF7 when (sel_tmp8_fu_2238_p2(0) = '1') else 
        ap_const_lv16_0;
    sel_tmp12_fu_2454_p2 <= (tmp_106_fu_2430_p3 xor ap_const_lv1_1);
    sel_tmp13_fu_2460_p2 <= (tmp_110_4_fu_2438_p2 and sel_tmp12_fu_2454_p2);
    sel_tmp14_fu_2538_p2 <= (tmp_110_fu_2514_p3 xor ap_const_lv1_1);
    sel_tmp15_cast_fu_2330_p3 <= 
        ap_const_lv16_1FF7 when (sel_tmp11_fu_2324_p2(0) = '1') else 
        ap_const_lv16_0;
    sel_tmp15_fu_2544_p2 <= (tmp_110_5_fu_2522_p2 and sel_tmp14_fu_2538_p2);
    sel_tmp16_fu_2618_p2 <= (tmp_113_fu_2594_p3 xor ap_const_lv1_1);
    sel_tmp17_fu_2624_p2 <= (tmp_110_6_fu_2602_p2 and sel_tmp16_fu_2618_p2);
    sel_tmp18_cast_fu_2466_p3 <= 
        ap_const_lv16_1FF7 when (sel_tmp13_fu_2460_p2(0) = '1') else 
        ap_const_lv16_0;
    sel_tmp18_fu_2698_p2 <= (tmp_115_fu_2674_p3 xor ap_const_lv1_1);
    sel_tmp19_fu_2704_p2 <= (tmp_110_7_fu_2682_p2 and sel_tmp18_fu_2698_p2);
    sel_tmp1_fu_2064_p2 <= (tmp_91_fu_2040_p3 xor ap_const_lv1_1);
    sel_tmp21_cast_fu_2550_p3 <= 
        ap_const_lv16_1FF7 when (sel_tmp15_fu_2544_p2(0) = '1') else 
        ap_const_lv16_0;
    sel_tmp24_cast_fu_2630_p3 <= 
        ap_const_lv16_1FF7 when (sel_tmp17_fu_2624_p2(0) = '1') else 
        ap_const_lv16_0;
    sel_tmp27_cast_fu_2710_p3 <= 
        ap_const_lv16_1FF7 when (sel_tmp19_fu_2704_p2(0) = '1') else 
        ap_const_lv16_0;
    sel_tmp2_fu_1721_p2 <= (tmp_59_fu_1693_p2 and sel_tmp_fu_1715_p2);
    sel_tmp3_fu_2156_p2 <= (tmp_110_1_fu_2134_p2 and sel_tmp9_fu_2150_p2);
    sel_tmp4_fu_2070_p2 <= (tmp_92_fu_2048_p2 and sel_tmp1_fu_2064_p2);
    sel_tmp5_cast_fu_2076_p3 <= 
        ap_const_lv16_1FF7 when (sel_tmp4_fu_2070_p2(0) = '1') else 
        ap_const_lv16_0;
    sel_tmp5_fu_2232_p2 <= (tmp_99_fu_2208_p3 xor ap_const_lv1_1);
    sel_tmp6_fu_1760_p2 <= (tmp_77_fu_1733_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_1766_p2 <= (tmp_78_fu_1738_p2 and sel_tmp6_fu_1760_p2);
    sel_tmp8_cast_fu_2162_p3 <= 
        ap_const_lv16_1FF7 when (sel_tmp3_fu_2156_p2(0) = '1') else 
        ap_const_lv16_0;
    sel_tmp8_fu_2238_p2 <= (tmp_110_2_fu_2216_p2 and sel_tmp5_fu_2232_p2);
    sel_tmp9_fu_2150_p2 <= (tmp_96_fu_2126_p3 xor ap_const_lv1_1);
    sel_tmp_fu_1715_p2 <= (tmp_58_fu_1688_p2 xor ap_const_lv1_1);
        sum_cast_fu_1881_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_fu_1875_p2),34));

    sum_fu_1875_p2 <= std_logic_vector(signed(p_shl1_cast_fu_1802_p1) + signed(p_Val2_50_cast_fu_1830_p1));

    test_V_address0_assign_proc : process(ap_CS_iter0_fsm_state22, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state7, ap_CS_iter0_fsm_state8, ap_CS_iter0_fsm_state9, ap_CS_iter0_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state22)) then 
            test_V_address0 <= ap_const_lv64_D(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state21)) then 
            test_V_address0 <= ap_const_lv64_C(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state20)) then 
            test_V_address0 <= ap_const_lv64_B(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state19)) then 
            test_V_address0 <= ap_const_lv64_A(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state18)) then 
            test_V_address0 <= ap_const_lv64_9(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state17)) then 
            test_V_address0 <= ap_const_lv64_8(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state16)) then 
            test_V_address0 <= ap_const_lv64_7(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state15)) then 
            test_V_address0 <= ap_const_lv64_6(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state10)) then 
            test_V_address0 <= ap_const_lv64_5(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state9)) then 
            test_V_address0 <= ap_const_lv64_4(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state8)) then 
            test_V_address0 <= ap_const_lv64_3(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state7)) then 
            test_V_address0 <= ap_const_lv64_2(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state6)) then 
            test_V_address0 <= ap_const_lv64_0(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state5)) then 
            test_V_address0 <= ap_const_lv64_1(12 - 1 downto 0);
        else 
            test_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    test_V_ce0_assign_proc : process(ap_CS_iter0_fsm_state22, OUT_r_BVALID, ap_sig_ioackin_OUT_r_WREADY, ap_CS_iter1_fsm_state23, ap_CS_iter1_fsm_state27, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state7, ap_CS_iter0_fsm_state8, ap_CS_iter0_fsm_state9, ap_CS_iter0_fsm_state10, ap_CS_iter0_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_iter1_fsm_state23) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state9)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state21)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state20)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15)))) then 
            test_V_ce0 <= ap_const_logic_1;
        else 
            test_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    test_V_d0_assign_proc : process(ap_CS_iter0_fsm_state22, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, tmp_3_1_fu_953_p1, tmp_3_fu_1063_p1, tmp_3_2_fu_1119_p1, ap_CS_iter0_fsm_state7, tmp_3_3_fu_1236_p1, ap_CS_iter0_fsm_state8, tmp_3_4_fu_1347_p1, ap_CS_iter0_fsm_state9, tmp_3_5_fu_1548_p1, ap_CS_iter0_fsm_state10, tmp_94_fu_2404_p1, tmp_114_1_fu_2732_p1, tmp_114_2_fu_2736_p1, tmp_114_3_fu_2740_p1, tmp_114_4_fu_2744_p1, tmp_114_5_fu_2748_p1, tmp_114_6_fu_2752_p1, tmp_114_7_fu_2756_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state22)) then 
            test_V_d0 <= tmp_114_7_fu_2756_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state21)) then 
            test_V_d0 <= tmp_114_6_fu_2752_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state20)) then 
            test_V_d0 <= tmp_114_5_fu_2748_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state19)) then 
            test_V_d0 <= tmp_114_4_fu_2744_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state18)) then 
            test_V_d0 <= tmp_114_3_fu_2740_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state17)) then 
            test_V_d0 <= tmp_114_2_fu_2736_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state16)) then 
            test_V_d0 <= tmp_114_1_fu_2732_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state15)) then 
            test_V_d0 <= tmp_94_fu_2404_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state10)) then 
            test_V_d0 <= tmp_3_5_fu_1548_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state9)) then 
            test_V_d0 <= tmp_3_4_fu_1347_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state8)) then 
            test_V_d0 <= tmp_3_3_fu_1236_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state7)) then 
            test_V_d0 <= tmp_3_2_fu_1119_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state6)) then 
            test_V_d0 <= tmp_3_fu_1063_p1;
        elsif ((ap_const_logic_1 = ap_CS_iter0_fsm_state5)) then 
            test_V_d0 <= tmp_3_1_fu_953_p1;
        else 
            test_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    test_V_we0_assign_proc : process(ap_CS_iter0_fsm_state22, OUT_r_BVALID, ap_sig_ioackin_OUT_r_WREADY, ap_CS_iter1_fsm_state27, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state7, ap_CS_iter0_fsm_state8, ap_CS_iter0_fsm_state9, ap_CS_iter0_fsm_state10)
    begin
        if (((not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state9)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state21)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state20)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16)) or (not(((ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_0) or ((ap_const_logic_0 = OUT_r_BVALID) and (ap_const_logic_1 = ap_CS_iter1_fsm_state27)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15)))) then 
            test_V_we0 <= ap_const_logic_1;
        else 
            test_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_100_fu_2252_p2 <= (tmp_99_fu_2208_p3 or sel_tmp8_fu_2238_p2);
    tmp_101_fu_1985_p1 <= p_Val2_81_3_fu_1979_p2(47 - 1 downto 0);
        tmp_102_3_cast_fu_1903_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addconv3_fu_1897_p2),34));

    tmp_102_fu_2294_p3 <= p_Val2_82_3_cast_fu_2279_p2(46 downto 46);
    tmp_103_fu_2338_p2 <= (tmp_102_fu_2294_p3 or sel_tmp11_fu_2324_p2);
    tmp_104_fu_2361_p1 <= p_Val2_81_4_fu_2355_p2(47 - 1 downto 0);
    tmp_105_fu_2474_p2 <= (tmp_106_fu_2430_p3 or sel_tmp13_fu_2460_p2);
    tmp_10646_1_cast_fu_2101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_81_1_cast_fu_2098_p1),53));
    tmp_10646_2_cast_fu_2184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_81_2_reg_3289),51));
    tmp_10646_3_cast_fu_2269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_81_3_cast_fu_2266_p1),52));
    tmp_10646_4_cast_fu_2408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_81_4_reg_3353),51));
    tmp_10646_5_cast_fu_2491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_81_5_cast_fu_2488_p1),53));
    tmp_10646_6_cast_fu_2572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_81_6_reg_3373),51));
    tmp_10646_7_cast_fu_2652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_81_7_reg_3383),51));
    tmp_106_fu_2430_p3 <= p_Val2_82_4_cast_fu_2416_p2(46 downto 46);
    tmp_107_fu_2558_p2 <= (tmp_110_fu_2514_p3 or sel_tmp15_fu_2544_p2);
    tmp_108_1_fu_2116_p4 <= p_Val2_82_1_cast_fu_2111_p2(46 downto 28);
    tmp_108_2_fu_2198_p4 <= p_Val2_82_2_cast_fu_2193_p2(46 downto 28);
    tmp_108_3_fu_2284_p4 <= p_Val2_82_3_cast_fu_2279_p2(46 downto 28);
    tmp_108_4_fu_2420_p4 <= p_Val2_82_4_cast_fu_2416_p2(46 downto 28);
    tmp_108_5_fu_2504_p4 <= p_Val2_82_5_cast_fu_2500_p2(46 downto 28);
    tmp_108_6_fu_2584_p4 <= p_Val2_82_6_cast_fu_2580_p2(46 downto 28);
    tmp_108_7_fu_2664_p4 <= p_Val2_82_7_cast_fu_2660_p2(46 downto 28);
    tmp_108_fu_2374_p1 <= p_Val2_81_5_fu_2368_p2(47 - 1 downto 0);
    tmp_109_fu_2638_p2 <= (tmp_113_fu_2594_p3 or sel_tmp17_fu_2624_p2);
    tmp_10_fu_816_p2 <= std_logic_vector(signed(tmp_cast_fu_804_p1) - signed(tmp_4_cast_fu_812_p1));
    tmp_110_1_fu_2134_p2 <= "1" when (signed(tmp_108_1_fu_2116_p4) > signed(ap_const_lv19_7FDF)) else "0";
    tmp_110_2_fu_2216_p2 <= "1" when (signed(tmp_108_2_fu_2198_p4) > signed(ap_const_lv19_7FDF)) else "0";
    tmp_110_3_fu_2302_p2 <= "1" when (signed(tmp_108_3_fu_2284_p4) > signed(ap_const_lv19_7FDF)) else "0";
    tmp_110_4_fu_2438_p2 <= "1" when (signed(tmp_108_4_fu_2420_p4) > signed(ap_const_lv19_7FDF)) else "0";
    tmp_110_5_fu_2522_p2 <= "1" when (signed(tmp_108_5_fu_2504_p4) > signed(ap_const_lv19_7FDF)) else "0";
    tmp_110_6_fu_2602_p2 <= "1" when (signed(tmp_108_6_fu_2584_p4) > signed(ap_const_lv19_7FDF)) else "0";
    tmp_110_7_fu_2682_p2 <= "1" when (signed(tmp_108_7_fu_2664_p4) > signed(ap_const_lv19_7FDF)) else "0";
    tmp_110_fu_2514_p3 <= p_Val2_82_5_cast_fu_2500_p2(46 downto 46);
    tmp_111_fu_2718_p2 <= (tmp_115_fu_2674_p3 or sel_tmp19_fu_2704_p2);
    tmp_112_fu_2387_p1 <= p_Val2_81_6_fu_2381_p2(47 - 1 downto 0);
    tmp_113_fu_2594_p3 <= p_Val2_82_6_cast_fu_2580_p2(46 downto 46);
        tmp_114_1_fu_2732_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_83_1_reg_3335),32));

        tmp_114_2_fu_2736_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_83_2_reg_3341),32));

        tmp_114_3_fu_2740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_83_3_reg_3347),32));

        tmp_114_4_fu_2744_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_83_4_reg_3403),32));

        tmp_114_5_fu_2748_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_83_5_reg_3409),32));

        tmp_114_6_fu_2752_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_83_6_reg_3415),32));

        tmp_114_7_fu_2756_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_83_7_reg_3421),32));

    tmp_114_fu_2400_p1 <= p_Val2_81_7_fu_2394_p2(47 - 1 downto 0);
    tmp_115_fu_2674_p3 <= p_Val2_82_7_cast_fu_2660_p2(46 downto 46);
    tmp_11_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_7_cast_fu_1068_p1),65));
    tmp_12_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_6_reg_2967),65));
    tmp_13_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_9_reg_3022),66));
    tmp_14_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_8_cast_fu_1123_p1),66));
    tmp_15_fu_1139_p4 <= p_Val2_10_fu_1133_p2(44 downto 13);
    tmp_16_fu_1149_p2 <= "1" when (signed(tmp_15_fu_1139_p4) < signed(ap_const_lv32_FFFFE000)) else "0";
    tmp_17_fu_1155_p2 <= "1" when (signed(tmp_15_fu_1139_p4) > signed(ap_const_lv32_1FF7)) else "0";
    tmp_18_fu_720_p1 <= cmdIn_V_q0;
    tmp_18_fu_720_p3 <= tmp_18_fu_720_p1(15 downto 15);
    tmp_19_fu_911_p0 <= cmdIn_V_q0;
        tmp_19_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_19_fu_911_p0),17));

    tmp_1_fu_851_p2 <= "1" when (signed(tmp_6_fu_839_p2) > signed(ap_const_lv32_C8000)) else "0";
        tmp_20_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(measured_V_q0),17));

        tmp_21_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_13_reg_2910),32));

    tmp_22_fu_977_p2 <= std_logic_vector(signed(tmp_21_fu_974_p1) + signed(integral_pos_V_1));
        tmp_23_cast_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_13_fu_919_p2),18));

    tmp_23_fu_983_p2 <= "1" when (signed(tmp_22_fu_977_p2) < signed(ap_const_lv32_FFF38000)) else "0";
    tmp_24_fu_989_p2 <= "1" when (signed(tmp_22_fu_977_p2) > signed(ap_const_lv32_C8000)) else "0";
    tmp_25_fu_1003_p2 <= (tmp_24_fu_989_p2 or tmp_23_fu_983_p2);
    tmp_26_fu_1009_p3 <= 
        p_tmp_1_cast_fu_995_p3 when (tmp_25_fu_1003_p2(0) = '1') else 
        tmp_22_fu_977_p2;
    tmp_27_fu_937_p2 <= std_logic_vector(signed(tmp_23_cast_fu_925_p1) - signed(tmp_28_cast_fu_933_p1));
    tmp_28_cast_fu_933_p0 <= last_error_pos_V_1;
        tmp_28_cast_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_cast_fu_933_p0),18));

    tmp_28_fu_1164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_17_cast_fu_1161_p1),65));
    tmp_29_fu_1168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_16_reg_3027),65));
    tmp_2_fu_871_p3 <= 
        p_tmp_6_cast_fu_857_p3 when (tmp_4_fu_865_p2(0) = '1') else 
        tmp_6_fu_839_p2;
    tmp_30_fu_1180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_19_fu_1171_p2),66));
    tmp_31_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_18_cast_fu_1177_p1),66));
    tmp_33_fu_1240_p2 <= "1" when (signed(tmp_32_reg_3072) < signed(ap_const_lv32_FFFFE000)) else "0";
    tmp_34_fu_1245_p2 <= "1" when (signed(tmp_32_reg_3072) > signed(ap_const_lv32_1FF7)) else "0";
    tmp_35_fu_728_p0 <= cmdIn_V_q0;
    tmp_35_fu_728_p1 <= tmp_35_fu_728_p0(13 - 1 downto 0);
    tmp_36_fu_1049_p0 <= cmdIn_V_q0;
        tmp_36_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_36_fu_1049_p0),17));

        tmp_37_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(measured_V_q0),17));

    tmp_38_fu_1204_p4 <= p_Val2_10_fu_1133_p2(28 downto 13);
    tmp_39_cast_fu_1214_p3 <= 
        ap_const_lv16_E000 when (tmp_16_fu_1149_p2(0) = '1') else 
        ap_const_lv16_1FF7;
    tmp_39_fu_822_p1 <= p_Val2_3_fu_798_p2(16 - 1 downto 0);
        tmp_3_1_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_2842),32));

        tmp_3_2_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_11_reg_2884),32));

        tmp_3_3_fu_1236_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_21_reg_2961),32));

        tmp_3_4_fu_1347_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cmdIn_V_load_4_reg_3062),32));

        tmp_3_5_fu_1548_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_2810),32));

    tmp_3_fu_1063_p0 <= cmdIn_V_q0;
        tmp_3_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_1063_p0),32));

    tmp_40_fu_1222_p2 <= (tmp_17_fu_1155_p2 or tmp_16_fu_1149_p2);
    tmp_41_fu_1250_p4 <= p_Val2_20_reg_3067(28 downto 13);
    tmp_42_cast_fu_1259_p3 <= 
        ap_const_lv16_E000 when (tmp_33_fu_1240_p2(0) = '1') else 
        ap_const_lv16_1FF7;
    tmp_42_fu_943_p1 <= p_Val2_13_fu_919_p2(16 - 1 downto 0);
    tmp_43_fu_1267_p2 <= (tmp_34_fu_1245_p2 or tmp_33_fu_1240_p2);
        tmp_44_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_28_fu_1294_p3),17));

        tmp_45_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_29_reg_2822),17));

        tmp_46_fu_1355_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_30_reg_3103),32));

        tmp_47_cast_fu_1358_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_30_reg_3103),18));

    tmp_47_fu_1361_p2 <= std_logic_vector(signed(tmp_46_fu_1355_p1) + signed(integral_rate_V_0));
    tmp_48_fu_1367_p2 <= "1" when (signed(tmp_47_fu_1361_p2) < signed(ap_const_lv32_FFF38000)) else "0";
    tmp_49_fu_1373_p2 <= "1" when (signed(tmp_47_fu_1361_p2) > signed(ap_const_lv32_C8000)) else "0";
    tmp_4_cast_fu_812_p0 <= last_error_pos_V_0;
        tmp_4_cast_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_cast_fu_812_p0),18));

    tmp_4_fu_865_p2 <= (tmp_s_fu_845_p2 or tmp_1_fu_851_p2);
    tmp_50_fu_1387_p2 <= (tmp_49_fu_1373_p2 or tmp_48_fu_1367_p2);
    tmp_51_fu_1393_p3 <= 
        p_tmp_3_cast_fu_1379_p3 when (tmp_50_fu_1387_p2(0) = '1') else 
        tmp_47_fu_1361_p2;
    tmp_52_cast_fu_1411_p0 <= last_error_rate_V_0;
        tmp_52_cast_fu_1411_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_52_cast_fu_1411_p0),18));

    tmp_52_fu_1415_p2 <= std_logic_vector(signed(tmp_47_cast_fu_1358_p1) - signed(tmp_52_cast_fu_1411_p1));
    tmp_53_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_33_cast_fu_1602_p1),65));
    tmp_54_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_34_reg_3187),65));
    tmp_55_fu_1621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_35_fu_1612_p2),66));
    tmp_56_fu_1625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_36_cast_fu_1618_p1),66));
    tmp_58_fu_1688_p2 <= "1" when (signed(tmp_57_reg_3212) < signed(ap_const_lv32_FFFFE000)) else "0";
    tmp_59_fu_1693_p2 <= "1" when (signed(tmp_57_reg_3212) > signed(ap_const_lv32_1FF7)) else "0";
    tmp_5_fu_732_p2 <= "1" when (tmp_35_fu_728_p1 = ap_const_lv13_0) else "0";
    tmp_60_fu_1698_p4 <= p_Val2_37_reg_3207(29 downto 13);
    tmp_61_fu_1727_p2 <= (tmp_58_fu_1688_p2 or sel_tmp2_fu_1721_p2);
    tmp_62_fu_1313_p1 <= p_Val2_30_fu_1307_p2(16 - 1 downto 0);
        tmp_63_fu_1317_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_27_fu_1288_p3),17));

        tmp_64_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_38_reg_3037),17));

        tmp_65_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_39_reg_3115),32));

    tmp_66_fu_1448_p2 <= std_logic_vector(signed(tmp_65_fu_1442_p1) + signed(integral_rate_V_1));
        tmp_67_cast_fu_1445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_39_reg_3115),18));

    tmp_67_fu_1454_p2 <= "1" when (signed(tmp_66_fu_1448_p2) < signed(ap_const_lv32_FFF38000)) else "0";
    tmp_68_fu_1460_p2 <= "1" when (signed(tmp_66_fu_1448_p2) > signed(ap_const_lv32_C8000)) else "0";
    tmp_69_fu_1474_p2 <= (tmp_68_fu_1460_p2 or tmp_67_fu_1454_p2);
    tmp_6_fu_839_p2 <= std_logic_vector(signed(tmp_fu_836_p1) + signed(integral_pos_V_0));
    tmp_70_fu_1480_p3 <= 
        p_tmp_4_cast_fu_1466_p3 when (tmp_69_fu_1474_p2(0) = '1') else 
        tmp_66_fu_1448_p2;
    tmp_71_fu_1502_p2 <= std_logic_vector(signed(tmp_67_cast_fu_1445_p1) - signed(tmp_72_cast_fu_1498_p1));
    tmp_72_cast_fu_1498_p0 <= last_error_rate_V_1;
        tmp_72_cast_fu_1498_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_72_cast_fu_1498_p0),18));

    tmp_72_fu_1648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_42_cast_fu_1645_p1),65));
    tmp_73_fu_1652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_43_reg_3197),65));
    tmp_74_fu_1664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_44_fu_1655_p2),66));
    tmp_75_fu_1668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_45_cast_fu_1661_p1),66));
    tmp_77_fu_1733_p2 <= "1" when (signed(tmp_76_reg_3223) < signed(ap_const_lv32_FFFFE000)) else "0";
    tmp_78_fu_1738_p2 <= "1" when (signed(tmp_76_reg_3223) > signed(ap_const_lv32_1FF7)) else "0";
    tmp_79_fu_1743_p4 <= p_Val2_46_reg_3218(29 downto 13);
    tmp_7_fu_760_p2 <= "0" when (p_1_fu_752_p3 = ap_const_lv3_0) else "1";
    tmp_80_fu_1772_p2 <= (tmp_77_fu_1733_p2 or sel_tmp7_fu_1766_p2);
    tmp_81_fu_1330_p1 <= p_Val2_39_fu_1324_p2(16 - 1 downto 0);
        tmp_82_fu_1334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_26_fu_1282_p3),17));

        tmp_83_fu_1338_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_47_reg_3083),17));

    tmp_85_cast_fu_1778_p3 <= 
        ap_const_lv19_78000 when (tmp_58_fu_1688_p2(0) = '1') else 
        ap_const_lv19_7FDC;
    tmp_85_fu_1786_p3 <= 
        tmp_85_cast_fu_1778_p3 when (tmp_61_fu_1727_p2(0) = '1') else 
        phitmp1_fu_1707_p3;
    tmp_86_fu_1814_p3 <= 
        tmp_87_cast_fu_1806_p3 when (tmp_80_fu_1772_p2(0) = '1') else 
        phitmp2_fu_1752_p3;
    tmp_87_cast_fu_1806_p3 <= 
        ap_const_lv19_78000 when (tmp_77_fu_1733_p2(0) = '1') else 
        ap_const_lv19_7FDC;
    tmp_87_fu_1992_p3 <= (p_Val2_49_reg_3002 & ap_const_lv30_0);
    tmp_88_fu_1946_p1 <= p_Val2_52_fu_1940_p2(47 - 1 downto 0);
        tmp_89_fu_2015_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_87_fu_1992_p3),47));

    tmp_8_fu_790_p0 <= cmdIn_V_q0;
        tmp_8_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_790_p0),17));

    tmp_90_cast9_fu_2011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_52_cast_fu_1989_p1),52));
        tmp_90_cast_fu_1861_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addconv_fu_1834_p2),34));

    tmp_90_fu_2030_p4 <= p_Val2_54_cast_fu_2025_p2(46 downto 28);
        tmp_91_cast_fu_1865_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_51_fu_1855_p2),34));

    tmp_91_fu_2040_p3 <= p_Val2_54_cast_fu_2025_p2(46 downto 46);
    tmp_92_fu_2048_p2 <= "1" when (signed(tmp_90_fu_2030_p4) > signed(ap_const_lv19_7FDF)) else "0";
        tmp_93_cast_cast1_fu_1999_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_87_fu_1992_p3),51));

        tmp_93_cast_cast2_fu_2003_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_87_fu_1992_p3),53));

        tmp_93_cast_cast_fu_2007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_87_fu_1992_p3),52));

    tmp_93_fu_2084_p2 <= (tmp_91_fu_2040_p3 or sel_tmp4_fu_2070_p2);
        tmp_94_fu_2404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_54_reg_3329),32));

    tmp_95_fu_1959_p1 <= p_Val2_81_1_fu_1953_p2(47 - 1 downto 0);
    tmp_96_fu_2126_p3 <= p_Val2_82_1_cast_fu_2111_p2(46 downto 46);
    tmp_97_fu_2170_p2 <= (tmp_96_fu_2126_p3 or sel_tmp3_fu_2156_p2);
    tmp_98_fu_1972_p1 <= p_Val2_81_2_fu_1966_p2(47 - 1 downto 0);
    tmp_99_fu_2208_p3 <= p_Val2_82_2_cast_fu_2193_p2(46 downto 46);
        tmp_9_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(measured_V_q0),17));

        tmp_cast_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_fu_798_p2),18));

        tmp_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_2853),32));

    tmp_s_fu_845_p2 <= "1" when (signed(tmp_6_fu_839_p2) < signed(ap_const_lv32_FFF38000)) else "0";
end behav;
