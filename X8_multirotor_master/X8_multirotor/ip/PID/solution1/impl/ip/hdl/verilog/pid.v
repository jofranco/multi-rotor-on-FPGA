// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pid,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=27,HLS_SYN_TPT=8,HLS_SYN_MEM=20,HLS_SYN_DSP=74,HLS_SYN_FF=4093,HLS_SYN_LUT=5821,HLS_VERSION=2018_2}" *)

module pid (
        ap_clk,
        ap_rst_n,
        m_axi_OUT_r_AWVALID,
        m_axi_OUT_r_AWREADY,
        m_axi_OUT_r_AWADDR,
        m_axi_OUT_r_AWID,
        m_axi_OUT_r_AWLEN,
        m_axi_OUT_r_AWSIZE,
        m_axi_OUT_r_AWBURST,
        m_axi_OUT_r_AWLOCK,
        m_axi_OUT_r_AWCACHE,
        m_axi_OUT_r_AWPROT,
        m_axi_OUT_r_AWQOS,
        m_axi_OUT_r_AWREGION,
        m_axi_OUT_r_AWUSER,
        m_axi_OUT_r_WVALID,
        m_axi_OUT_r_WREADY,
        m_axi_OUT_r_WDATA,
        m_axi_OUT_r_WSTRB,
        m_axi_OUT_r_WLAST,
        m_axi_OUT_r_WID,
        m_axi_OUT_r_WUSER,
        m_axi_OUT_r_ARVALID,
        m_axi_OUT_r_ARREADY,
        m_axi_OUT_r_ARADDR,
        m_axi_OUT_r_ARID,
        m_axi_OUT_r_ARLEN,
        m_axi_OUT_r_ARSIZE,
        m_axi_OUT_r_ARBURST,
        m_axi_OUT_r_ARLOCK,
        m_axi_OUT_r_ARCACHE,
        m_axi_OUT_r_ARPROT,
        m_axi_OUT_r_ARQOS,
        m_axi_OUT_r_ARREGION,
        m_axi_OUT_r_ARUSER,
        m_axi_OUT_r_RVALID,
        m_axi_OUT_r_RREADY,
        m_axi_OUT_r_RDATA,
        m_axi_OUT_r_RLAST,
        m_axi_OUT_r_RID,
        m_axi_OUT_r_RUSER,
        m_axi_OUT_r_RRESP,
        m_axi_OUT_r_BVALID,
        m_axi_OUT_r_BREADY,
        m_axi_OUT_r_BRESP,
        m_axi_OUT_r_BID,
        m_axi_OUT_r_BUSER,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt,
        s_axi_INPUT_AWVALID,
        s_axi_INPUT_AWREADY,
        s_axi_INPUT_AWADDR,
        s_axi_INPUT_WVALID,
        s_axi_INPUT_WREADY,
        s_axi_INPUT_WDATA,
        s_axi_INPUT_WSTRB,
        s_axi_INPUT_ARVALID,
        s_axi_INPUT_ARREADY,
        s_axi_INPUT_ARADDR,
        s_axi_INPUT_RVALID,
        s_axi_INPUT_RREADY,
        s_axi_INPUT_RDATA,
        s_axi_INPUT_RRESP,
        s_axi_INPUT_BVALID,
        s_axi_INPUT_BREADY,
        s_axi_INPUT_BRESP,
        s_axi_TEST_AWVALID,
        s_axi_TEST_AWREADY,
        s_axi_TEST_AWADDR,
        s_axi_TEST_WVALID,
        s_axi_TEST_WREADY,
        s_axi_TEST_WDATA,
        s_axi_TEST_WSTRB,
        s_axi_TEST_ARVALID,
        s_axi_TEST_ARREADY,
        s_axi_TEST_ARADDR,
        s_axi_TEST_RVALID,
        s_axi_TEST_RREADY,
        s_axi_TEST_RDATA,
        s_axi_TEST_RRESP,
        s_axi_TEST_BVALID,
        s_axi_TEST_BREADY,
        s_axi_TEST_BRESP
);

parameter    ap_ST_iter0_fsm_state1 = 8'd1;
parameter    ap_ST_iter0_fsm_state2 = 8'd2;
parameter    ap_ST_iter0_fsm_state3 = 8'd4;
parameter    ap_ST_iter0_fsm_state4 = 8'd8;
parameter    ap_ST_iter0_fsm_state5 = 8'd16;
parameter    ap_ST_iter0_fsm_state6 = 8'd32;
parameter    ap_ST_iter0_fsm_state7 = 8'd64;
parameter    ap_ST_iter0_fsm_state8 = 8'd128;
parameter    ap_ST_iter1_fsm_state9 = 9'd2;
parameter    ap_ST_iter1_fsm_state10 = 9'd4;
parameter    ap_ST_iter1_fsm_state11 = 9'd8;
parameter    ap_ST_iter1_fsm_state12 = 9'd16;
parameter    ap_ST_iter1_fsm_state13 = 9'd32;
parameter    ap_ST_iter1_fsm_state14 = 9'd64;
parameter    ap_ST_iter1_fsm_state15 = 9'd128;
parameter    ap_ST_iter1_fsm_state16 = 9'd256;
parameter    ap_ST_iter2_fsm_state17 = 9'd2;
parameter    ap_ST_iter2_fsm_state18 = 9'd4;
parameter    ap_ST_iter2_fsm_state19 = 9'd8;
parameter    ap_ST_iter2_fsm_state20 = 9'd16;
parameter    ap_ST_iter2_fsm_state21 = 9'd32;
parameter    ap_ST_iter2_fsm_state22 = 9'd64;
parameter    ap_ST_iter2_fsm_state23 = 9'd128;
parameter    ap_ST_iter2_fsm_state24 = 9'd256;
parameter    ap_ST_iter3_fsm_state25 = 5'd2;
parameter    ap_ST_iter3_fsm_state26 = 5'd4;
parameter    ap_ST_iter3_fsm_state27 = 5'd8;
parameter    ap_ST_iter3_fsm_state28 = 5'd16;
parameter    ap_ST_iter1_fsm_state0 = 9'd1;
parameter    ap_ST_iter2_fsm_state0 = 9'd1;
parameter    ap_ST_iter3_fsm_state0 = 5'd1;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_ADDR_WIDTH = 6;
parameter    C_S_AXI_TEST_DATA_WIDTH = 32;
parameter    C_S_AXI_TEST_ADDR_WIDTH = 15;
parameter    C_M_AXI_OUT_R_ID_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_OUT_R_DATA_WIDTH = 32;
parameter    C_M_AXI_OUT_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_TARGET_ADDR = 0;
parameter    C_M_AXI_OUT_R_USER_VALUE = 0;
parameter    C_M_AXI_OUT_R_PROT_VALUE = 0;
parameter    C_M_AXI_OUT_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_INPUT_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_TEST_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUT_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_OUT_r_AWVALID;
input   m_axi_OUT_r_AWREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_AWADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_AWID;
output  [7:0] m_axi_OUT_r_AWLEN;
output  [2:0] m_axi_OUT_r_AWSIZE;
output  [1:0] m_axi_OUT_r_AWBURST;
output  [1:0] m_axi_OUT_r_AWLOCK;
output  [3:0] m_axi_OUT_r_AWCACHE;
output  [2:0] m_axi_OUT_r_AWPROT;
output  [3:0] m_axi_OUT_r_AWQOS;
output  [3:0] m_axi_OUT_r_AWREGION;
output  [C_M_AXI_OUT_R_AWUSER_WIDTH - 1:0] m_axi_OUT_r_AWUSER;
output   m_axi_OUT_r_WVALID;
input   m_axi_OUT_r_WREADY;
output  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_WDATA;
output  [C_M_AXI_OUT_R_WSTRB_WIDTH - 1:0] m_axi_OUT_r_WSTRB;
output   m_axi_OUT_r_WLAST;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_WID;
output  [C_M_AXI_OUT_R_WUSER_WIDTH - 1:0] m_axi_OUT_r_WUSER;
output   m_axi_OUT_r_ARVALID;
input   m_axi_OUT_r_ARREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_ARADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_ARID;
output  [7:0] m_axi_OUT_r_ARLEN;
output  [2:0] m_axi_OUT_r_ARSIZE;
output  [1:0] m_axi_OUT_r_ARBURST;
output  [1:0] m_axi_OUT_r_ARLOCK;
output  [3:0] m_axi_OUT_r_ARCACHE;
output  [2:0] m_axi_OUT_r_ARPROT;
output  [3:0] m_axi_OUT_r_ARQOS;
output  [3:0] m_axi_OUT_r_ARREGION;
output  [C_M_AXI_OUT_R_ARUSER_WIDTH - 1:0] m_axi_OUT_r_ARUSER;
input   m_axi_OUT_r_RVALID;
output   m_axi_OUT_r_RREADY;
input  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_RDATA;
input   m_axi_OUT_r_RLAST;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_RID;
input  [C_M_AXI_OUT_R_RUSER_WIDTH - 1:0] m_axi_OUT_r_RUSER;
input  [1:0] m_axi_OUT_r_RRESP;
input   m_axi_OUT_r_BVALID;
output   m_axi_OUT_r_BREADY;
input  [1:0] m_axi_OUT_r_BRESP;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_BID;
input  [C_M_AXI_OUT_R_BUSER_WIDTH - 1:0] m_axi_OUT_r_BUSER;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;
input   s_axi_INPUT_AWVALID;
output   s_axi_INPUT_AWREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_AWADDR;
input   s_axi_INPUT_WVALID;
output   s_axi_INPUT_WREADY;
input  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_WDATA;
input  [C_S_AXI_INPUT_WSTRB_WIDTH - 1:0] s_axi_INPUT_WSTRB;
input   s_axi_INPUT_ARVALID;
output   s_axi_INPUT_ARREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_ARADDR;
output   s_axi_INPUT_RVALID;
input   s_axi_INPUT_RREADY;
output  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_RDATA;
output  [1:0] s_axi_INPUT_RRESP;
output   s_axi_INPUT_BVALID;
input   s_axi_INPUT_BREADY;
output  [1:0] s_axi_INPUT_BRESP;
input   s_axi_TEST_AWVALID;
output   s_axi_TEST_AWREADY;
input  [C_S_AXI_TEST_ADDR_WIDTH - 1:0] s_axi_TEST_AWADDR;
input   s_axi_TEST_WVALID;
output   s_axi_TEST_WREADY;
input  [C_S_AXI_TEST_DATA_WIDTH - 1:0] s_axi_TEST_WDATA;
input  [C_S_AXI_TEST_WSTRB_WIDTH - 1:0] s_axi_TEST_WSTRB;
input   s_axi_TEST_ARVALID;
output   s_axi_TEST_ARREADY;
input  [C_S_AXI_TEST_ADDR_WIDTH - 1:0] s_axi_TEST_ARADDR;
output   s_axi_TEST_RVALID;
input   s_axi_TEST_RREADY;
output  [C_S_AXI_TEST_DATA_WIDTH - 1:0] s_axi_TEST_RDATA;
output  [1:0] s_axi_TEST_RRESP;
output   s_axi_TEST_BVALID;
input   s_axi_TEST_BREADY;
output  [1:0] s_axi_TEST_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
reg   [7:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [8:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [8:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
reg   [4:0] ap_CS_iter3_fsm;
wire    ap_CS_iter3_fsm_state0;
reg    ap_ready;
wire    ap_CS_iter0_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state9;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_CS_iter1_fsm_state10;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_CS_iter1_fsm_state11;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_CS_iter1_fsm_state12;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_CS_iter1_fsm_state13;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_CS_iter1_fsm_state14;
reg    OUT_r_AWVALID;
wire    OUT_r_AWREADY;
reg    OUT_r_WVALID;
wire    OUT_r_WREADY;
reg   [15:0] OUT_r_WDATA;
wire    OUT_r_ARREADY;
wire    OUT_r_RVALID;
wire   [15:0] OUT_r_RDATA;
wire    OUT_r_RLAST;
wire   [0:0] OUT_r_RID;
wire   [0:0] OUT_r_RUSER;
wire   [1:0] OUT_r_RRESP;
wire    OUT_r_BVALID;
reg    OUT_r_BREADY;
wire   [1:0] OUT_r_BRESP;
wire   [0:0] OUT_r_BID;
wire   [0:0] OUT_r_BUSER;
wire    ap_block_state15_pp0_stage6_iter1;
reg    ap_sig_ioackin_OUT_r_AWREADY;
wire    ap_CS_iter1_fsm_state15;
wire    ap_block_state16_pp0_stage7_iter1;
reg    ap_sig_ioackin_OUT_r_WREADY;
wire    ap_CS_iter1_fsm_state16;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_CS_iter2_fsm_state17;
wire    ap_block_state18_pp0_stage1_iter2;
wire    ap_CS_iter2_fsm_state18;
wire    ap_block_state19_pp0_stage2_iter2;
wire    ap_CS_iter2_fsm_state19;
wire    ap_block_state20_pp0_stage3_iter2;
wire    ap_CS_iter2_fsm_state20;
wire    ap_block_state21_pp0_stage4_iter2;
wire    ap_CS_iter2_fsm_state21;
wire    ap_block_state22_pp0_stage5_iter2;
wire    ap_CS_iter2_fsm_state22;
wire    ap_block_state23_pp0_stage6_iter2;
wire    ap_CS_iter2_fsm_state23;
wire    ap_block_state24_pp0_stage7_iter2;
wire    ap_CS_iter2_fsm_state24;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_state26_pp0_stage1_iter3;
wire    ap_block_state27_pp0_stage2_iter3;
reg    ap_block_state28_pp0_stage3_iter3;
wire    ap_CS_iter3_fsm_state28;
reg   [2:0] cmdIn_V_address0;
reg    cmdIn_V_ce0;
wire   [15:0] cmdIn_V_q0;
reg   [2:0] measured_V_address0;
reg    measured_V_ce0;
wire   [15:0] measured_V_q0;
reg   [2:0] kp_V_address0;
reg    kp_V_ce0;
wire   [31:0] kp_V_q0;
reg   [1:0] kd_V_address0;
reg    kd_V_ce0;
wire   [31:0] kd_V_q0;
reg   [1:0] ki_V_address0;
reg    ki_V_ce0;
wire   [31:0] ki_V_q0;
reg   [31:0] integral_pos_V_0;
reg   [15:0] last_error_pos_V_0;
reg   [31:0] integral_pos_V_1;
reg   [15:0] last_error_pos_V_1;
reg   [31:0] integral_rate_V_0;
reg   [15:0] last_error_rate_V_0;
reg   [31:0] integral_rate_V_1;
reg   [15:0] last_error_rate_V_1;
reg    OUT_r_blk_n_AW;
reg    OUT_r_blk_n_W;
reg    OUT_r_blk_n_B;
reg   [31:0] reg_544;
wire    ap_CS_iter0_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
reg   [0:0] tmp_6_reg_2578;
reg   [31:0] reg_544_pp0_iter0_reg;
wire    ap_CS_iter0_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_CS_iter0_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_CS_iter0_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
reg   [31:0] reg_548;
reg   [31:0] reg_548_pp0_iter0_reg;
reg   [31:0] reg_552;
reg   [31:0] reg_552_pp0_iter0_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_CS_iter0_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire   [0:0] tmp_6_fu_606_p2;
reg   [15:0] p_Val2_54_reg_2585;
reg   [31:0] kp_V_load_3_reg_2590;
reg   [31:0] kp_V_load_3_reg_2590_pp0_iter0_reg;
reg   [31:0] ki_V_load_2_reg_2595;
reg   [31:0] ki_V_load_2_reg_2595_pp0_iter0_reg;
reg   [31:0] kd_V_load_2_reg_2600;
reg   [31:0] kd_V_load_2_reg_2600_pp0_iter0_reg;
reg  signed [15:0] p_Val2_1_reg_2605;
wire  signed [19:0] p_Val2_5_fu_650_p3;
reg  signed [19:0] p_Val2_5_reg_2615;
wire   [20:0] p_Val2_8_fu_678_p2;
reg   [20:0] p_Val2_8_reg_2621;
reg  signed [15:0] p_Val2_46_reg_2646;
wire  signed [31:0] tmp_3_fu_733_p3;
reg  signed [31:0] tmp_3_reg_2656;
wire   [50:0] p_Val2_9_fu_754_p2;
reg   [50:0] p_Val2_9_reg_2661;
wire   [51:0] p_Val2_4_fu_767_p2;
reg   [51:0] p_Val2_4_reg_2666;
wire  signed [19:0] p_Val2_49_fu_787_p3;
reg  signed [19:0] p_Val2_49_reg_2671;
wire   [20:0] p_Val2_7_fu_815_p2;
reg   [20:0] p_Val2_7_reg_2677;
reg   [31:0] ki_V_load_1_reg_2682;
reg  signed [15:0] p_Val2_52_reg_2712;
wire   [63:0] p_Val2_33_fu_838_p2;
reg   [63:0] p_Val2_33_reg_2717;
wire  signed [31:0] tmp_22_fu_883_p3;
reg  signed [31:0] tmp_22_reg_2722;
wire   [50:0] p_Val2_10_fu_904_p2;
reg   [50:0] p_Val2_10_reg_2727;
wire   [51:0] p_Val2_13_fu_917_p2;
reg   [51:0] p_Val2_13_reg_2732;
wire   [16:0] r_V_fu_931_p2;
reg   [16:0] r_V_reg_2737;
reg   [15:0] p_Val2_61_reg_2752;
reg   [15:0] p_Val2_61_reg_2752_pp0_iter0_reg;
wire   [64:0] p_Val2_43_fu_947_p2;
reg   [64:0] p_Val2_43_reg_2757;
wire   [63:0] p_Val2_11_fu_959_p2;
reg   [63:0] p_Val2_11_reg_2762;
reg   [15:0] phitmp1_reg_2767;
reg   [15:0] p_Val2_57_reg_2772;
wire   [65:0] p_Val2_15_fu_1051_p2;
reg   [65:0] p_Val2_15_reg_2787;
wire    ap_CS_iter0_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
reg   [31:0] tmp_28_reg_2792;
wire   [15:0] tmp_37_fu_1085_p3;
reg   [15:0] tmp_37_reg_2798;
reg   [15:0] p_Val2_60_reg_2803;
reg   [31:0] kp_V_load_5_reg_2808;
reg   [31:0] kp_V_load_5_reg_2808_pp0_iter0_reg;
wire   [16:0] p_Val2_23_fu_1160_p2;
reg   [16:0] p_Val2_23_reg_2813;
wire   [15:0] tmp_67_fu_1166_p1;
reg   [15:0] tmp_67_reg_2818;
wire   [16:0] p_Val2_34_fu_1177_p2;
reg   [16:0] p_Val2_34_reg_2823;
wire   [15:0] tmp_72_fu_1183_p1;
reg   [15:0] tmp_72_reg_2828;
wire   [16:0] r_V_1_fu_1194_p2;
reg   [16:0] r_V_1_reg_2833;
wire  signed [31:0] tmp_44_fu_1251_p3;
reg  signed [31:0] tmp_44_reg_2838;
wire   [20:0] p_Val2_26_fu_1281_p2;
reg   [20:0] p_Val2_26_reg_2843;
wire   [50:0] p_Val2_28_fu_1294_p2;
reg   [50:0] p_Val2_28_reg_2848;
wire  signed [31:0] tmp_61_fu_1356_p3;
reg  signed [31:0] tmp_61_reg_2853;
wire   [20:0] p_Val2_37_fu_1386_p2;
reg   [20:0] p_Val2_37_reg_2858;
wire   [50:0] p_Val2_38_fu_1400_p2;
reg   [50:0] p_Val2_38_reg_2863;
reg   [18:0] tmp_81_reg_2868;
wire   [63:0] p_Val2_29_fu_1439_p2;
reg   [63:0] p_Val2_29_reg_2873;
wire   [51:0] p_Val2_31_fu_1451_p2;
reg   [51:0] p_Val2_31_reg_2878;
wire   [63:0] p_Val2_39_fu_1464_p2;
reg   [63:0] p_Val2_39_reg_2883;
wire   [64:0] p_Val2_30_fu_1480_p2;
reg   [64:0] p_Val2_30_reg_2888;
wire   [64:0] p_Val2_40_fu_1496_p2;
reg   [64:0] p_Val2_40_reg_2893;
wire   [51:0] p_Val2_41_fu_1509_p2;
reg   [51:0] p_Val2_41_reg_2898;
wire   [18:0] tmp_76_fu_1645_p3;
reg   [18:0] tmp_76_reg_2903;
wire   [18:0] tmp_79_fu_1671_p3;
reg   [18:0] tmp_79_reg_2908;
wire  signed [34:0] p_shl_fu_1707_p3;
reg  signed [34:0] p_shl_reg_2913;
wire  signed [36:0] p_shl_cast1_fu_1714_p1;
reg  signed [36:0] p_shl_cast1_reg_2918;
wire  signed [36:0] tmp_82_cast_fu_1718_p1;
reg  signed [36:0] tmp_82_cast_reg_2926;
wire   [36:0] r_V_2_fu_1722_p2;
reg   [36:0] r_V_2_reg_2931;
wire  signed [36:0] sum_cast_fu_1734_p1;
reg  signed [36:0] sum_cast_reg_2936;
wire   [36:0] r_V_2_1_fu_1738_p2;
reg   [36:0] r_V_2_1_reg_2942;
wire   [36:0] addconv2_fu_1744_p2;
reg   [36:0] addconv2_reg_2947;
wire   [35:0] addconv3_fu_1750_p2;
reg   [35:0] addconv3_reg_2952;
wire   [49:0] p_Val2_64_fu_1772_p2;
reg   [49:0] p_Val2_64_reg_2957;
wire   [49:0] p_Val2_79_1_fu_1781_p2;
reg   [49:0] p_Val2_79_1_reg_2963;
wire   [49:0] p_Val2_79_2_fu_1790_p2;
reg   [49:0] p_Val2_79_2_reg_2969;
wire   [36:0] r_V_2_3_fu_1799_p2;
reg   [36:0] r_V_2_3_reg_2975;
wire   [36:0] r_V_2_4_fu_1804_p2;
reg   [36:0] r_V_2_4_reg_2980;
wire   [36:0] r_V_2_5_fu_1808_p2;
reg   [36:0] r_V_2_5_reg_2985;
wire   [36:0] addconv4_fu_1813_p2;
reg   [36:0] addconv4_reg_2990;
wire   [36:0] r_V_2_7_fu_1817_p2;
reg   [36:0] r_V_2_7_reg_2995;
wire  signed [51:0] tmp_85_cast_cast_fu_1829_p1;
reg  signed [51:0] tmp_85_cast_cast_reg_3000;
reg  signed [51:0] tmp_85_cast_cast_reg_3000_pp0_iter1_reg;
wire  signed [49:0] tmp_80_fu_1836_p1;
reg  signed [49:0] tmp_80_reg_3009;
reg  signed [49:0] tmp_80_reg_3009_pp0_iter1_reg;
wire   [15:0] p_Val2_66_fu_1911_p3;
reg   [15:0] p_Val2_66_reg_3018;
wire   [15:0] p_Val2_81_1_fu_1993_p3;
reg   [15:0] p_Val2_81_1_reg_3023;
reg   [15:0] p_Val2_81_1_reg_3023_pp0_iter1_reg;
wire   [15:0] p_Val2_81_2_fu_2075_p3;
reg   [15:0] p_Val2_81_2_reg_3028;
reg   [15:0] p_Val2_81_2_reg_3028_pp0_iter1_reg;
wire   [49:0] p_Val2_79_3_fu_2086_p2;
reg   [49:0] p_Val2_79_3_reg_3033;
wire   [49:0] p_Val2_79_4_fu_2095_p2;
reg   [49:0] p_Val2_79_4_reg_3039;
wire   [49:0] p_Val2_79_5_fu_2104_p2;
reg   [49:0] p_Val2_79_5_reg_3045;
wire   [15:0] p_Val2_81_3_fu_2182_p3;
reg   [15:0] p_Val2_81_3_reg_3051;
wire   [15:0] p_Val2_81_4_fu_2262_p3;
reg   [15:0] p_Val2_81_4_reg_3056;
wire   [15:0] p_Val2_81_5_fu_2342_p3;
reg   [15:0] p_Val2_81_5_reg_3061;
wire   [49:0] p_Val2_79_6_fu_2353_p2;
reg   [49:0] p_Val2_79_6_reg_3066;
wire   [49:0] p_Val2_79_7_fu_2362_p2;
reg   [49:0] p_Val2_79_7_reg_3072;
wire   [15:0] p_Val2_81_6_fu_2440_p3;
reg   [15:0] p_Val2_81_6_reg_3078;
wire   [15:0] p_Val2_81_7_fu_2520_p3;
reg   [15:0] p_Val2_81_7_reg_3083;
reg   [15:0] ap_phi_mux_p_Val2_17_phi_fu_515_p4;
reg   [15:0] ap_phi_mux_p_Val2_18_phi_fu_526_p4;
wire   [15:0] tmp_55_fu_1126_p3;
reg   [15:0] ap_phi_mux_p_Val2_19_phi_fu_537_p4;
reg    ap_reg_ioackin_OUT_r_AWREADY;
reg    ap_reg_ioackin_OUT_r_WREADY;
wire   [15:0] tmp_35_fu_684_p1;
wire   [15:0] tmp_38_fu_821_p1;
wire   [12:0] tmp_32_fu_574_p1;
wire   [2:0] ret_V_fu_556_p4;
wire   [0:0] tmp_4_fu_578_p2;
wire   [2:0] ret_V_1_fu_584_p2;
wire   [0:0] tmp_16_fu_566_p3;
wire   [2:0] p_s_fu_590_p3;
wire   [2:0] p_1_fu_598_p3;
wire  signed [15:0] tmp_7_fu_636_p0;
wire  signed [16:0] tmp_7_fu_636_p1;
wire  signed [16:0] tmp_8_fu_640_p1;
wire   [16:0] p_Val2_3_fu_644_p2;
wire   [18:0] tmp_9_fu_666_p3;
wire  signed [20:0] p_Val2_5_cast_fu_658_p1;
wire  signed [20:0] tmp_9_cast_fu_674_p1;
wire  signed [31:0] p_Val2_5_cast1_fu_694_p1;
wire   [31:0] p_Val2_6_fu_701_p2;
wire   [0:0] tmp_1_fu_707_p2;
wire   [0:0] tmp_2_fu_713_p2;
wire   [0:0] tmp_fu_727_p2;
wire   [31:0] p_Val2_6_cast_fu_719_p3;
wire  signed [31:0] p_Val2_9_fu_754_p0;
wire  signed [19:0] p_Val2_9_fu_754_p1;
wire  signed [31:0] p_Val2_4_fu_767_p0;
wire  signed [20:0] p_Val2_4_fu_767_p1;
wire  signed [15:0] tmp_17_fu_773_p0;
wire  signed [16:0] tmp_17_fu_773_p1;
wire  signed [16:0] tmp_18_fu_777_p1;
wire   [16:0] p_Val2_48_fu_781_p2;
wire   [18:0] tmp_23_fu_803_p3;
wire  signed [20:0] p_Val2_49_cast_fu_795_p1;
wire  signed [20:0] tmp_27_cast_fu_811_p1;
wire  signed [31:0] p_Val2_33_fu_838_p0;
wire  signed [31:0] p_Val2_33_fu_838_p1;
wire  signed [31:0] p_Val2_49_cast1_fu_844_p1;
wire   [31:0] p_Val2_s_12_fu_851_p2;
wire   [0:0] tmp_19_fu_857_p2;
wire   [0:0] tmp_20_fu_863_p2;
wire   [0:0] tmp_21_fu_877_p2;
wire   [31:0] p_Val2_cast_fu_869_p3;
wire  signed [31:0] p_Val2_10_fu_904_p0;
wire  signed [19:0] p_Val2_10_fu_904_p1;
wire  signed [31:0] p_Val2_13_fu_917_p0;
wire  signed [20:0] p_Val2_13_fu_917_p1;
wire  signed [15:0] tmp_33_fu_923_p0;
wire  signed [16:0] tmp_33_fu_923_p1;
wire  signed [16:0] tmp_34_fu_927_p1;
wire  signed [63:0] p_Val2_9_cast_fu_937_p1;
wire   [64:0] tmp_5_fu_944_p1;
wire   [64:0] tmp_s_fu_940_p1;
wire  signed [31:0] p_Val2_11_fu_959_p0;
wire  signed [31:0] p_Val2_11_fu_959_p1;
wire  signed [31:0] p_Val2_16_fu_972_p0;
wire  signed [16:0] p_Val2_16_fu_972_p1;
wire   [48:0] p_Val2_16_fu_972_p2;
wire   [65:0] tmp_10_fu_988_p1;
wire   [65:0] tmp_11_fu_991_p1;
wire   [65:0] p_Val2_45_fu_994_p2;
wire   [31:0] tmp_12_fu_1000_p4;
wire   [0:0] tmp_13_fu_1010_p2;
wire   [0:0] tmp_14_fu_1016_p2;
wire  signed [63:0] p_Val2_10_cast_fu_1028_p1;
wire   [64:0] tmp_25_fu_1035_p1;
wire   [64:0] tmp_24_fu_1031_p1;
wire   [64:0] p_Val2_12_fu_1038_p2;
wire   [65:0] tmp_26_fu_1044_p1;
wire   [65:0] tmp_27_fu_1048_p1;
wire   [0:0] tmp_15_fu_1022_p2;
wire   [15:0] tmp_35_cast_fu_1067_p3;
wire   [15:0] tmp_36_fu_1075_p4;
wire   [0:0] tmp_29_fu_1093_p2;
wire   [0:0] tmp_30_fu_1098_p2;
wire   [0:0] tmp_31_fu_1103_p2;
wire   [15:0] tmp_38_cast_fu_1109_p3;
wire   [15:0] tmp_50_fu_1117_p4;
wire   [15:0] p_Val2_22_fu_1147_p3;
wire  signed [16:0] tmp_39_fu_1153_p1;
wire  signed [16:0] tmp_40_fu_1157_p1;
wire   [15:0] p_Val2_21_fu_1141_p3;
wire  signed [16:0] tmp_56_fu_1170_p1;
wire  signed [16:0] tmp_57_fu_1174_p1;
wire   [15:0] p_Val2_20_fu_1135_p3;
wire  signed [16:0] tmp_73_fu_1187_p1;
wire  signed [16:0] tmp_74_fu_1191_p1;
wire  signed [19:0] p_Val2_24_fu_1200_p3;
wire  signed [31:0] p_Val2_24_cast1_fu_1207_p1;
wire   [31:0] p_Val2_25_fu_1219_p2;
wire   [0:0] tmp_41_fu_1225_p2;
wire   [0:0] tmp_42_fu_1231_p2;
wire   [0:0] tmp_43_fu_1245_p2;
wire   [31:0] p_Val2_1_cast_fu_1237_p3;
wire   [18:0] tmp_45_fu_1269_p3;
wire  signed [20:0] p_Val2_24_cast_fu_1211_p1;
wire  signed [20:0] tmp_51_cast_fu_1277_p1;
wire  signed [19:0] p_Val2_28_fu_1294_p0;
wire  signed [31:0] p_Val2_28_fu_1294_p1;
wire  signed [19:0] p_Val2_35_fu_1305_p3;
wire  signed [31:0] p_Val2_35_cast1_fu_1312_p1;
wire   [31:0] p_Val2_36_fu_1324_p2;
wire   [0:0] tmp_58_fu_1330_p2;
wire   [0:0] tmp_59_fu_1336_p2;
wire   [0:0] tmp_60_fu_1350_p2;
wire   [31:0] p_Val2_2_cast_fu_1342_p3;
wire   [18:0] tmp_62_fu_1374_p3;
wire  signed [20:0] p_Val2_35_cast_fu_1316_p1;
wire  signed [20:0] tmp_68_cast_fu_1382_p1;
wire  signed [19:0] p_Val2_38_fu_1400_p0;
wire  signed [31:0] p_Val2_38_fu_1400_p1;
wire  signed [16:0] p_Val2_44_fu_1417_p0;
wire  signed [31:0] p_Val2_44_fu_1417_p1;
wire   [48:0] p_Val2_44_fu_1417_p2;
wire  signed [31:0] p_Val2_29_fu_1439_p0;
wire  signed [31:0] p_Val2_29_fu_1439_p1;
wire  signed [20:0] p_Val2_31_fu_1451_p0;
wire  signed [31:0] p_Val2_31_fu_1451_p1;
wire  signed [31:0] p_Val2_39_fu_1464_p0;
wire  signed [31:0] p_Val2_39_fu_1464_p1;
wire  signed [63:0] p_Val2_28_cast_fu_1470_p1;
wire   [64:0] tmp_46_fu_1473_p1;
wire   [64:0] tmp_47_fu_1477_p1;
wire  signed [63:0] p_Val2_38_cast_fu_1486_p1;
wire   [64:0] tmp_63_fu_1489_p1;
wire   [64:0] tmp_64_fu_1493_p1;
wire  signed [20:0] p_Val2_41_fu_1509_p0;
wire  signed [31:0] p_Val2_41_fu_1509_p1;
wire  signed [63:0] p_Val2_31_cast_fu_1515_p1;
wire   [65:0] tmp_49_fu_1521_p1;
wire   [65:0] tmp_48_fu_1518_p1;
wire   [65:0] p_Val2_32_fu_1525_p2;
wire   [31:0] tmp_51_fu_1531_p4;
wire   [0:0] tmp_52_fu_1541_p2;
wire   [0:0] tmp_53_fu_1547_p2;
wire   [0:0] sel_tmp_fu_1553_p2;
wire   [0:0] sel_tmp2_fu_1559_p2;
wire  signed [63:0] p_Val2_41_cast_fu_1571_p1;
wire   [65:0] tmp_66_fu_1577_p1;
wire   [65:0] tmp_65_fu_1574_p1;
wire   [65:0] p_Val2_42_fu_1581_p2;
wire   [31:0] tmp_68_fu_1587_p4;
wire   [0:0] tmp_69_fu_1597_p2;
wire   [0:0] tmp_70_fu_1603_p2;
wire   [0:0] sel_tmp6_fu_1609_p2;
wire   [0:0] sel_tmp7_fu_1615_p2;
wire   [0:0] tmp_54_fu_1565_p2;
wire   [18:0] tmp_75_cast_fu_1627_p3;
wire   [18:0] tmp_75_fu_1635_p4;
wire   [0:0] tmp_71_fu_1621_p2;
wire   [18:0] tmp_81_cast_fu_1653_p3;
wire   [18:0] tmp_77_fu_1661_p4;
wire   [34:0] p_shl1_fu_1679_p3;
wire   [34:0] p_Val2_62_fu_1690_p3;
wire  signed [35:0] p_Val2_62_cast_fu_1697_p1;
wire  signed [35:0] p_shl1_cast_fu_1686_p1;
wire   [35:0] addconv_fu_1701_p2;
wire   [35:0] sum_fu_1728_p2;
wire  signed [35:0] p_shl_cast_fu_1756_p1;
wire   [35:0] p_Val2_63_fu_1759_p2;
wire  signed [36:0] p_Val2_64_fu_1772_p1;
wire  signed [36:0] p_Val2_79_1_fu_1781_p1;
wire  signed [36:0] p_Val2_79_2_fu_1790_p1;
wire  signed [36:0] tmp_110_3_cast_fu_1796_p1;
wire  signed [36:0] tmp_83_cast_fu_1765_p1;
wire  signed [48:0] tmp_78_fu_1822_p3;
wire   [51:0] tmp_79_cast_fu_1833_p1;
wire   [49:0] p_Val2_66_cast_fu_1846_p2;
wire   [18:0] tmp_82_fu_1851_p4;
wire   [51:0] p_Val2_65_fu_1840_p2;
wire   [0:0] tmp_83_fu_1861_p3;
wire   [0:0] tmp_84_fu_1869_p2;
wire   [0:0] sel_tmp1_fu_1885_p2;
wire   [0:0] sel_tmp4_fu_1891_p2;
wire   [0:0] tmp_85_fu_1905_p2;
wire   [15:0] sel_tmp5_cast_fu_1897_p3;
wire   [15:0] phitmp7_fu_1875_p4;
wire   [51:0] tmp_11444_1_cast_fu_1919_p1;
wire   [49:0] p_Val2_80_1_cast_fu_1928_p2;
wire   [18:0] tmp_116_1_fu_1933_p4;
wire   [51:0] p_Val2_80_1_fu_1922_p2;
wire   [0:0] tmp_86_fu_1943_p3;
wire   [0:0] tmp_118_1_fu_1951_p2;
wire   [0:0] sel_tmp9_fu_1967_p2;
wire   [0:0] sel_tmp3_fu_1973_p2;
wire   [0:0] tmp_87_fu_1987_p2;
wire   [15:0] sel_tmp8_cast_fu_1979_p3;
wire   [15:0] phitmp47_1_fu_1957_p4;
wire   [51:0] tmp_11444_2_cast_fu_2001_p1;
wire   [49:0] p_Val2_80_2_cast_fu_2010_p2;
wire   [18:0] tmp_116_2_fu_2015_p4;
wire   [51:0] p_Val2_80_2_fu_2004_p2;
wire   [0:0] tmp_88_fu_2025_p3;
wire   [0:0] tmp_118_2_fu_2033_p2;
wire   [0:0] sel_tmp5_fu_2049_p2;
wire   [0:0] sel_tmp8_fu_2055_p2;
wire   [0:0] tmp_89_fu_2069_p2;
wire   [15:0] sel_tmp12_cast_fu_2061_p3;
wire   [15:0] phitmp47_2_fu_2039_p4;
wire  signed [36:0] p_Val2_79_3_fu_2086_p1;
wire  signed [36:0] p_Val2_79_4_fu_2095_p1;
wire  signed [36:0] p_Val2_79_5_fu_2104_p1;
wire   [51:0] tmp_11444_3_cast_fu_2110_p1;
wire   [49:0] p_Val2_80_3_cast_fu_2118_p2;
wire   [18:0] tmp_116_3_fu_2122_p4;
wire   [51:0] p_Val2_80_3_fu_2113_p2;
wire   [0:0] tmp_90_fu_2132_p3;
wire   [0:0] tmp_118_3_fu_2140_p2;
wire   [0:0] sel_tmp10_fu_2156_p2;
wire   [0:0] sel_tmp11_fu_2162_p2;
wire   [0:0] tmp_91_fu_2176_p2;
wire   [15:0] sel_tmp15_cast_fu_2168_p3;
wire   [15:0] phitmp47_3_fu_2146_p4;
wire   [51:0] tmp_11444_4_cast_fu_2190_p1;
wire   [49:0] p_Val2_80_4_cast_fu_2198_p2;
wire   [18:0] tmp_116_4_fu_2202_p4;
wire   [51:0] p_Val2_80_4_fu_2193_p2;
wire   [0:0] tmp_96_fu_2212_p3;
wire   [0:0] tmp_118_4_fu_2220_p2;
wire   [0:0] sel_tmp12_fu_2236_p2;
wire   [0:0] sel_tmp13_fu_2242_p2;
wire   [0:0] tmp_92_fu_2256_p2;
wire   [15:0] sel_tmp18_cast_fu_2248_p3;
wire   [15:0] phitmp47_4_fu_2226_p4;
wire   [51:0] tmp_11444_5_cast_fu_2270_p1;
wire   [49:0] p_Val2_80_5_cast_fu_2278_p2;
wire   [18:0] tmp_116_5_fu_2282_p4;
wire   [51:0] p_Val2_80_5_fu_2273_p2;
wire   [0:0] tmp_97_fu_2292_p3;
wire   [0:0] tmp_118_5_fu_2300_p2;
wire   [0:0] sel_tmp14_fu_2316_p2;
wire   [0:0] sel_tmp15_fu_2322_p2;
wire   [0:0] tmp_93_fu_2336_p2;
wire   [15:0] sel_tmp21_cast_fu_2328_p3;
wire   [15:0] phitmp47_5_fu_2306_p4;
wire  signed [36:0] p_Val2_79_6_fu_2353_p1;
wire  signed [36:0] p_Val2_79_7_fu_2362_p1;
wire   [51:0] tmp_11444_6_cast_fu_2368_p1;
wire   [49:0] p_Val2_80_6_cast_fu_2376_p2;
wire   [18:0] tmp_116_6_fu_2380_p4;
wire   [51:0] p_Val2_80_6_fu_2371_p2;
wire   [0:0] tmp_98_fu_2390_p3;
wire   [0:0] tmp_118_6_fu_2398_p2;
wire   [0:0] sel_tmp16_fu_2414_p2;
wire   [0:0] sel_tmp17_fu_2420_p2;
wire   [0:0] tmp_94_fu_2434_p2;
wire   [15:0] sel_tmp24_cast_fu_2426_p3;
wire   [15:0] phitmp47_6_fu_2404_p4;
wire   [51:0] tmp_11444_7_cast_fu_2448_p1;
wire   [49:0] p_Val2_80_7_cast_fu_2456_p2;
wire   [18:0] tmp_116_7_fu_2460_p4;
wire   [51:0] p_Val2_80_7_fu_2451_p2;
wire   [0:0] tmp_99_fu_2470_p3;
wire   [0:0] tmp_118_7_fu_2478_p2;
wire   [0:0] sel_tmp18_fu_2494_p2;
wire   [0:0] sel_tmp19_fu_2500_p2;
wire   [0:0] tmp_95_fu_2514_p2;
wire   [15:0] sel_tmp27_cast_fu_2506_p3;
wire   [15:0] phitmp47_7_fu_2484_p4;
reg   [7:0] ap_NS_iter0_fsm;
reg   [8:0] ap_NS_iter1_fsm;
reg   [8:0] ap_NS_iter2_fsm;
reg   [4:0] ap_NS_iter3_fsm;
reg    ap_condition_2210;
reg    ap_condition_2213;
reg    ap_condition_762;
reg    ap_condition_262;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 8'd1;
#0 ap_CS_iter1_fsm = 9'd1;
#0 ap_CS_iter2_fsm = 9'd1;
#0 ap_CS_iter3_fsm = 5'd1;
#0 integral_pos_V_0 = 32'd0;
#0 last_error_pos_V_0 = 16'd0;
#0 integral_pos_V_1 = 32'd0;
#0 last_error_pos_V_1 = 16'd0;
#0 integral_rate_V_0 = 32'd0;
#0 last_error_rate_V_0 = 16'd0;
#0 integral_rate_V_1 = 32'd0;
#0 last_error_rate_V_1 = 16'd0;
#0 ap_reg_ioackin_OUT_r_AWREADY = 1'b0;
#0 ap_reg_ioackin_OUT_r_WREADY = 1'b0;
end

pid_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
pid_CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .kp_V_address0(kp_V_address0),
    .kp_V_ce0(kp_V_ce0),
    .kp_V_q0(kp_V_q0),
    .kd_V_address0(kd_V_address0),
    .kd_V_ce0(kd_V_ce0),
    .kd_V_q0(kd_V_q0),
    .ki_V_address0(ki_V_address0),
    .ki_V_ce0(ki_V_ce0),
    .ki_V_q0(ki_V_q0)
);

pid_INPUT_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_INPUT_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_INPUT_DATA_WIDTH ))
pid_INPUT_s_axi_U(
    .AWVALID(s_axi_INPUT_AWVALID),
    .AWREADY(s_axi_INPUT_AWREADY),
    .AWADDR(s_axi_INPUT_AWADDR),
    .WVALID(s_axi_INPUT_WVALID),
    .WREADY(s_axi_INPUT_WREADY),
    .WDATA(s_axi_INPUT_WDATA),
    .WSTRB(s_axi_INPUT_WSTRB),
    .ARVALID(s_axi_INPUT_ARVALID),
    .ARREADY(s_axi_INPUT_ARREADY),
    .ARADDR(s_axi_INPUT_ARADDR),
    .RVALID(s_axi_INPUT_RVALID),
    .RREADY(s_axi_INPUT_RREADY),
    .RDATA(s_axi_INPUT_RDATA),
    .RRESP(s_axi_INPUT_RRESP),
    .BVALID(s_axi_INPUT_BVALID),
    .BREADY(s_axi_INPUT_BREADY),
    .BRESP(s_axi_INPUT_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .cmdIn_V_address0(cmdIn_V_address0),
    .cmdIn_V_ce0(cmdIn_V_ce0),
    .cmdIn_V_q0(cmdIn_V_q0),
    .measured_V_address0(measured_V_address0),
    .measured_V_ce0(measured_V_ce0),
    .measured_V_q0(measured_V_q0)
);

pid_TEST_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_TEST_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_TEST_DATA_WIDTH ))
pid_TEST_s_axi_U(
    .AWVALID(s_axi_TEST_AWVALID),
    .AWREADY(s_axi_TEST_AWREADY),
    .AWADDR(s_axi_TEST_AWADDR),
    .WVALID(s_axi_TEST_WVALID),
    .WREADY(s_axi_TEST_WREADY),
    .WDATA(s_axi_TEST_WDATA),
    .WSTRB(s_axi_TEST_WSTRB),
    .ARVALID(s_axi_TEST_ARVALID),
    .ARREADY(s_axi_TEST_ARREADY),
    .ARADDR(s_axi_TEST_ARADDR),
    .RVALID(s_axi_TEST_RVALID),
    .RREADY(s_axi_TEST_RREADY),
    .RDATA(s_axi_TEST_RDATA),
    .RRESP(s_axi_TEST_RRESP),
    .BVALID(s_axi_TEST_BVALID),
    .BREADY(s_axi_TEST_BREADY),
    .BRESP(s_axi_TEST_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1)
);

pid_OUT_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUT_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUT_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUT_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUT_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUT_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUT_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUT_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUT_R_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_OUT_R_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_OUT_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUT_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUT_R_CACHE_VALUE ))
pid_OUT_r_m_axi_U(
    .AWVALID(m_axi_OUT_r_AWVALID),
    .AWREADY(m_axi_OUT_r_AWREADY),
    .AWADDR(m_axi_OUT_r_AWADDR),
    .AWID(m_axi_OUT_r_AWID),
    .AWLEN(m_axi_OUT_r_AWLEN),
    .AWSIZE(m_axi_OUT_r_AWSIZE),
    .AWBURST(m_axi_OUT_r_AWBURST),
    .AWLOCK(m_axi_OUT_r_AWLOCK),
    .AWCACHE(m_axi_OUT_r_AWCACHE),
    .AWPROT(m_axi_OUT_r_AWPROT),
    .AWQOS(m_axi_OUT_r_AWQOS),
    .AWREGION(m_axi_OUT_r_AWREGION),
    .AWUSER(m_axi_OUT_r_AWUSER),
    .WVALID(m_axi_OUT_r_WVALID),
    .WREADY(m_axi_OUT_r_WREADY),
    .WDATA(m_axi_OUT_r_WDATA),
    .WSTRB(m_axi_OUT_r_WSTRB),
    .WLAST(m_axi_OUT_r_WLAST),
    .WID(m_axi_OUT_r_WID),
    .WUSER(m_axi_OUT_r_WUSER),
    .ARVALID(m_axi_OUT_r_ARVALID),
    .ARREADY(m_axi_OUT_r_ARREADY),
    .ARADDR(m_axi_OUT_r_ARADDR),
    .ARID(m_axi_OUT_r_ARID),
    .ARLEN(m_axi_OUT_r_ARLEN),
    .ARSIZE(m_axi_OUT_r_ARSIZE),
    .ARBURST(m_axi_OUT_r_ARBURST),
    .ARLOCK(m_axi_OUT_r_ARLOCK),
    .ARCACHE(m_axi_OUT_r_ARCACHE),
    .ARPROT(m_axi_OUT_r_ARPROT),
    .ARQOS(m_axi_OUT_r_ARQOS),
    .ARREGION(m_axi_OUT_r_ARREGION),
    .ARUSER(m_axi_OUT_r_ARUSER),
    .RVALID(m_axi_OUT_r_RVALID),
    .RREADY(m_axi_OUT_r_RREADY),
    .RDATA(m_axi_OUT_r_RDATA),
    .RLAST(m_axi_OUT_r_RLAST),
    .RID(m_axi_OUT_r_RID),
    .RUSER(m_axi_OUT_r_RUSER),
    .RRESP(m_axi_OUT_r_RRESP),
    .BVALID(m_axi_OUT_r_BVALID),
    .BREADY(m_axi_OUT_r_BREADY),
    .BRESP(m_axi_OUT_r_BRESP),
    .BID(m_axi_OUT_r_BID),
    .BUSER(m_axi_OUT_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(OUT_r_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(OUT_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(OUT_r_RDATA),
    .I_RID(OUT_r_RID),
    .I_RUSER(OUT_r_RUSER),
    .I_RRESP(OUT_r_RRESP),
    .I_RLAST(OUT_r_RLAST),
    .I_AWVALID(OUT_r_AWVALID),
    .I_AWREADY(OUT_r_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd8),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(OUT_r_WVALID),
    .I_WREADY(OUT_r_WREADY),
    .I_WDATA(OUT_r_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(OUT_r_BVALID),
    .I_BREADY(OUT_r_BREADY),
    .I_BRESP(OUT_r_BRESP),
    .I_BID(OUT_r_BID),
    .I_BUSER(OUT_r_BUSER)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter3_fsm <= ap_ST_iter3_fsm_state0;
    end else begin
        ap_CS_iter3_fsm <= ap_NS_iter3_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_OUT_r_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_iter1_fsm_state15)) begin
            if ((1'b1 == ap_condition_762)) begin
                ap_reg_ioackin_OUT_r_AWREADY <= 1'b0;
            end else if ((1'b1 == ap_condition_2213)) begin
                ap_reg_ioackin_OUT_r_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_OUT_r_WREADY <= 1'b0;
    end else begin
        if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state23)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state22)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state21)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state20)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state19)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state18)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state17)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state16)))) begin
            ap_reg_ioackin_OUT_r_WREADY <= 1'b0;
        end else if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (1'b1 == ap_CS_iter2_fsm_state23) & (1'b1 == OUT_r_WREADY)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (1'b1 == ap_CS_iter2_fsm_state22) & (1'b1 == OUT_r_WREADY)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (1'b1 == ap_CS_iter2_fsm_state21) & (1'b1 == OUT_r_WREADY)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (1'b1 == ap_CS_iter2_fsm_state20) & (1'b1 == OUT_r_WREADY)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (1'b1 == ap_CS_iter2_fsm_state19) & (1'b1 == OUT_r_WREADY)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (1'b1 == ap_CS_iter2_fsm_state18) & (1'b1 == OUT_r_WREADY)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (1'b1 == ap_CS_iter2_fsm_state17) & (1'b1 == OUT_r_WREADY)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (1'b1 == ap_CS_iter1_fsm_state16) & (1'b1 == OUT_r_WREADY)))) begin
            ap_reg_ioackin_OUT_r_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
            integral_pos_V_0 <= tmp_3_fu_733_p3;
        end else if (((tmp_6_fu_606_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
            integral_pos_V_0 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
            integral_pos_V_1 <= tmp_22_fu_883_p3;
        end else if (((tmp_6_fu_606_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
            integral_pos_V_1 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
            last_error_pos_V_0 <= tmp_35_fu_684_p1;
        end else if (((tmp_6_fu_606_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
            last_error_pos_V_0 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
            last_error_pos_V_1 <= tmp_38_fu_821_p1;
        end else if (((tmp_6_fu_606_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
            last_error_pos_V_1 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state13))) begin
        addconv2_reg_2947[36 : 16] <= addconv2_fu_1744_p2[36 : 16];
        addconv3_reg_2952[35 : 16] <= addconv3_fu_1750_p2[35 : 16];
        p_shl_cast1_reg_2918[36 : 16] <= p_shl_cast1_fu_1714_p1[36 : 16];
        p_shl_reg_2913[34 : 16] <= p_shl_fu_1707_p3[34 : 16];
        r_V_2_1_reg_2942[36 : 16] <= r_V_2_1_fu_1738_p2[36 : 16];
        r_V_2_reg_2931[36 : 16] <= r_V_2_fu_1722_p2[36 : 16];
        sum_cast_reg_2936[36 : 16] <= sum_cast_fu_1734_p1[36 : 16];
        tmp_82_cast_reg_2926[36 : 16] <= tmp_82_cast_fu_1718_p1[36 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state14))) begin
        addconv4_reg_2990[36 : 16] <= addconv4_fu_1813_p2[36 : 16];
        p_Val2_64_reg_2957[49 : 16] <= p_Val2_64_fu_1772_p2[49 : 16];
        p_Val2_79_1_reg_2963[49 : 16] <= p_Val2_79_1_fu_1781_p2[49 : 16];
        p_Val2_79_2_reg_2969[49 : 16] <= p_Val2_79_2_fu_1790_p2[49 : 16];
        r_V_2_3_reg_2975[36 : 16] <= r_V_2_3_fu_1799_p2[36 : 16];
        r_V_2_4_reg_2980[36 : 16] <= r_V_2_4_fu_1804_p2[36 : 16];
        r_V_2_5_reg_2985[36 : 16] <= r_V_2_5_fu_1808_p2[36 : 16];
        r_V_2_7_reg_2995[36 : 16] <= r_V_2_7_fu_1817_p2[36 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state9))) begin
        integral_rate_V_0 <= tmp_44_fu_1251_p3;
        integral_rate_V_1 <= tmp_61_fu_1356_p3;
        last_error_rate_V_0 <= tmp_67_reg_2818;
        last_error_rate_V_1 <= tmp_72_reg_2828;
        p_Val2_26_reg_2843[20 : 3] <= p_Val2_26_fu_1281_p2[20 : 3];
        p_Val2_28_reg_2848 <= p_Val2_28_fu_1294_p2;
        p_Val2_37_reg_2858[20 : 3] <= p_Val2_37_fu_1386_p2[20 : 3];
        p_Val2_38_reg_2863 <= p_Val2_38_fu_1400_p2;
        tmp_44_reg_2838 <= tmp_44_fu_1251_p3;
        tmp_61_reg_2853 <= tmp_61_fu_1356_p3;
        tmp_81_reg_2868 <= {{p_Val2_44_fu_1417_p2[32:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        kd_V_load_2_reg_2600 <= kd_V_q0;
        ki_V_load_2_reg_2595 <= ki_V_q0;
        kp_V_load_3_reg_2590 <= kp_V_q0;
        p_Val2_54_reg_2585 <= measured_V_q0;
        tmp_6_reg_2578 <= tmp_6_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        kd_V_load_2_reg_2600_pp0_iter0_reg <= kd_V_load_2_reg_2600;
        ki_V_load_2_reg_2595_pp0_iter0_reg <= ki_V_load_2_reg_2595;
        kp_V_load_3_reg_2590_pp0_iter0_reg <= kp_V_load_3_reg_2590;
        kp_V_load_5_reg_2808_pp0_iter0_reg <= kp_V_load_5_reg_2808;
        p_Val2_23_reg_2813 <= p_Val2_23_fu_1160_p2;
        p_Val2_34_reg_2823 <= p_Val2_34_fu_1177_p2;
        p_Val2_61_reg_2752_pp0_iter0_reg <= p_Val2_61_reg_2752;
        r_V_1_reg_2833 <= r_V_1_fu_1194_p2;
        reg_544_pp0_iter0_reg <= reg_544;
        reg_548_pp0_iter0_reg <= reg_548;
        reg_552_pp0_iter0_reg <= reg_552;
        tmp_67_reg_2818 <= tmp_67_fu_1166_p1;
        tmp_72_reg_2828 <= tmp_72_fu_1183_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        ki_V_load_1_reg_2682 <= ki_V_q0;
        p_Val2_49_reg_2671[19 : 3] <= p_Val2_49_fu_787_p3[19 : 3];
        p_Val2_4_reg_2666[51 : 3] <= p_Val2_4_fu_767_p2[51 : 3];
        p_Val2_7_reg_2677[20 : 3] <= p_Val2_7_fu_815_p2[20 : 3];
        p_Val2_9_reg_2661[50 : 3] <= p_Val2_9_fu_754_p2[50 : 3];
        tmp_3_reg_2656 <= tmp_3_fu_733_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
        kp_V_load_5_reg_2808 <= kp_V_q0;
        p_Val2_60_reg_2803 <= measured_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        p_Val2_10_reg_2727[50 : 3] <= p_Val2_10_fu_904_p2[50 : 3];
        p_Val2_13_reg_2732[51 : 3] <= p_Val2_13_fu_917_p2[51 : 3];
        p_Val2_33_reg_2717 <= p_Val2_33_fu_838_p2;
        r_V_reg_2737 <= r_V_fu_931_p2;
        tmp_22_reg_2722 <= tmp_22_fu_883_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        p_Val2_11_reg_2762 <= p_Val2_11_fu_959_p2;
        p_Val2_43_reg_2757 <= p_Val2_43_fu_947_p2;
        phitmp1_reg_2767 <= {{p_Val2_16_fu_972_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
        p_Val2_15_reg_2787 <= p_Val2_15_fu_1051_p2;
        tmp_28_reg_2792 <= {{p_Val2_15_fu_1051_p2[47:16]}};
        tmp_37_reg_2798 <= tmp_37_fu_1085_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        p_Val2_1_reg_2605 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state10))) begin
        p_Val2_29_reg_2873 <= p_Val2_29_fu_1439_p2;
        p_Val2_31_reg_2878 <= p_Val2_31_fu_1451_p2;
        p_Val2_39_reg_2883 <= p_Val2_39_fu_1464_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state11))) begin
        p_Val2_30_reg_2888 <= p_Val2_30_fu_1480_p2;
        p_Val2_40_reg_2893 <= p_Val2_40_fu_1496_p2;
        p_Val2_41_reg_2898 <= p_Val2_41_fu_1509_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        p_Val2_46_reg_2646 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        p_Val2_52_reg_2712 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        p_Val2_57_reg_2772 <= measured_V_q0;
        p_Val2_61_reg_2752 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        p_Val2_5_reg_2615[19 : 3] <= p_Val2_5_fu_650_p3[19 : 3];
        p_Val2_8_reg_2621[20 : 3] <= p_Val2_8_fu_678_p2[20 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state15))) begin
        p_Val2_66_reg_3018 <= p_Val2_66_fu_1911_p3;
        p_Val2_79_3_reg_3033[49 : 16] <= p_Val2_79_3_fu_2086_p2[49 : 16];
        p_Val2_79_4_reg_3039[49 : 16] <= p_Val2_79_4_fu_2095_p2[49 : 16];
        p_Val2_79_5_reg_3045[49 : 16] <= p_Val2_79_5_fu_2104_p2[49 : 16];
        p_Val2_81_1_reg_3023 <= p_Val2_81_1_fu_1993_p3;
        p_Val2_81_2_reg_3028 <= p_Val2_81_2_fu_2075_p3;
        tmp_80_reg_3009[49 : 33] <= tmp_80_fu_1836_p1[49 : 33];
        tmp_85_cast_cast_reg_3000[51 : 33] <= tmp_85_cast_cast_fu_1829_p1[51 : 33];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state16))) begin
        p_Val2_79_6_reg_3066[49 : 16] <= p_Val2_79_6_fu_2353_p2[49 : 16];
        p_Val2_79_7_reg_3072[49 : 16] <= p_Val2_79_7_fu_2362_p2[49 : 16];
        p_Val2_81_1_reg_3023_pp0_iter1_reg <= p_Val2_81_1_reg_3023;
        p_Val2_81_2_reg_3028_pp0_iter1_reg <= p_Val2_81_2_reg_3028;
        p_Val2_81_3_reg_3051 <= p_Val2_81_3_fu_2182_p3;
        p_Val2_81_4_reg_3056 <= p_Val2_81_4_fu_2262_p3;
        p_Val2_81_5_reg_3061 <= p_Val2_81_5_fu_2342_p3;
        tmp_80_reg_3009_pp0_iter1_reg[49 : 33] <= tmp_80_reg_3009[49 : 33];
        tmp_85_cast_cast_reg_3000_pp0_iter1_reg[51 : 33] <= tmp_85_cast_cast_reg_3000[51 : 33];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state17))) begin
        p_Val2_81_6_reg_3078 <= p_Val2_81_6_fu_2440_p3;
        p_Val2_81_7_reg_3083 <= p_Val2_81_7_fu_2520_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        reg_544 <= kp_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        reg_548 <= ki_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        reg_552 <= kd_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state12))) begin
        tmp_76_reg_2903 <= tmp_76_fu_1645_p3;
        tmp_79_reg_2908 <= tmp_79_fu_1671_p3;
    end
end

always @ (*) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (ap_reg_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) begin
        OUT_r_AWVALID = 1'b1;
    end else begin
        OUT_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter3_fsm_state28) & (1'b1 == OUT_r_BVALID))) begin
        OUT_r_BREADY = 1'b1;
    end else begin
        OUT_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2210)) begin
        if ((1'b1 == ap_CS_iter2_fsm_state23)) begin
            OUT_r_WDATA = p_Val2_81_7_reg_3083;
        end else if ((1'b1 == ap_CS_iter2_fsm_state22)) begin
            OUT_r_WDATA = p_Val2_81_6_reg_3078;
        end else if ((1'b1 == ap_CS_iter2_fsm_state21)) begin
            OUT_r_WDATA = p_Val2_81_5_reg_3061;
        end else if ((1'b1 == ap_CS_iter2_fsm_state20)) begin
            OUT_r_WDATA = p_Val2_81_4_reg_3056;
        end else if ((1'b1 == ap_CS_iter2_fsm_state19)) begin
            OUT_r_WDATA = p_Val2_81_3_reg_3051;
        end else if ((1'b1 == ap_CS_iter2_fsm_state18)) begin
            OUT_r_WDATA = p_Val2_81_2_reg_3028_pp0_iter1_reg;
        end else if ((1'b1 == ap_CS_iter2_fsm_state17)) begin
            OUT_r_WDATA = p_Val2_81_1_reg_3023_pp0_iter1_reg;
        end else if ((1'b1 == ap_CS_iter1_fsm_state16)) begin
            OUT_r_WDATA = p_Val2_66_reg_3018;
        end else begin
            OUT_r_WDATA = 'bx;
        end
    end else begin
        OUT_r_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)))) begin
        OUT_r_WVALID = 1'b1;
    end else begin
        OUT_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter1_fsm_state15)) begin
        OUT_r_blk_n_AW = m_axi_OUT_r_AWREADY;
    end else begin
        OUT_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter3_fsm_state28)) begin
        OUT_r_blk_n_B = m_axi_OUT_r_BVALID;
    end else begin
        OUT_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter2_fsm_state23) | (1'b1 == ap_CS_iter2_fsm_state22) | (1'b1 == ap_CS_iter2_fsm_state21) | (1'b1 == ap_CS_iter2_fsm_state20) | (1'b1 == ap_CS_iter2_fsm_state19) | (1'b1 == ap_CS_iter2_fsm_state18) | (1'b1 == ap_CS_iter2_fsm_state17) | (1'b1 == ap_CS_iter1_fsm_state16))) begin
        OUT_r_blk_n_W = m_axi_OUT_r_WREADY;
    end else begin
        OUT_r_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter3_fsm_state28) & (1'b1 == OUT_r_BVALID))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_iter3_fsm_state0) & (1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        ap_phi_mux_p_Val2_17_phi_fu_515_p4 = phitmp1_reg_2767;
    end else begin
        ap_phi_mux_p_Val2_17_phi_fu_515_p4 = 16'd0;
    end
end

always @ (*) begin
    if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        ap_phi_mux_p_Val2_18_phi_fu_526_p4 = tmp_55_fu_1126_p3;
    end else begin
        ap_phi_mux_p_Val2_18_phi_fu_526_p4 = 16'd0;
    end
end

always @ (*) begin
    if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        ap_phi_mux_p_Val2_19_phi_fu_537_p4 = tmp_37_reg_2798;
    end else begin
        ap_phi_mux_p_Val2_19_phi_fu_537_p4 = 16'd0;
    end
end

always @ (*) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_OUT_r_AWREADY == 1'b0)) begin
        ap_sig_ioackin_OUT_r_AWREADY = OUT_r_AWREADY;
    end else begin
        ap_sig_ioackin_OUT_r_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_OUT_r_WREADY == 1'b0)) begin
        ap_sig_ioackin_OUT_r_WREADY = OUT_r_WREADY;
    end else begin
        ap_sig_ioackin_OUT_r_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        cmdIn_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        cmdIn_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_iter0_fsm_state3)) begin
        cmdIn_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_iter0_fsm_state2)) begin
        cmdIn_V_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        cmdIn_V_address0 = 64'd5;
    end else begin
        cmdIn_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        cmdIn_V_ce0 = 1'b1;
    end else begin
        cmdIn_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        kd_V_address0 = 64'd3;
    end else if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        kd_V_address0 = 64'd1;
    end else if (((tmp_6_fu_606_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        kd_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        kd_V_address0 = 64'd2;
    end else begin
        kd_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_fu_606_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        kd_V_ce0 = 1'b1;
    end else begin
        kd_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        ki_V_address0 = 64'd3;
    end else if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        ki_V_address0 = 64'd1;
    end else if (((tmp_6_fu_606_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        ki_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        ki_V_address0 = 64'd2;
    end else begin
        ki_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_fu_606_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        ki_V_ce0 = 1'b1;
    end else begin
        ki_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        kp_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        kp_V_address0 = 64'd4;
    end else if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        kp_V_address0 = 64'd2;
    end else if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        kp_V_address0 = 64'd1;
    end else if (((tmp_6_fu_606_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        kp_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        kp_V_address0 = 64'd3;
    end else begin
        kp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_fu_606_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        kp_V_ce0 = 1'b1;
    end else begin
        kp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        measured_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        measured_V_address0 = 64'd4;
    end else if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        measured_V_address0 = 64'd2;
    end else if (((tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        measured_V_address0 = 64'd1;
    end else if (((tmp_6_fu_606_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        measured_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        measured_V_address0 = 64'd3;
    end else begin
        measured_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_fu_606_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (tmp_6_reg_2578 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        measured_V_ce0 = 1'b1;
    end else begin
        measured_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end
        end
        ap_ST_iter0_fsm_state2 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end
        end
        ap_ST_iter0_fsm_state3 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end
        end
        ap_ST_iter0_fsm_state4 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end
        end
        ap_ST_iter0_fsm_state5 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end
        end
        ap_ST_iter0_fsm_state6 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end
        end
        ap_ST_iter0_fsm_state7 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end
        end
        ap_ST_iter0_fsm_state8 : begin
            if (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state9 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state9))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state10;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state9;
            end
        end
        ap_ST_iter1_fsm_state10 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state10))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state11;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state10;
            end
        end
        ap_ST_iter1_fsm_state11 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state11))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state12;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state11;
            end
        end
        ap_ST_iter1_fsm_state12 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state12))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state13;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state12;
            end
        end
        ap_ST_iter1_fsm_state13 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state13))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state14;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state13;
            end
        end
        ap_ST_iter1_fsm_state14 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state14))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state15;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state14;
            end
        end
        ap_ST_iter1_fsm_state15 : begin
            if ((~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state15))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state16;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state15;
            end
        end
        ap_ST_iter1_fsm_state16 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state9;
            end else if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b0 == ap_CS_iter0_fsm_state8))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state16;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15))) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state9;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state17 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state17))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state18;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state17;
            end
        end
        ap_ST_iter2_fsm_state18 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state18))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state19;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state18;
            end
        end
        ap_ST_iter2_fsm_state19 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state19))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state20;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state19;
            end
        end
        ap_ST_iter2_fsm_state20 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state20))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state21;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state20;
            end
        end
        ap_ST_iter2_fsm_state21 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state21))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state22;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state21;
            end
        end
        ap_ST_iter2_fsm_state22 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state22))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state23;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state22;
            end
        end
        ap_ST_iter2_fsm_state23 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28))) & (1'b1 == ap_CS_iter2_fsm_state23))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state24;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state23;
            end
        end
        ap_ST_iter2_fsm_state24 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (1'b1 == ap_CS_iter1_fsm_state16) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state17;
            end else if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & ((1'b0 == ap_CS_iter1_fsm_state16) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16))))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state24;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17))) & (1'b1 == ap_CS_iter1_fsm_state16))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state17;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter3_fsm)
        ap_ST_iter3_fsm_state25 : begin
            ap_NS_iter3_fsm = ap_ST_iter3_fsm_state26;
        end
        ap_ST_iter3_fsm_state26 : begin
            ap_NS_iter3_fsm = ap_ST_iter3_fsm_state27;
        end
        ap_ST_iter3_fsm_state27 : begin
            ap_NS_iter3_fsm = ap_ST_iter3_fsm_state28;
        end
        ap_ST_iter3_fsm_state28 : begin
            if (((1'b1 == ap_CS_iter2_fsm_state24) & (1'b1 == OUT_r_BVALID))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state25;
            end else if (((1'b0 == ap_CS_iter2_fsm_state24) & (1'b1 == OUT_r_BVALID))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state28;
            end
        end
        ap_ST_iter3_fsm_state0 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (1'b1 == ap_CS_iter2_fsm_state24))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state25;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter3_fsm = 'bx;
        end
    endcase
end

assign addconv2_fu_1744_p2 = ($signed(p_shl_cast1_fu_1714_p1) + $signed(sum_cast_fu_1734_p1));

assign addconv3_fu_1750_p2 = ($signed(p_shl1_cast_fu_1686_p1) - $signed(p_Val2_62_cast_fu_1697_p1));

assign addconv4_fu_1813_p2 = ($signed(sum_cast_reg_2936) - $signed(p_shl_cast1_reg_2918));

assign addconv_fu_1701_p2 = ($signed(p_Val2_62_cast_fu_1697_p1) - $signed(p_shl1_cast_fu_1686_p1));

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter0_fsm_state2 = ap_CS_iter0_fsm[32'd1];

assign ap_CS_iter0_fsm_state3 = ap_CS_iter0_fsm[32'd2];

assign ap_CS_iter0_fsm_state4 = ap_CS_iter0_fsm[32'd3];

assign ap_CS_iter0_fsm_state5 = ap_CS_iter0_fsm[32'd4];

assign ap_CS_iter0_fsm_state6 = ap_CS_iter0_fsm[32'd5];

assign ap_CS_iter0_fsm_state7 = ap_CS_iter0_fsm[32'd6];

assign ap_CS_iter0_fsm_state8 = ap_CS_iter0_fsm[32'd7];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state10 = ap_CS_iter1_fsm[32'd2];

assign ap_CS_iter1_fsm_state11 = ap_CS_iter1_fsm[32'd3];

assign ap_CS_iter1_fsm_state12 = ap_CS_iter1_fsm[32'd4];

assign ap_CS_iter1_fsm_state13 = ap_CS_iter1_fsm[32'd5];

assign ap_CS_iter1_fsm_state14 = ap_CS_iter1_fsm[32'd6];

assign ap_CS_iter1_fsm_state15 = ap_CS_iter1_fsm[32'd7];

assign ap_CS_iter1_fsm_state16 = ap_CS_iter1_fsm[32'd8];

assign ap_CS_iter1_fsm_state9 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state17 = ap_CS_iter2_fsm[32'd1];

assign ap_CS_iter2_fsm_state18 = ap_CS_iter2_fsm[32'd2];

assign ap_CS_iter2_fsm_state19 = ap_CS_iter2_fsm[32'd3];

assign ap_CS_iter2_fsm_state20 = ap_CS_iter2_fsm[32'd4];

assign ap_CS_iter2_fsm_state21 = ap_CS_iter2_fsm[32'd5];

assign ap_CS_iter2_fsm_state22 = ap_CS_iter2_fsm[32'd6];

assign ap_CS_iter2_fsm_state23 = ap_CS_iter2_fsm[32'd7];

assign ap_CS_iter2_fsm_state24 = ap_CS_iter2_fsm[32'd8];

assign ap_CS_iter3_fsm_state0 = ap_CS_iter3_fsm[32'd0];

assign ap_CS_iter3_fsm_state28 = ap_CS_iter3_fsm[32'd4];

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state28_pp0_stage3_iter3 = (1'b0 == OUT_r_BVALID);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2210 = (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0));
end

always @ (*) begin
    ap_condition_2213 = (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) & (1'b1 == OUT_r_AWREADY));
end

always @ (*) begin
    ap_condition_262 = ~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)));
end

always @ (*) begin
    ap_condition_762 = ~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter3_fsm_state28)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state22)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state21)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state20)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state19)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state17)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign p_1_fu_598_p3 = ((tmp_16_fu_566_p3[0:0] === 1'b1) ? p_s_fu_590_p3 : ret_V_fu_556_p4);

assign p_Val2_10_cast_fu_1028_p1 = $signed(p_Val2_10_reg_2727);

assign p_Val2_10_fu_904_p0 = reg_544;

assign p_Val2_10_fu_904_p1 = p_Val2_49_reg_2671;

assign p_Val2_10_fu_904_p2 = ($signed(p_Val2_10_fu_904_p0) * $signed(p_Val2_10_fu_904_p1));

assign p_Val2_11_fu_959_p0 = ki_V_load_1_reg_2682;

assign p_Val2_11_fu_959_p1 = tmp_22_reg_2722;

assign p_Val2_11_fu_959_p2 = ($signed(p_Val2_11_fu_959_p0) * $signed(p_Val2_11_fu_959_p1));

assign p_Val2_12_fu_1038_p2 = (tmp_25_fu_1035_p1 + tmp_24_fu_1031_p1);

assign p_Val2_13_fu_917_p0 = reg_552;

assign p_Val2_13_fu_917_p1 = p_Val2_7_reg_2677;

assign p_Val2_13_fu_917_p2 = ($signed(p_Val2_13_fu_917_p0) * $signed(p_Val2_13_fu_917_p1));

assign p_Val2_15_fu_1051_p2 = (tmp_26_fu_1044_p1 + tmp_27_fu_1048_p1);

assign p_Val2_16_fu_972_p0 = reg_544;

assign p_Val2_16_fu_972_p1 = r_V_reg_2737;

assign p_Val2_16_fu_972_p2 = ($signed(p_Val2_16_fu_972_p0) * $signed(p_Val2_16_fu_972_p1));

assign p_Val2_1_cast_fu_1237_p3 = ((tmp_41_fu_1225_p2[0:0] === 1'b1) ? 32'd4288413696 : 32'd6553600);

assign p_Val2_20_fu_1135_p3 = ((tmp_6_reg_2578[0:0] === 1'b1) ? ap_phi_mux_p_Val2_17_phi_fu_515_p4 : p_Val2_52_reg_2712);

assign p_Val2_21_fu_1141_p3 = ((tmp_6_reg_2578[0:0] === 1'b1) ? ap_phi_mux_p_Val2_18_phi_fu_526_p4 : p_Val2_46_reg_2646);

assign p_Val2_22_fu_1147_p3 = ((tmp_6_reg_2578[0:0] === 1'b1) ? ap_phi_mux_p_Val2_19_phi_fu_537_p4 : p_Val2_1_reg_2605);

assign p_Val2_23_fu_1160_p2 = ($signed(tmp_39_fu_1153_p1) - $signed(tmp_40_fu_1157_p1));

assign p_Val2_24_cast1_fu_1207_p1 = p_Val2_24_fu_1200_p3;

assign p_Val2_24_cast_fu_1211_p1 = p_Val2_24_fu_1200_p3;

assign p_Val2_24_fu_1200_p3 = {{p_Val2_23_reg_2813}, {3'd0}};

assign p_Val2_25_fu_1219_p2 = ($signed(p_Val2_24_cast1_fu_1207_p1) + $signed(integral_rate_V_0));

assign p_Val2_26_fu_1281_p2 = ($signed(p_Val2_24_cast_fu_1211_p1) - $signed(tmp_51_cast_fu_1277_p1));

assign p_Val2_28_cast_fu_1470_p1 = $signed(p_Val2_28_reg_2848);

assign p_Val2_28_fu_1294_p0 = p_Val2_24_fu_1200_p3;

assign p_Val2_28_fu_1294_p1 = kp_V_load_3_reg_2590_pp0_iter0_reg;

assign p_Val2_28_fu_1294_p2 = ($signed(p_Val2_28_fu_1294_p0) * $signed(p_Val2_28_fu_1294_p1));

assign p_Val2_29_fu_1439_p0 = tmp_44_reg_2838;

assign p_Val2_29_fu_1439_p1 = ki_V_load_2_reg_2595_pp0_iter0_reg;

assign p_Val2_29_fu_1439_p2 = ($signed(p_Val2_29_fu_1439_p0) * $signed(p_Val2_29_fu_1439_p1));

assign p_Val2_2_cast_fu_1342_p3 = ((tmp_58_fu_1330_p2[0:0] === 1'b1) ? 32'd4288413696 : 32'd6553600);

assign p_Val2_30_fu_1480_p2 = (tmp_46_fu_1473_p1 + tmp_47_fu_1477_p1);

assign p_Val2_31_cast_fu_1515_p1 = $signed(p_Val2_31_reg_2878);

assign p_Val2_31_fu_1451_p0 = p_Val2_26_reg_2843;

assign p_Val2_31_fu_1451_p1 = kd_V_load_2_reg_2600_pp0_iter0_reg;

assign p_Val2_31_fu_1451_p2 = ($signed(p_Val2_31_fu_1451_p0) * $signed(p_Val2_31_fu_1451_p1));

assign p_Val2_32_fu_1525_p2 = (tmp_49_fu_1521_p1 + tmp_48_fu_1518_p1);

assign p_Val2_33_fu_838_p0 = reg_548;

assign p_Val2_33_fu_838_p1 = tmp_3_reg_2656;

assign p_Val2_33_fu_838_p2 = ($signed(p_Val2_33_fu_838_p0) * $signed(p_Val2_33_fu_838_p1));

assign p_Val2_34_fu_1177_p2 = ($signed(tmp_56_fu_1170_p1) - $signed(tmp_57_fu_1174_p1));

assign p_Val2_35_cast1_fu_1312_p1 = p_Val2_35_fu_1305_p3;

assign p_Val2_35_cast_fu_1316_p1 = p_Val2_35_fu_1305_p3;

assign p_Val2_35_fu_1305_p3 = {{p_Val2_34_reg_2823}, {3'd0}};

assign p_Val2_36_fu_1324_p2 = ($signed(p_Val2_35_cast1_fu_1312_p1) + $signed(integral_rate_V_1));

assign p_Val2_37_fu_1386_p2 = ($signed(p_Val2_35_cast_fu_1316_p1) - $signed(tmp_68_cast_fu_1382_p1));

assign p_Val2_38_cast_fu_1486_p1 = $signed(p_Val2_38_reg_2863);

assign p_Val2_38_fu_1400_p0 = p_Val2_35_fu_1305_p3;

assign p_Val2_38_fu_1400_p1 = reg_544_pp0_iter0_reg;

assign p_Val2_38_fu_1400_p2 = ($signed(p_Val2_38_fu_1400_p0) * $signed(p_Val2_38_fu_1400_p1));

assign p_Val2_39_fu_1464_p0 = tmp_61_reg_2853;

assign p_Val2_39_fu_1464_p1 = reg_548_pp0_iter0_reg;

assign p_Val2_39_fu_1464_p2 = ($signed(p_Val2_39_fu_1464_p0) * $signed(p_Val2_39_fu_1464_p1));

assign p_Val2_3_fu_644_p2 = ($signed(tmp_7_fu_636_p1) - $signed(tmp_8_fu_640_p1));

assign p_Val2_40_fu_1496_p2 = (tmp_63_fu_1489_p1 + tmp_64_fu_1493_p1);

assign p_Val2_41_cast_fu_1571_p1 = $signed(p_Val2_41_reg_2898);

assign p_Val2_41_fu_1509_p0 = p_Val2_37_reg_2858;

assign p_Val2_41_fu_1509_p1 = reg_552_pp0_iter0_reg;

assign p_Val2_41_fu_1509_p2 = ($signed(p_Val2_41_fu_1509_p0) * $signed(p_Val2_41_fu_1509_p1));

assign p_Val2_42_fu_1581_p2 = (tmp_66_fu_1577_p1 + tmp_65_fu_1574_p1);

assign p_Val2_43_fu_947_p2 = (tmp_5_fu_944_p1 + tmp_s_fu_940_p1);

assign p_Val2_44_fu_1417_p0 = r_V_1_reg_2833;

assign p_Val2_44_fu_1417_p1 = kp_V_load_5_reg_2808_pp0_iter0_reg;

assign p_Val2_44_fu_1417_p2 = ($signed(p_Val2_44_fu_1417_p0) * $signed(p_Val2_44_fu_1417_p1));

assign p_Val2_45_fu_994_p2 = (tmp_10_fu_988_p1 + tmp_11_fu_991_p1);

assign p_Val2_48_fu_781_p2 = ($signed(tmp_17_fu_773_p1) - $signed(tmp_18_fu_777_p1));

assign p_Val2_49_cast1_fu_844_p1 = p_Val2_49_reg_2671;

assign p_Val2_49_cast_fu_795_p1 = p_Val2_49_fu_787_p3;

assign p_Val2_49_fu_787_p3 = {{p_Val2_48_fu_781_p2}, {3'd0}};

assign p_Val2_4_fu_767_p0 = reg_552;

assign p_Val2_4_fu_767_p1 = p_Val2_8_reg_2621;

assign p_Val2_4_fu_767_p2 = ($signed(p_Val2_4_fu_767_p0) * $signed(p_Val2_4_fu_767_p1));

assign p_Val2_5_cast1_fu_694_p1 = p_Val2_5_reg_2615;

assign p_Val2_5_cast_fu_658_p1 = p_Val2_5_fu_650_p3;

assign p_Val2_5_fu_650_p3 = {{p_Val2_3_fu_644_p2}, {3'd0}};

assign p_Val2_62_cast_fu_1697_p1 = $signed(p_Val2_62_fu_1690_p3);

assign p_Val2_62_fu_1690_p3 = {{tmp_79_reg_2908}, {16'd0}};

assign p_Val2_63_fu_1759_p2 = ($signed(36'd0) - $signed(p_shl_cast_fu_1756_p1));

assign p_Val2_64_fu_1772_p1 = r_V_2_reg_2931;

assign p_Val2_64_fu_1772_p2 = ($signed({{1'b0}, {50'd10813}}) * $signed(p_Val2_64_fu_1772_p1));

assign p_Val2_65_fu_1840_p2 = ($signed(tmp_79_cast_fu_1833_p1) + $signed(tmp_85_cast_cast_fu_1829_p1));

assign p_Val2_66_cast_fu_1846_p2 = ($signed(tmp_80_fu_1836_p1) + $signed(p_Val2_64_reg_2957));

assign p_Val2_66_fu_1911_p3 = ((tmp_85_fu_1905_p2[0:0] === 1'b1) ? sel_tmp5_cast_fu_1897_p3 : phitmp7_fu_1875_p4);

assign p_Val2_6_cast_fu_719_p3 = ((tmp_1_fu_707_p2[0:0] === 1'b1) ? 32'd4288413696 : 32'd6553600);

assign p_Val2_6_fu_701_p2 = ($signed(integral_pos_V_0) + $signed(p_Val2_5_cast1_fu_694_p1));

assign p_Val2_79_1_fu_1781_p1 = r_V_2_1_reg_2942;

assign p_Val2_79_1_fu_1781_p2 = ($signed({{1'b0}, {50'd10813}}) * $signed(p_Val2_79_1_fu_1781_p1));

assign p_Val2_79_2_fu_1790_p1 = addconv2_reg_2947;

assign p_Val2_79_2_fu_1790_p2 = ($signed({{1'b0}, {50'd10813}}) * $signed(p_Val2_79_2_fu_1790_p1));

assign p_Val2_79_3_fu_2086_p1 = r_V_2_3_reg_2975;

assign p_Val2_79_3_fu_2086_p2 = ($signed({{1'b0}, {50'd10813}}) * $signed(p_Val2_79_3_fu_2086_p1));

assign p_Val2_79_4_fu_2095_p1 = r_V_2_4_reg_2980;

assign p_Val2_79_4_fu_2095_p2 = ($signed({{1'b0}, {50'd10813}}) * $signed(p_Val2_79_4_fu_2095_p1));

assign p_Val2_79_5_fu_2104_p1 = r_V_2_5_reg_2985;

assign p_Val2_79_5_fu_2104_p2 = ($signed({{1'b0}, {50'd10813}}) * $signed(p_Val2_79_5_fu_2104_p1));

assign p_Val2_79_6_fu_2353_p1 = addconv4_reg_2990;

assign p_Val2_79_6_fu_2353_p2 = ($signed({{1'b0}, {50'd10813}}) * $signed(p_Val2_79_6_fu_2353_p1));

assign p_Val2_79_7_fu_2362_p1 = r_V_2_7_reg_2995;

assign p_Val2_79_7_fu_2362_p2 = ($signed({{1'b0}, {50'd10813}}) * $signed(p_Val2_79_7_fu_2362_p1));

assign p_Val2_7_fu_815_p2 = ($signed(p_Val2_49_cast_fu_795_p1) - $signed(tmp_27_cast_fu_811_p1));

assign p_Val2_80_1_cast_fu_1928_p2 = ($signed(tmp_80_fu_1836_p1) + $signed(p_Val2_79_1_reg_2963));

assign p_Val2_80_1_fu_1922_p2 = ($signed(tmp_11444_1_cast_fu_1919_p1) + $signed(tmp_85_cast_cast_fu_1829_p1));

assign p_Val2_80_2_cast_fu_2010_p2 = ($signed(tmp_80_fu_1836_p1) + $signed(p_Val2_79_2_reg_2969));

assign p_Val2_80_2_fu_2004_p2 = ($signed(tmp_11444_2_cast_fu_2001_p1) + $signed(tmp_85_cast_cast_fu_1829_p1));

assign p_Val2_80_3_cast_fu_2118_p2 = ($signed(tmp_80_reg_3009) + $signed(p_Val2_79_3_reg_3033));

assign p_Val2_80_3_fu_2113_p2 = ($signed(tmp_11444_3_cast_fu_2110_p1) + $signed(tmp_85_cast_cast_reg_3000));

assign p_Val2_80_4_cast_fu_2198_p2 = ($signed(tmp_80_reg_3009) + $signed(p_Val2_79_4_reg_3039));

assign p_Val2_80_4_fu_2193_p2 = ($signed(tmp_11444_4_cast_fu_2190_p1) + $signed(tmp_85_cast_cast_reg_3000));

assign p_Val2_80_5_cast_fu_2278_p2 = ($signed(tmp_80_reg_3009) + $signed(p_Val2_79_5_reg_3045));

assign p_Val2_80_5_fu_2273_p2 = ($signed(tmp_11444_5_cast_fu_2270_p1) + $signed(tmp_85_cast_cast_reg_3000));

assign p_Val2_80_6_cast_fu_2376_p2 = ($signed(tmp_80_reg_3009_pp0_iter1_reg) + $signed(p_Val2_79_6_reg_3066));

assign p_Val2_80_6_fu_2371_p2 = ($signed(tmp_11444_6_cast_fu_2368_p1) + $signed(tmp_85_cast_cast_reg_3000_pp0_iter1_reg));

assign p_Val2_80_7_cast_fu_2456_p2 = ($signed(tmp_80_reg_3009_pp0_iter1_reg) + $signed(p_Val2_79_7_reg_3072));

assign p_Val2_80_7_fu_2451_p2 = ($signed(tmp_11444_7_cast_fu_2448_p1) + $signed(tmp_85_cast_cast_reg_3000_pp0_iter1_reg));

assign p_Val2_81_1_fu_1993_p3 = ((tmp_87_fu_1987_p2[0:0] === 1'b1) ? sel_tmp8_cast_fu_1979_p3 : phitmp47_1_fu_1957_p4);

assign p_Val2_81_2_fu_2075_p3 = ((tmp_89_fu_2069_p2[0:0] === 1'b1) ? sel_tmp12_cast_fu_2061_p3 : phitmp47_2_fu_2039_p4);

assign p_Val2_81_3_fu_2182_p3 = ((tmp_91_fu_2176_p2[0:0] === 1'b1) ? sel_tmp15_cast_fu_2168_p3 : phitmp47_3_fu_2146_p4);

assign p_Val2_81_4_fu_2262_p3 = ((tmp_92_fu_2256_p2[0:0] === 1'b1) ? sel_tmp18_cast_fu_2248_p3 : phitmp47_4_fu_2226_p4);

assign p_Val2_81_5_fu_2342_p3 = ((tmp_93_fu_2336_p2[0:0] === 1'b1) ? sel_tmp21_cast_fu_2328_p3 : phitmp47_5_fu_2306_p4);

assign p_Val2_81_6_fu_2440_p3 = ((tmp_94_fu_2434_p2[0:0] === 1'b1) ? sel_tmp24_cast_fu_2426_p3 : phitmp47_6_fu_2404_p4);

assign p_Val2_81_7_fu_2520_p3 = ((tmp_95_fu_2514_p2[0:0] === 1'b1) ? sel_tmp27_cast_fu_2506_p3 : phitmp47_7_fu_2484_p4);

assign p_Val2_8_fu_678_p2 = ($signed(p_Val2_5_cast_fu_658_p1) - $signed(tmp_9_cast_fu_674_p1));

assign p_Val2_9_cast_fu_937_p1 = $signed(p_Val2_9_reg_2661);

assign p_Val2_9_fu_754_p0 = reg_544;

assign p_Val2_9_fu_754_p1 = p_Val2_5_reg_2615;

assign p_Val2_9_fu_754_p2 = ($signed(p_Val2_9_fu_754_p0) * $signed(p_Val2_9_fu_754_p1));

assign p_Val2_cast_fu_869_p3 = ((tmp_19_fu_857_p2[0:0] === 1'b1) ? 32'd4288413696 : 32'd6553600);

assign p_Val2_s_12_fu_851_p2 = ($signed(integral_pos_V_1) + $signed(p_Val2_49_cast1_fu_844_p1));

assign p_s_fu_590_p3 = ((tmp_4_fu_578_p2[0:0] === 1'b1) ? ret_V_fu_556_p4 : ret_V_1_fu_584_p2);

assign p_shl1_cast_fu_1686_p1 = $signed(p_shl1_fu_1679_p3);

assign p_shl1_fu_1679_p3 = {{tmp_76_reg_2903}, {16'd0}};

assign p_shl_cast1_fu_1714_p1 = p_shl_fu_1707_p3;

assign p_shl_cast_fu_1756_p1 = p_shl_reg_2913;

assign p_shl_fu_1707_p3 = {{tmp_81_reg_2868}, {16'd0}};

assign phitmp47_1_fu_1957_p4 = {{p_Val2_80_1_fu_1922_p2[48:33]}};

assign phitmp47_2_fu_2039_p4 = {{p_Val2_80_2_fu_2004_p2[48:33]}};

assign phitmp47_3_fu_2146_p4 = {{p_Val2_80_3_fu_2113_p2[48:33]}};

assign phitmp47_4_fu_2226_p4 = {{p_Val2_80_4_fu_2193_p2[48:33]}};

assign phitmp47_5_fu_2306_p4 = {{p_Val2_80_5_fu_2273_p2[48:33]}};

assign phitmp47_6_fu_2404_p4 = {{p_Val2_80_6_fu_2371_p2[48:33]}};

assign phitmp47_7_fu_2484_p4 = {{p_Val2_80_7_fu_2451_p2[48:33]}};

assign phitmp7_fu_1875_p4 = {{p_Val2_65_fu_1840_p2[48:33]}};

assign r_V_1_fu_1194_p2 = ($signed(tmp_73_fu_1187_p1) - $signed(tmp_74_fu_1191_p1));

assign r_V_2_1_fu_1738_p2 = ($signed(p_shl_cast1_fu_1714_p1) - $signed(sum_cast_fu_1734_p1));

assign r_V_2_3_fu_1799_p2 = ($signed(tmp_110_3_cast_fu_1796_p1) - $signed(p_shl_cast1_reg_2918));

assign r_V_2_4_fu_1804_p2 = ($signed(p_shl_cast1_reg_2918) + $signed(tmp_82_cast_reg_2926));

assign r_V_2_5_fu_1808_p2 = ($signed(tmp_83_cast_fu_1765_p1) - $signed(sum_cast_reg_2936));

assign r_V_2_7_fu_1817_p2 = ($signed(p_shl_cast1_reg_2918) + $signed(tmp_110_3_cast_fu_1796_p1));

assign r_V_2_fu_1722_p2 = ($signed(tmp_82_cast_fu_1718_p1) - $signed(p_shl_cast1_fu_1714_p1));

assign r_V_fu_931_p2 = ($signed(tmp_33_fu_923_p1) - $signed(tmp_34_fu_927_p1));

assign ret_V_1_fu_584_p2 = (3'd1 + ret_V_fu_556_p4);

assign ret_V_fu_556_p4 = {{cmdIn_V_q0[15:13]}};

assign sel_tmp10_fu_2156_p2 = (tmp_90_fu_2132_p3 ^ 1'd1);

assign sel_tmp11_fu_2162_p2 = (tmp_118_3_fu_2140_p2 & sel_tmp10_fu_2156_p2);

assign sel_tmp12_cast_fu_2061_p3 = ((sel_tmp8_fu_2055_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp12_fu_2236_p2 = (tmp_96_fu_2212_p3 ^ 1'd1);

assign sel_tmp13_fu_2242_p2 = (tmp_118_4_fu_2220_p2 & sel_tmp12_fu_2236_p2);

assign sel_tmp14_fu_2316_p2 = (tmp_97_fu_2292_p3 ^ 1'd1);

assign sel_tmp15_cast_fu_2168_p3 = ((sel_tmp11_fu_2162_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp15_fu_2322_p2 = (tmp_118_5_fu_2300_p2 & sel_tmp14_fu_2316_p2);

assign sel_tmp16_fu_2414_p2 = (tmp_98_fu_2390_p3 ^ 1'd1);

assign sel_tmp17_fu_2420_p2 = (tmp_118_6_fu_2398_p2 & sel_tmp16_fu_2414_p2);

assign sel_tmp18_cast_fu_2248_p3 = ((sel_tmp13_fu_2242_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp18_fu_2494_p2 = (tmp_99_fu_2470_p3 ^ 1'd1);

assign sel_tmp19_fu_2500_p2 = (tmp_118_7_fu_2478_p2 & sel_tmp18_fu_2494_p2);

assign sel_tmp1_fu_1885_p2 = (tmp_83_fu_1861_p3 ^ 1'd1);

assign sel_tmp21_cast_fu_2328_p3 = ((sel_tmp15_fu_2322_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp24_cast_fu_2426_p3 = ((sel_tmp17_fu_2420_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp27_cast_fu_2506_p3 = ((sel_tmp19_fu_2500_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp2_fu_1559_p2 = (tmp_53_fu_1547_p2 & sel_tmp_fu_1553_p2);

assign sel_tmp3_fu_1973_p2 = (tmp_118_1_fu_1951_p2 & sel_tmp9_fu_1967_p2);

assign sel_tmp4_fu_1891_p2 = (tmp_84_fu_1869_p2 & sel_tmp1_fu_1885_p2);

assign sel_tmp5_cast_fu_1897_p3 = ((sel_tmp4_fu_1891_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp5_fu_2049_p2 = (tmp_88_fu_2025_p3 ^ 1'd1);

assign sel_tmp6_fu_1609_p2 = (tmp_69_fu_1597_p2 ^ 1'd1);

assign sel_tmp7_fu_1615_p2 = (tmp_70_fu_1603_p2 & sel_tmp6_fu_1609_p2);

assign sel_tmp8_cast_fu_1979_p3 = ((sel_tmp3_fu_1973_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp8_fu_2055_p2 = (tmp_118_2_fu_2033_p2 & sel_tmp5_fu_2049_p2);

assign sel_tmp9_fu_1967_p2 = (tmp_86_fu_1943_p3 ^ 1'd1);

assign sel_tmp_fu_1553_p2 = (tmp_52_fu_1541_p2 ^ 1'd1);

assign sum_cast_fu_1734_p1 = $signed(sum_fu_1728_p2);

assign sum_fu_1728_p2 = ($signed(p_shl1_cast_fu_1686_p1) + $signed(p_Val2_62_cast_fu_1697_p1));

assign tmp_10_fu_988_p1 = p_Val2_43_reg_2757;

assign tmp_110_3_cast_fu_1796_p1 = $signed(addconv3_reg_2952);

assign tmp_11444_1_cast_fu_1919_p1 = p_Val2_79_1_reg_2963;

assign tmp_11444_2_cast_fu_2001_p1 = p_Val2_79_2_reg_2969;

assign tmp_11444_3_cast_fu_2110_p1 = p_Val2_79_3_reg_3033;

assign tmp_11444_4_cast_fu_2190_p1 = p_Val2_79_4_reg_3039;

assign tmp_11444_5_cast_fu_2270_p1 = p_Val2_79_5_reg_3045;

assign tmp_11444_6_cast_fu_2368_p1 = p_Val2_79_6_reg_3066;

assign tmp_11444_7_cast_fu_2448_p1 = p_Val2_79_7_reg_3072;

assign tmp_116_1_fu_1933_p4 = {{p_Val2_80_1_cast_fu_1928_p2[49:31]}};

assign tmp_116_2_fu_2015_p4 = {{p_Val2_80_2_cast_fu_2010_p2[49:31]}};

assign tmp_116_3_fu_2122_p4 = {{p_Val2_80_3_cast_fu_2118_p2[49:31]}};

assign tmp_116_4_fu_2202_p4 = {{p_Val2_80_4_cast_fu_2198_p2[49:31]}};

assign tmp_116_5_fu_2282_p4 = {{p_Val2_80_5_cast_fu_2278_p2[49:31]}};

assign tmp_116_6_fu_2380_p4 = {{p_Val2_80_6_cast_fu_2376_p2[49:31]}};

assign tmp_116_7_fu_2460_p4 = {{p_Val2_80_7_cast_fu_2456_p2[49:31]}};

assign tmp_118_1_fu_1951_p2 = (($signed(tmp_116_1_fu_1933_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_118_2_fu_2033_p2 = (($signed(tmp_116_2_fu_2015_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_118_3_fu_2140_p2 = (($signed(tmp_116_3_fu_2122_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_118_4_fu_2220_p2 = (($signed(tmp_116_4_fu_2202_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_118_5_fu_2300_p2 = (($signed(tmp_116_5_fu_2282_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_118_6_fu_2398_p2 = (($signed(tmp_116_6_fu_2380_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_118_7_fu_2478_p2 = (($signed(tmp_116_7_fu_2460_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_11_fu_991_p1 = p_Val2_4_reg_2666;

assign tmp_12_fu_1000_p4 = {{p_Val2_45_fu_994_p2[47:16]}};

assign tmp_13_fu_1010_p2 = (($signed(tmp_12_fu_1000_p4) < $signed(32'd4294901760)) ? 1'b1 : 1'b0);

assign tmp_14_fu_1016_p2 = (($signed(tmp_12_fu_1000_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_15_fu_1022_p2 = (tmp_14_fu_1016_p2 | tmp_13_fu_1010_p2);

assign tmp_16_fu_566_p3 = cmdIn_V_q0[32'd15];

assign tmp_17_fu_773_p0 = cmdIn_V_q0;

assign tmp_17_fu_773_p1 = tmp_17_fu_773_p0;

assign tmp_18_fu_777_p1 = $signed(measured_V_q0);

assign tmp_19_fu_857_p2 = (($signed(p_Val2_s_12_fu_851_p2) < $signed(32'd4288413696)) ? 1'b1 : 1'b0);

assign tmp_1_fu_707_p2 = (($signed(p_Val2_6_fu_701_p2) < $signed(32'd4288413696)) ? 1'b1 : 1'b0);

assign tmp_20_fu_863_p2 = (($signed(p_Val2_s_12_fu_851_p2) > $signed(32'd6553600)) ? 1'b1 : 1'b0);

assign tmp_21_fu_877_p2 = (tmp_20_fu_863_p2 | tmp_19_fu_857_p2);

assign tmp_22_fu_883_p3 = ((tmp_21_fu_877_p2[0:0] === 1'b1) ? p_Val2_cast_fu_869_p3 : p_Val2_s_12_fu_851_p2);

assign tmp_23_fu_803_p3 = {{last_error_pos_V_1}, {3'd0}};

assign tmp_24_fu_1031_p1 = $unsigned(p_Val2_10_cast_fu_1028_p1);

assign tmp_25_fu_1035_p1 = p_Val2_11_reg_2762;

assign tmp_26_fu_1044_p1 = p_Val2_12_fu_1038_p2;

assign tmp_27_cast_fu_811_p1 = $signed(tmp_23_fu_803_p3);

assign tmp_27_fu_1048_p1 = p_Val2_13_reg_2732;

assign tmp_29_fu_1093_p2 = (($signed(tmp_28_reg_2792) < $signed(32'd4294901760)) ? 1'b1 : 1'b0);

assign tmp_2_fu_713_p2 = (($signed(p_Val2_6_fu_701_p2) > $signed(32'd6553600)) ? 1'b1 : 1'b0);

assign tmp_30_fu_1098_p2 = (($signed(tmp_28_reg_2792) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_31_fu_1103_p2 = (tmp_30_fu_1098_p2 | tmp_29_fu_1093_p2);

assign tmp_32_fu_574_p1 = cmdIn_V_q0[12:0];

assign tmp_33_fu_923_p0 = cmdIn_V_q0;

assign tmp_33_fu_923_p1 = tmp_33_fu_923_p0;

assign tmp_34_fu_927_p1 = $signed(measured_V_q0);

assign tmp_35_cast_fu_1067_p3 = ((tmp_13_fu_1010_p2[0:0] === 1'b1) ? 16'd57344 : 16'd8183);

assign tmp_35_fu_684_p1 = p_Val2_3_fu_644_p2[15:0];

assign tmp_36_fu_1075_p4 = {{p_Val2_45_fu_994_p2[34:19]}};

assign tmp_37_fu_1085_p3 = ((tmp_15_fu_1022_p2[0:0] === 1'b1) ? tmp_35_cast_fu_1067_p3 : tmp_36_fu_1075_p4);

assign tmp_38_cast_fu_1109_p3 = ((tmp_29_fu_1093_p2[0:0] === 1'b1) ? 16'd57344 : 16'd8183);

assign tmp_38_fu_821_p1 = p_Val2_48_fu_781_p2[15:0];

assign tmp_39_fu_1153_p1 = $signed(p_Val2_22_fu_1147_p3);

assign tmp_3_fu_733_p3 = ((tmp_fu_727_p2[0:0] === 1'b1) ? p_Val2_6_cast_fu_719_p3 : p_Val2_6_fu_701_p2);

assign tmp_40_fu_1157_p1 = $signed(p_Val2_54_reg_2585);

assign tmp_41_fu_1225_p2 = (($signed(p_Val2_25_fu_1219_p2) < $signed(32'd4288413696)) ? 1'b1 : 1'b0);

assign tmp_42_fu_1231_p2 = (($signed(p_Val2_25_fu_1219_p2) > $signed(32'd6553600)) ? 1'b1 : 1'b0);

assign tmp_43_fu_1245_p2 = (tmp_42_fu_1231_p2 | tmp_41_fu_1225_p2);

assign tmp_44_fu_1251_p3 = ((tmp_43_fu_1245_p2[0:0] === 1'b1) ? p_Val2_1_cast_fu_1237_p3 : p_Val2_25_fu_1219_p2);

assign tmp_45_fu_1269_p3 = {{last_error_rate_V_0}, {3'd0}};

assign tmp_46_fu_1473_p1 = $unsigned(p_Val2_28_cast_fu_1470_p1);

assign tmp_47_fu_1477_p1 = p_Val2_29_reg_2873;

assign tmp_48_fu_1518_p1 = p_Val2_30_reg_2888;

assign tmp_49_fu_1521_p1 = $unsigned(p_Val2_31_cast_fu_1515_p1);

assign tmp_4_fu_578_p2 = ((tmp_32_fu_574_p1 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_50_fu_1117_p4 = {{p_Val2_15_reg_2787[34:19]}};

assign tmp_51_cast_fu_1277_p1 = $signed(tmp_45_fu_1269_p3);

assign tmp_51_fu_1531_p4 = {{p_Val2_32_fu_1525_p2[47:16]}};

assign tmp_52_fu_1541_p2 = (($signed(tmp_51_fu_1531_p4) < $signed(32'd4294901760)) ? 1'b1 : 1'b0);

assign tmp_53_fu_1547_p2 = (($signed(tmp_51_fu_1531_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_54_fu_1565_p2 = (tmp_52_fu_1541_p2 | sel_tmp2_fu_1559_p2);

assign tmp_55_fu_1126_p3 = ((tmp_31_fu_1103_p2[0:0] === 1'b1) ? tmp_38_cast_fu_1109_p3 : tmp_50_fu_1117_p4);

assign tmp_56_fu_1170_p1 = $signed(p_Val2_21_fu_1141_p3);

assign tmp_57_fu_1174_p1 = $signed(p_Val2_57_reg_2772);

assign tmp_58_fu_1330_p2 = (($signed(p_Val2_36_fu_1324_p2) < $signed(32'd4288413696)) ? 1'b1 : 1'b0);

assign tmp_59_fu_1336_p2 = (($signed(p_Val2_36_fu_1324_p2) > $signed(32'd6553600)) ? 1'b1 : 1'b0);

assign tmp_5_fu_944_p1 = p_Val2_33_reg_2717;

assign tmp_60_fu_1350_p2 = (tmp_59_fu_1336_p2 | tmp_58_fu_1330_p2);

assign tmp_61_fu_1356_p3 = ((tmp_60_fu_1350_p2[0:0] === 1'b1) ? p_Val2_2_cast_fu_1342_p3 : p_Val2_36_fu_1324_p2);

assign tmp_62_fu_1374_p3 = {{last_error_rate_V_1}, {3'd0}};

assign tmp_63_fu_1489_p1 = $unsigned(p_Val2_38_cast_fu_1486_p1);

assign tmp_64_fu_1493_p1 = p_Val2_39_reg_2883;

assign tmp_65_fu_1574_p1 = p_Val2_40_reg_2893;

assign tmp_66_fu_1577_p1 = $unsigned(p_Val2_41_cast_fu_1571_p1);

assign tmp_67_fu_1166_p1 = p_Val2_23_fu_1160_p2[15:0];

assign tmp_68_cast_fu_1382_p1 = $signed(tmp_62_fu_1374_p3);

assign tmp_68_fu_1587_p4 = {{p_Val2_42_fu_1581_p2[47:16]}};

assign tmp_69_fu_1597_p2 = (($signed(tmp_68_fu_1587_p4) < $signed(32'd4294901760)) ? 1'b1 : 1'b0);

assign tmp_6_fu_606_p2 = ((p_1_fu_598_p3 != 3'd0) ? 1'b1 : 1'b0);

assign tmp_70_fu_1603_p2 = (($signed(tmp_68_fu_1587_p4) > $signed(32'd65470)) ? 1'b1 : 1'b0);

assign tmp_71_fu_1621_p2 = (tmp_69_fu_1597_p2 | sel_tmp7_fu_1615_p2);

assign tmp_72_fu_1183_p1 = p_Val2_34_fu_1177_p2[15:0];

assign tmp_73_fu_1187_p1 = $signed(p_Val2_20_fu_1135_p3);

assign tmp_74_fu_1191_p1 = $signed(p_Val2_60_reg_2803);

assign tmp_75_cast_fu_1627_p3 = ((tmp_52_fu_1541_p2[0:0] === 1'b1) ? 19'd491520 : 19'd32735);

assign tmp_75_fu_1635_p4 = {{p_Val2_32_fu_1525_p2[35:17]}};

assign tmp_76_fu_1645_p3 = ((tmp_54_fu_1565_p2[0:0] === 1'b1) ? tmp_75_cast_fu_1627_p3 : tmp_75_fu_1635_p4);

assign tmp_77_fu_1661_p4 = {{p_Val2_42_fu_1581_p2[35:17]}};

assign tmp_78_fu_1822_p3 = {{p_Val2_61_reg_2752_pp0_iter0_reg}, {33'd0}};

assign tmp_79_cast_fu_1833_p1 = p_Val2_64_reg_2957;

assign tmp_79_fu_1671_p3 = ((tmp_71_fu_1621_p2[0:0] === 1'b1) ? tmp_81_cast_fu_1653_p3 : tmp_77_fu_1661_p4);

assign tmp_7_fu_636_p0 = cmdIn_V_q0;

assign tmp_7_fu_636_p1 = tmp_7_fu_636_p0;

assign tmp_80_fu_1836_p1 = tmp_78_fu_1822_p3;

assign tmp_81_cast_fu_1653_p3 = ((tmp_69_fu_1597_p2[0:0] === 1'b1) ? 19'd491520 : 19'd32735);

assign tmp_82_cast_fu_1718_p1 = $signed(addconv_fu_1701_p2);

assign tmp_82_fu_1851_p4 = {{p_Val2_66_cast_fu_1846_p2[49:31]}};

assign tmp_83_cast_fu_1765_p1 = $signed(p_Val2_63_fu_1759_p2);

assign tmp_83_fu_1861_p3 = p_Val2_66_cast_fu_1846_p2[32'd49];

assign tmp_84_fu_1869_p2 = (($signed(tmp_82_fu_1851_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_85_cast_cast_fu_1829_p1 = tmp_78_fu_1822_p3;

assign tmp_85_fu_1905_p2 = (tmp_83_fu_1861_p3 | sel_tmp4_fu_1891_p2);

assign tmp_86_fu_1943_p3 = p_Val2_80_1_cast_fu_1928_p2[32'd49];

assign tmp_87_fu_1987_p2 = (tmp_86_fu_1943_p3 | sel_tmp3_fu_1973_p2);

assign tmp_88_fu_2025_p3 = p_Val2_80_2_cast_fu_2010_p2[32'd49];

assign tmp_89_fu_2069_p2 = (tmp_88_fu_2025_p3 | sel_tmp8_fu_2055_p2);

assign tmp_8_fu_640_p1 = $signed(measured_V_q0);

assign tmp_90_fu_2132_p3 = p_Val2_80_3_cast_fu_2118_p2[32'd49];

assign tmp_91_fu_2176_p2 = (tmp_90_fu_2132_p3 | sel_tmp11_fu_2162_p2);

assign tmp_92_fu_2256_p2 = (tmp_96_fu_2212_p3 | sel_tmp13_fu_2242_p2);

assign tmp_93_fu_2336_p2 = (tmp_97_fu_2292_p3 | sel_tmp15_fu_2322_p2);

assign tmp_94_fu_2434_p2 = (tmp_98_fu_2390_p3 | sel_tmp17_fu_2420_p2);

assign tmp_95_fu_2514_p2 = (tmp_99_fu_2470_p3 | sel_tmp19_fu_2500_p2);

assign tmp_96_fu_2212_p3 = p_Val2_80_4_cast_fu_2198_p2[32'd49];

assign tmp_97_fu_2292_p3 = p_Val2_80_5_cast_fu_2278_p2[32'd49];

assign tmp_98_fu_2390_p3 = p_Val2_80_6_cast_fu_2376_p2[32'd49];

assign tmp_99_fu_2470_p3 = p_Val2_80_7_cast_fu_2456_p2[32'd49];

assign tmp_9_cast_fu_674_p1 = $signed(tmp_9_fu_666_p3);

assign tmp_9_fu_666_p3 = {{last_error_pos_V_0}, {3'd0}};

assign tmp_fu_727_p2 = (tmp_2_fu_713_p2 | tmp_1_fu_707_p2);

assign tmp_s_fu_940_p1 = $unsigned(p_Val2_9_cast_fu_937_p1);

always @ (posedge ap_clk) begin
    p_Val2_5_reg_2615[2:0] <= 3'b000;
    p_Val2_8_reg_2621[2:0] <= 3'b000;
    p_Val2_9_reg_2661[2:0] <= 3'b000;
    p_Val2_4_reg_2666[2:0] <= 3'b000;
    p_Val2_49_reg_2671[2:0] <= 3'b000;
    p_Val2_7_reg_2677[2:0] <= 3'b000;
    p_Val2_10_reg_2727[2:0] <= 3'b000;
    p_Val2_13_reg_2732[2:0] <= 3'b000;
    p_Val2_26_reg_2843[2:0] <= 3'b000;
    p_Val2_37_reg_2858[2:0] <= 3'b000;
    p_shl_reg_2913[15:0] <= 16'b0000000000000000;
    p_shl_cast1_reg_2918[15:0] <= 16'b0000000000000000;
    tmp_82_cast_reg_2926[15:0] <= 16'b0000000000000000;
    r_V_2_reg_2931[15:0] <= 16'b0000000000000000;
    sum_cast_reg_2936[15:0] <= 16'b0000000000000000;
    r_V_2_1_reg_2942[15:0] <= 16'b0000000000000000;
    addconv2_reg_2947[15:0] <= 16'b0000000000000000;
    addconv3_reg_2952[15:0] <= 16'b0000000000000000;
    p_Val2_64_reg_2957[15:0] <= 16'b0000000000000000;
    p_Val2_79_1_reg_2963[15:0] <= 16'b0000000000000000;
    p_Val2_79_2_reg_2969[15:0] <= 16'b0000000000000000;
    r_V_2_3_reg_2975[15:0] <= 16'b0000000000000000;
    r_V_2_4_reg_2980[15:0] <= 16'b0000000000000000;
    r_V_2_5_reg_2985[15:0] <= 16'b0000000000000000;
    addconv4_reg_2990[15:0] <= 16'b0000000000000000;
    r_V_2_7_reg_2995[15:0] <= 16'b0000000000000000;
    tmp_85_cast_cast_reg_3000[32:0] <= 33'b000000000000000000000000000000000;
    tmp_85_cast_cast_reg_3000_pp0_iter1_reg[32:0] <= 33'b000000000000000000000000000000000;
    tmp_80_reg_3009[32:0] <= 33'b000000000000000000000000000000000;
    tmp_80_reg_3009_pp0_iter1_reg[32:0] <= 33'b000000000000000000000000000000000;
    p_Val2_79_3_reg_3033[15:0] <= 16'b0000000000000000;
    p_Val2_79_4_reg_3039[15:0] <= 16'b0000000000000000;
    p_Val2_79_5_reg_3045[15:0] <= 16'b0000000000000000;
    p_Val2_79_6_reg_3066[15:0] <= 16'b0000000000000000;
    p_Val2_79_7_reg_3072[15:0] <= 16'b0000000000000000;
end

endmodule //pid
