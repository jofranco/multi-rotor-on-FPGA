-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity flightmain is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of flightmain is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "flightmain,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.359000,HLS_SYN_LAT=20,HLS_SYN_TPT=20,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=1179,HLS_SYN_LUT=2419}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_3FA999999999999A : STD_LOGIC_VECTOR (63 downto 0) := "0011111110101001100110011001100110011001100110011001100110011010";
    constant ap_const_lv16_4000 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_const_lv17_1C000 : STD_LOGIC_VECTOR (16 downto 0) := "11100000000000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7F1 : STD_LOGIC_VECTOR (10 downto 0) := "11111110001";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal rcCmdIn_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal rcCmdIn_V_ce0 : STD_LOGIC;
    signal rcCmdIn_V_we0 : STD_LOGIC;
    signal rcCmdIn_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal rcCmdIn_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal obj_avd_cmd_V : STD_LOGIC_VECTOR (15 downto 0);
    signal horizon_cmd_V : STD_LOGIC_VECTOR (15 downto 0);
    signal obj_avd_flag_V : STD_LOGIC_VECTOR (15 downto 0);
    signal delay : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal lastrcCmdIn_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lastrcCmdIn_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lastrcCmdIn_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lastrcCmdIn_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal reg_187 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal delay_load_reg_729 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal rcCmdIn_V_addr_reg_724 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_733 : STD_LOGIC_VECTOR (0 downto 0);
    signal rcCmdIn_V_addr_1_reg_738 : STD_LOGIC_VECTOR (2 downto 0);
    signal dp8_fu_205_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_748 : STD_LOGIC_VECTOR (0 downto 0);
    signal rcCmdIn_V_addr_2_reg_753 : STD_LOGIC_VECTOR (2 downto 0);
    signal dp_s_fu_220_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_763 : STD_LOGIC_VECTOR (0 downto 0);
    signal rcCmdIn_V_addr_3_reg_768 : STD_LOGIC_VECTOR (2 downto 0);
    signal dp_4_fu_235_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_778 : STD_LOGIC_VECTOR (0 downto 0);
    signal dp_5_fu_250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal tmp_fu_287_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_reg_788 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal notlhs_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_reg_793 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal notrhs_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_reg_798 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_803 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_368_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_18_reg_808 : STD_LOGIC_VECTOR (62 downto 0);
    signal notlhs1_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_reg_813 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal notrhs1_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs1_reg_818 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_823 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_449_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_25_reg_828 : STD_LOGIC_VECTOR (62 downto 0);
    signal notlhs2_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_reg_833 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal notrhs2_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs2_reg_838 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_843 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_530_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_32_reg_848 : STD_LOGIC_VECTOR (62 downto 0);
    signal notlhs3_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_reg_853 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal notrhs3_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs3_reg_858 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_863 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_reg_868 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_873 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal or_cond4_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_877 : STD_LOGIC_VECTOR (0 downto 0);
    signal rcCmdIn_V_addr_4_gep_fu_146_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal rcCmdIn_V_addr_5_gep_fu_155_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal rcCmdIn_V_addr_6_gep_fu_164_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal grp_fu_173_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i_i_fu_309_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i_i9_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i_i1_fu_471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i_i2_fu_570_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal grp_fu_178_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_1_fu_195_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_fu_199_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_9_fu_210_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_s_fu_214_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_5_fu_225_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_7_fu_229_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_fu_240_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_13_fu_244_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_178_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal res_V_7_fu_255_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_V_fu_259_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal exp_V_8_fu_269_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_s_fu_275_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_291_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_1_fu_301_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_314_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_fu_297_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal res_V_8_fu_336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_V_2_fu_340_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal exp_V_9_fu_350_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_2_fu_356_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_372_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_3_fu_382_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_395_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_20_fu_378_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal res_V_fu_417_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_V_4_fu_421_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal exp_V_10_fu_431_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_4_fu_437_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_453_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_5_fu_463_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_476_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_27_fu_459_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal res_V_9_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_V_6_fu_502_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal exp_V_11_fu_512_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_6_fu_518_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_552_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_7_fu_562_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_575_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_fu_558_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_24_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage8_00001 : BOOLEAN;
    signal ap_block_pp0_stage9_00001 : BOOLEAN;
    signal ap_block_pp0_stage10_00001 : BOOLEAN;
    signal ap_block_pp0_stage11_00001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;

    component flightmain_dcmp_6bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component flightmain_sitodpcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component flightmain_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        rcCmdIn_V_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        rcCmdIn_V_ce0 : IN STD_LOGIC;
        rcCmdIn_V_we0 : IN STD_LOGIC;
        rcCmdIn_V_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        rcCmdIn_V_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        obj_avd_cmd_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        horizon_cmd_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        obj_avd_flag_V : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    flightmain_CTRL_s_axi_U : component flightmain_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        rcCmdIn_V_address0 => rcCmdIn_V_address0,
        rcCmdIn_V_ce0 => rcCmdIn_V_ce0,
        rcCmdIn_V_we0 => rcCmdIn_V_we0,
        rcCmdIn_V_d0 => rcCmdIn_V_d0,
        rcCmdIn_V_q0 => rcCmdIn_V_q0,
        obj_avd_cmd_V => obj_avd_cmd_V,
        horizon_cmd_V => horizon_cmd_V,
        obj_avd_flag_V => obj_avd_flag_V);

    flightmain_dcmp_6bkb_U0 : component flightmain_dcmp_6bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_173_p0,
        din1 => ap_const_lv64_3FA999999999999A,
        opcode => ap_const_lv5_4,
        dout => grp_fu_173_p2);

    flightmain_sitodpcud_U1 : component flightmain_sitodpcud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_178_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_178_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_block_pp0_stage19_subdone = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_11001 = ap_const_boolean_0))) then
                delay <= ap_const_lv1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then
                delay_load_reg_729 <= delay;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_11001 = ap_const_boolean_0))) then
                lastrcCmdIn_V_0 <= rcCmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_11001 = ap_const_boolean_0))) then
                lastrcCmdIn_V_1 <= rcCmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage19_11001 = ap_const_boolean_0))) then
                lastrcCmdIn_V_2 <= rcCmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                lastrcCmdIn_V_3 <= rcCmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0))) then
                notlhs1_reg_813 <= notlhs1_fu_405_p2;
                notrhs1_reg_818 <= notrhs1_fu_411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0))) then
                notlhs2_reg_833 <= notlhs2_fu_486_p2;
                notrhs2_reg_838 <= notrhs2_fu_492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0))) then
                notlhs3_reg_853 <= notlhs3_fu_585_p2;
                notrhs3_reg_858 <= notrhs3_fu_591_p2;
                tmp1_reg_868 <= tmp1_fu_597_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0))) then
                notlhs_reg_793 <= notlhs_fu_324_p2;
                notrhs_reg_798 <= notrhs_fu_330_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0))) then
                or_cond3_reg_873 <= or_cond3_fu_655_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = or_cond3_fu_655_p2))) then
                or_cond4_reg_877 <= or_cond4_fu_673_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (delay_load_reg_729 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)))) then
                reg_187 <= rcCmdIn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0))) then
                tmp_10_reg_763 <= grp_fu_181_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0))) then
                tmp_14_reg_778 <= grp_fu_181_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0))) then
                tmp_16_reg_803 <= grp_fu_173_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_4_reg_748) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0))) then
                tmp_18_reg_808 <= tmp_18_fu_368_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0))) then
                tmp_23_reg_823 <= grp_fu_173_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_10_reg_763) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0))) then
                tmp_25_reg_828 <= tmp_25_fu_449_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0))) then
                tmp_30_reg_843 <= grp_fu_173_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_14_reg_778) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0))) then
                tmp_32_reg_848 <= tmp_32_fu_530_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (delay_load_reg_729 = ap_const_lv1_1))) then
                tmp_3_reg_733 <= grp_fu_181_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0))) then
                tmp_41_reg_863 <= grp_fu_173_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (delay_load_reg_729 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0))) then
                tmp_4_reg_748 <= grp_fu_181_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_3_reg_733) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_11001 = ap_const_boolean_0))) then
                tmp_reg_788 <= tmp_fu_287_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_block_pp0_stage19_subdone, ap_reset_idle_pp0, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_reset_idle_pp0 = ap_const_logic_0) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_idle_pp0_1to1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_reset_idle_pp0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_block_pp0_stage1_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_block_pp0_stage2_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_block_pp0_stage3_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_block_pp0_stage4_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_block_pp0_stage5_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_block_pp0_stage6_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_block_pp0_stage7_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_block_pp0_stage8_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_block_pp0_stage9_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_block_pp0_stage10_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_block_pp0_stage11_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_block_pp0_stage12_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_block_pp0_stage13_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_block_pp0_stage14_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_block_pp0_stage15_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_block_pp0_stage16_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_block_pp0_stage17_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_block_pp0_stage18_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_block_pp0_stage19_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_const_logic_0 = ap_start);
    end process;

        ap_block_state20_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_idle_pp0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_const_logic_0 = ap_enable_reg_pp0_iter0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_const_logic_0 = ap_enable_reg_pp0_iter1)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage19_11001 = ap_const_boolean_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_idle_pp0_0to0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

        dp8_fu_205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_199_p2),32));

        dp_4_fu_235_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_229_p2),32));

        dp_5_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_fu_244_p2),32));

        dp_s_fu_220_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_214_p2),32));

    exp_V_10_fu_431_p2 <= std_logic_vector(signed(ap_const_lv11_7F1) + signed(exp_V_4_fu_421_p4));
    exp_V_11_fu_512_p2 <= std_logic_vector(signed(ap_const_lv11_7F1) + signed(exp_V_6_fu_502_p4));
    exp_V_2_fu_340_p4 <= res_V_8_fu_336_p1(62 downto 52);
    exp_V_4_fu_421_p4 <= res_V_fu_417_p1(62 downto 52);
    exp_V_6_fu_502_p4 <= res_V_9_fu_498_p1(62 downto 52);
    exp_V_8_fu_269_p2 <= std_logic_vector(signed(ap_const_lv11_7F1) + signed(exp_V_fu_259_p4));
    exp_V_9_fu_350_p2 <= std_logic_vector(signed(ap_const_lv11_7F1) + signed(exp_V_2_fu_340_p4));
    exp_V_fu_259_p4 <= res_V_7_fu_255_p1(62 downto 52);

    grp_fu_173_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ret_i_i_i_i_i_i_fu_309_p1, ret_i_i_i_i_i_i9_fu_390_p1, ret_i_i_i_i_i_i1_fu_471_p1, ret_i_i_i_i_i_i2_fu_570_p1, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11 = ap_const_boolean_0))) then 
                grp_fu_173_p0 <= ret_i_i_i_i_i_i2_fu_570_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10 = ap_const_boolean_0))) then 
                grp_fu_173_p0 <= ret_i_i_i_i_i_i1_fu_471_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9 = ap_const_boolean_0))) then 
                grp_fu_173_p0 <= ret_i_i_i_i_i_i9_fu_390_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8 = ap_const_boolean_0))) then 
                grp_fu_173_p0 <= ret_i_i_i_i_i_i_fu_309_p1;
            else 
                grp_fu_173_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_173_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_178_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, dp8_fu_205_p1, dp_s_fu_220_p1, dp_4_fu_235_p1, dp_5_fu_250_p1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5 = ap_const_boolean_0))) then 
                grp_fu_178_p0 <= dp_5_fu_250_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0))) then 
                grp_fu_178_p0 <= dp_4_fu_235_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
                grp_fu_178_p0 <= dp_s_fu_220_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
                grp_fu_178_p0 <= dp8_fu_205_p1;
            else 
                grp_fu_178_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_178_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_181_p2 <= "1" when (rcCmdIn_V_q0 = ap_const_lv16_4000) else "0";
    notlhs1_fu_405_p2 <= "0" when (tmp_21_fu_395_p4 = ap_const_lv11_7FF) else "1";
    notlhs2_fu_486_p2 <= "0" when (tmp_28_fu_476_p4 = ap_const_lv11_7FF) else "1";
    notlhs3_fu_585_p2 <= "0" when (tmp_39_fu_575_p4 = ap_const_lv11_7FF) else "1";
    notlhs_fu_324_p2 <= "0" when (tmp_11_fu_314_p4 = ap_const_lv11_7FF) else "1";
    notrhs1_fu_411_p2 <= "1" when (tmp_20_fu_378_p1 = ap_const_lv52_0) else "0";
    notrhs2_fu_492_p2 <= "1" when (tmp_27_fu_459_p1 = ap_const_lv52_0) else "0";
    notrhs3_fu_591_p2 <= "1" when (tmp_34_fu_558_p1 = ap_const_lv52_0) else "0";
    notrhs_fu_330_p2 <= "1" when (tmp_8_fu_297_p1 = ap_const_lv52_0) else "0";
    or_cond3_fu_655_p2 <= (tmp3_fu_649_p2 and tmp_35_fu_626_p2);
    or_cond4_fu_673_p2 <= (tmp4_fu_667_p2 and tmp_37_fu_643_p2);
    p_Result_1_fu_301_p3 <= (ap_const_lv1_0 & tmp_6_fu_291_p3);
    p_Result_2_fu_356_p5 <= (res_V_8_fu_336_p1(63 downto 63) & exp_V_9_fu_350_p2 & res_V_8_fu_336_p1(51 downto 0));
    p_Result_3_fu_382_p3 <= (ap_const_lv1_0 & tmp_19_fu_372_p3);
    p_Result_4_fu_437_p5 <= (res_V_fu_417_p1(63 downto 63) & exp_V_10_fu_431_p2 & res_V_fu_417_p1(51 downto 0));
    p_Result_5_fu_463_p3 <= (ap_const_lv1_0 & tmp_26_fu_453_p3);
    p_Result_6_fu_518_p5 <= (res_V_9_fu_498_p1(63 downto 63) & exp_V_11_fu_512_p2 & res_V_9_fu_498_p1(51 downto 0));
    p_Result_7_fu_562_p3 <= (ap_const_lv1_0 & tmp_33_fu_552_p3);
    p_Result_s_fu_275_p5 <= (res_V_7_fu_255_p1(63 downto 63) & exp_V_8_fu_269_p2 & res_V_7_fu_255_p1(51 downto 0));
    rcCmdIn_V_addr_1_reg_738 <= ap_const_lv32_1(3 - 1 downto 0);
    rcCmdIn_V_addr_2_reg_753 <= ap_const_lv32_2(3 - 1 downto 0);
    rcCmdIn_V_addr_3_reg_768 <= ap_const_lv32_3(3 - 1 downto 0);
    rcCmdIn_V_addr_4_gep_fu_146_p3 <= ap_const_lv32_1(3 - 1 downto 0);
    rcCmdIn_V_addr_5_gep_fu_155_p3 <= ap_const_lv32_2(3 - 1 downto 0);
    rcCmdIn_V_addr_6_gep_fu_164_p3 <= ap_const_lv32_3(3 - 1 downto 0);
    rcCmdIn_V_addr_reg_724 <= ap_const_lv32_0(3 - 1 downto 0);

    rcCmdIn_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, rcCmdIn_V_addr_reg_724, rcCmdIn_V_addr_1_reg_738, rcCmdIn_V_addr_2_reg_753, rcCmdIn_V_addr_3_reg_768, ap_CS_fsm_pp0_stage12, rcCmdIn_V_addr_4_gep_fu_146_p3, ap_CS_fsm_pp0_stage17, rcCmdIn_V_addr_5_gep_fu_155_p3, ap_CS_fsm_pp0_stage18, rcCmdIn_V_addr_6_gep_fu_164_p3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage17, ap_block_pp0_stage18, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_block_pp0_stage16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage19 = ap_const_boolean_0))) then 
            rcCmdIn_V_address0 <= rcCmdIn_V_addr_6_gep_fu_164_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18 = ap_const_boolean_0))) then 
            rcCmdIn_V_address0 <= rcCmdIn_V_addr_5_gep_fu_155_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17 = ap_const_boolean_0))) then 
            rcCmdIn_V_address0 <= rcCmdIn_V_addr_4_gep_fu_146_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15 = ap_const_boolean_0))) then 
            rcCmdIn_V_address0 <= rcCmdIn_V_addr_3_reg_768;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14 = ap_const_boolean_0))) then 
            rcCmdIn_V_address0 <= rcCmdIn_V_addr_2_reg_753;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13 = ap_const_boolean_0))) then 
            rcCmdIn_V_address0 <= rcCmdIn_V_addr_1_reg_738;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16 = ap_const_boolean_0)))) then 
            rcCmdIn_V_address0 <= rcCmdIn_V_addr_reg_724;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
            rcCmdIn_V_address0 <= ap_const_lv32_3(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
            rcCmdIn_V_address0 <= ap_const_lv32_2(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
            rcCmdIn_V_address0 <= ap_const_lv32_1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            rcCmdIn_V_address0 <= ap_const_lv32_0(3 - 1 downto 0);
        else 
            rcCmdIn_V_address0 <= "XXX";
        end if; 
    end process;


    rcCmdIn_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage19_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_11001 = ap_const_boolean_0)))) then 
            rcCmdIn_V_ce0 <= ap_const_logic_1;
        else 
            rcCmdIn_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rcCmdIn_V_d0_assign_proc : process(ap_enable_reg_pp0_iter0, lastrcCmdIn_V_0, lastrcCmdIn_V_1, lastrcCmdIn_V_2, lastrcCmdIn_V_3, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15 = ap_const_boolean_0))) then 
                rcCmdIn_V_d0 <= lastrcCmdIn_V_3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14 = ap_const_boolean_0))) then 
                rcCmdIn_V_d0 <= lastrcCmdIn_V_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13 = ap_const_boolean_0))) then 
                rcCmdIn_V_d0 <= lastrcCmdIn_V_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12 = ap_const_boolean_0))) then 
                rcCmdIn_V_d0 <= lastrcCmdIn_V_0;
            else 
                rcCmdIn_V_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            rcCmdIn_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rcCmdIn_V_we0_assign_proc : process(ap_enable_reg_pp0_iter0, delay_load_reg_729, or_cond3_fu_655_p2, or_cond3_reg_873, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, or_cond4_fu_673_p2, or_cond4_reg_877, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0) and (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_1 = or_cond3_fu_655_p2)) or ((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_1 = or_cond4_fu_673_p2)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_11001 = ap_const_boolean_0) and (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_1 = or_cond3_reg_873)) or ((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_1 = or_cond4_reg_877)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_1 = or_cond3_reg_873)) or ((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_1 = or_cond4_reg_877))) and (ap_block_pp0_stage14_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_1 = or_cond3_reg_873)) or ((delay_load_reg_729 = ap_const_lv1_1) and (ap_const_lv1_1 = or_cond4_reg_877))) and (ap_block_pp0_stage15_11001 = ap_const_boolean_0)))) then 
            rcCmdIn_V_we0 <= ap_const_logic_1;
        else 
            rcCmdIn_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    res_V_7_fu_255_p1 <= grp_fu_178_p1;
    res_V_8_fu_336_p1 <= grp_fu_178_p1;
    res_V_9_fu_498_p1 <= grp_fu_178_p1;
    res_V_fu_417_p1 <= grp_fu_178_p1;
    ret_i_i_i_i_i_i1_fu_471_p1 <= p_Result_5_fu_463_p3;
    ret_i_i_i_i_i_i2_fu_570_p1 <= p_Result_7_fu_562_p3;
    ret_i_i_i_i_i_i9_fu_390_p1 <= p_Result_3_fu_382_p3;
    ret_i_i_i_i_i_i_fu_309_p1 <= p_Result_1_fu_301_p3;
    tmp1_fu_597_p2 <= (tmp_24_fu_538_p2 and tmp_31_fu_547_p2);
    tmp2_fu_632_p2 <= (tmp_17_fu_612_p2 and tmp_42_fu_621_p2);
    tmp3_fu_649_p2 <= (tmp_36_fu_638_p2 and tmp_37_fu_643_p2);
    tmp4_fu_667_p2 <= (tmp_36_fu_638_p2 and tmp_38_fu_661_p2);
    tmp_11_fu_314_p4 <= tmp_6_fu_291_p3(62 downto 52);
        tmp_12_fu_240_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_187),17));

    tmp_13_fu_244_p2 <= std_logic_vector(signed(ap_const_lv17_1C000) + signed(tmp_12_fu_240_p1));
    tmp_15_fu_608_p2 <= (notrhs_reg_798 or notlhs_reg_793);
    tmp_17_fu_612_p2 <= (tmp_15_fu_608_p2 and tmp_16_reg_803);
    tmp_18_fu_368_p1 <= p_Result_2_fu_356_p5(63 - 1 downto 0);
    tmp_19_fu_372_p3 <= 
        ap_const_lv63_0 when (tmp_4_reg_748(0) = '1') else 
        tmp_18_reg_808;
        tmp_1_fu_195_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_187),17));

    tmp_20_fu_378_p1 <= tmp_19_fu_372_p3(52 - 1 downto 0);
    tmp_21_fu_395_p4 <= tmp_19_fu_372_p3(62 downto 52);
    tmp_22_fu_534_p2 <= (notrhs1_reg_818 or notlhs1_reg_813);
    tmp_24_fu_538_p2 <= (tmp_22_fu_534_p2 and tmp_23_reg_823);
    tmp_25_fu_449_p1 <= p_Result_4_fu_437_p5(63 - 1 downto 0);
    tmp_26_fu_453_p3 <= 
        ap_const_lv63_0 when (tmp_10_reg_763(0) = '1') else 
        tmp_25_reg_828;
    tmp_27_fu_459_p1 <= tmp_26_fu_453_p3(52 - 1 downto 0);
    tmp_28_fu_476_p4 <= tmp_26_fu_453_p3(62 downto 52);
    tmp_29_fu_543_p2 <= (notrhs2_reg_838 or notlhs2_reg_833);
    tmp_2_fu_199_p2 <= std_logic_vector(signed(ap_const_lv17_1C000) + signed(tmp_1_fu_195_p1));
    tmp_31_fu_547_p2 <= (tmp_29_fu_543_p2 and tmp_30_reg_843);
    tmp_32_fu_530_p1 <= p_Result_6_fu_518_p5(63 - 1 downto 0);
    tmp_33_fu_552_p3 <= 
        ap_const_lv63_0 when (tmp_14_reg_778(0) = '1') else 
        tmp_32_reg_848;
    tmp_34_fu_558_p1 <= tmp_33_fu_552_p3(52 - 1 downto 0);
    tmp_35_fu_626_p2 <= "1" when (obj_avd_cmd_V = ap_const_lv16_0) else "0";
    tmp_36_fu_638_p2 <= (tmp2_fu_632_p2 and tmp1_reg_868);
    tmp_37_fu_643_p2 <= "1" when (horizon_cmd_V = ap_const_lv16_0) else "0";
    tmp_38_fu_661_p2 <= "1" when (obj_avd_flag_V = ap_const_lv16_0) else "0";
    tmp_39_fu_575_p4 <= tmp_33_fu_552_p3(62 downto 52);
    tmp_40_fu_617_p2 <= (notrhs3_reg_858 or notlhs3_reg_853);
    tmp_42_fu_621_p2 <= (tmp_40_fu_617_p2 and tmp_41_reg_863);
        tmp_5_fu_225_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_187),17));

    tmp_6_fu_291_p3 <= 
        ap_const_lv63_0 when (tmp_3_reg_733(0) = '1') else 
        tmp_reg_788;
    tmp_7_fu_229_p2 <= std_logic_vector(signed(ap_const_lv17_1C000) + signed(tmp_5_fu_225_p1));
    tmp_8_fu_297_p1 <= tmp_6_fu_291_p3(52 - 1 downto 0);
        tmp_9_fu_210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_187),17));

    tmp_fu_287_p1 <= p_Result_s_fu_275_p5(63 - 1 downto 0);
    tmp_s_fu_214_p2 <= std_logic_vector(signed(ap_const_lv17_1C000) + signed(tmp_9_fu_210_p1));
end behav;
