// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="flightmain,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.359000,HLS_SYN_LAT=20,HLS_SYN_TPT=20,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=1179,HLS_SYN_LUT=2419}" *)

module flightmain (
        ap_clk,
        ap_rst_n,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 20'd1;
parameter    ap_ST_fsm_pp0_stage1 = 20'd2;
parameter    ap_ST_fsm_pp0_stage2 = 20'd4;
parameter    ap_ST_fsm_pp0_stage3 = 20'd8;
parameter    ap_ST_fsm_pp0_stage4 = 20'd16;
parameter    ap_ST_fsm_pp0_stage5 = 20'd32;
parameter    ap_ST_fsm_pp0_stage6 = 20'd64;
parameter    ap_ST_fsm_pp0_stage7 = 20'd128;
parameter    ap_ST_fsm_pp0_stage8 = 20'd256;
parameter    ap_ST_fsm_pp0_stage9 = 20'd512;
parameter    ap_ST_fsm_pp0_stage10 = 20'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 20'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 20'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 20'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 20'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 20'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 20'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 20'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 20'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 20'd524288;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_ready;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
reg   [2:0] rcCmdIn_V_address0;
reg    rcCmdIn_V_ce0;
reg    rcCmdIn_V_we0;
reg   [15:0] rcCmdIn_V_d0;
wire   [15:0] rcCmdIn_V_q0;
wire   [15:0] obj_avd_cmd_V;
wire   [15:0] horizon_cmd_V;
wire   [15:0] obj_avd_flag_V;
reg   [0:0] delay;
reg   [15:0] lastrcCmdIn_V_0;
reg   [15:0] lastrcCmdIn_V_1;
reg   [15:0] lastrcCmdIn_V_2;
reg   [15:0] lastrcCmdIn_V_3;
reg   [15:0] reg_187;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] delay_load_reg_729;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [2:0] rcCmdIn_V_addr_reg_724;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state21_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] grp_fu_181_p2;
reg   [0:0] tmp_3_reg_733;
wire   [2:0] rcCmdIn_V_addr_1_reg_738;
wire  signed [31:0] dp8_fu_205_p1;
reg   [0:0] tmp_4_reg_748;
wire   [2:0] rcCmdIn_V_addr_2_reg_753;
wire  signed [31:0] dp_s_fu_220_p1;
reg   [0:0] tmp_10_reg_763;
wire   [2:0] rcCmdIn_V_addr_3_reg_768;
wire  signed [31:0] dp_4_fu_235_p1;
reg   [0:0] tmp_14_reg_778;
wire  signed [31:0] dp_5_fu_250_p1;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [62:0] tmp_fu_287_p1;
reg   [62:0] tmp_reg_788;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire   [0:0] notlhs_fu_324_p2;
reg   [0:0] notlhs_reg_793;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [0:0] notrhs_fu_330_p2;
reg   [0:0] notrhs_reg_798;
wire   [0:0] grp_fu_173_p2;
reg   [0:0] tmp_16_reg_803;
wire   [62:0] tmp_18_fu_368_p1;
reg   [62:0] tmp_18_reg_808;
wire   [0:0] notlhs1_fu_405_p2;
reg   [0:0] notlhs1_reg_813;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire   [0:0] notrhs1_fu_411_p2;
reg   [0:0] notrhs1_reg_818;
reg   [0:0] tmp_23_reg_823;
wire   [62:0] tmp_25_fu_449_p1;
reg   [62:0] tmp_25_reg_828;
wire   [0:0] notlhs2_fu_486_p2;
reg   [0:0] notlhs2_reg_833;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire   [0:0] notrhs2_fu_492_p2;
reg   [0:0] notrhs2_reg_838;
reg   [0:0] tmp_30_reg_843;
wire   [62:0] tmp_32_fu_530_p1;
reg   [62:0] tmp_32_reg_848;
wire   [0:0] notlhs3_fu_585_p2;
reg   [0:0] notlhs3_reg_853;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [0:0] notrhs3_fu_591_p2;
reg   [0:0] notrhs3_reg_858;
reg   [0:0] tmp_41_reg_863;
wire   [0:0] tmp1_fu_597_p2;
reg   [0:0] tmp1_reg_868;
wire   [0:0] or_cond3_fu_655_p2;
reg   [0:0] or_cond3_reg_873;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire   [0:0] or_cond4_fu_673_p2;
reg   [0:0] or_cond4_reg_877;
wire   [2:0] rcCmdIn_V_addr_4_gep_fu_146_p3;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
wire   [2:0] rcCmdIn_V_addr_5_gep_fu_155_p3;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire   [2:0] rcCmdIn_V_addr_6_gep_fu_164_p3;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire    ap_block_pp0_stage16;
reg   [63:0] grp_fu_173_p0;
wire   [63:0] ret_i_i_i_i_i_i_fu_309_p1;
wire   [63:0] ret_i_i_i_i_i_i9_fu_390_p1;
wire   [63:0] ret_i_i_i_i_i_i1_fu_471_p1;
wire   [63:0] ret_i_i_i_i_i_i2_fu_570_p1;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
reg  signed [31:0] grp_fu_178_p0;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire  signed [16:0] tmp_1_fu_195_p1;
wire   [16:0] tmp_2_fu_199_p2;
wire  signed [16:0] tmp_9_fu_210_p1;
wire   [16:0] tmp_s_fu_214_p2;
wire  signed [16:0] tmp_5_fu_225_p1;
wire   [16:0] tmp_7_fu_229_p2;
wire  signed [16:0] tmp_12_fu_240_p1;
wire   [16:0] tmp_13_fu_244_p2;
wire   [63:0] grp_fu_178_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] res_V_7_fu_255_p1;
wire   [10:0] exp_V_fu_259_p4;
wire   [10:0] exp_V_8_fu_269_p2;
wire   [63:0] p_Result_s_fu_275_p5;
wire   [62:0] tmp_6_fu_291_p3;
wire   [63:0] p_Result_1_fu_301_p3;
wire   [10:0] tmp_11_fu_314_p4;
wire   [51:0] tmp_8_fu_297_p1;
wire   [63:0] res_V_8_fu_336_p1;
wire   [10:0] exp_V_2_fu_340_p4;
wire   [10:0] exp_V_9_fu_350_p2;
wire   [63:0] p_Result_2_fu_356_p5;
wire   [62:0] tmp_19_fu_372_p3;
wire   [63:0] p_Result_3_fu_382_p3;
wire   [10:0] tmp_21_fu_395_p4;
wire   [51:0] tmp_20_fu_378_p1;
wire   [63:0] res_V_fu_417_p1;
wire   [10:0] exp_V_4_fu_421_p4;
wire   [10:0] exp_V_10_fu_431_p2;
wire   [63:0] p_Result_4_fu_437_p5;
wire   [62:0] tmp_26_fu_453_p3;
wire   [63:0] p_Result_5_fu_463_p3;
wire   [10:0] tmp_28_fu_476_p4;
wire   [51:0] tmp_27_fu_459_p1;
wire   [63:0] res_V_9_fu_498_p1;
wire   [10:0] exp_V_6_fu_502_p4;
wire   [10:0] exp_V_11_fu_512_p2;
wire   [63:0] p_Result_6_fu_518_p5;
wire   [0:0] tmp_22_fu_534_p2;
wire   [0:0] tmp_29_fu_543_p2;
wire   [62:0] tmp_33_fu_552_p3;
wire   [63:0] p_Result_7_fu_562_p3;
wire   [10:0] tmp_39_fu_575_p4;
wire   [51:0] tmp_34_fu_558_p1;
wire   [0:0] tmp_24_fu_538_p2;
wire   [0:0] tmp_31_fu_547_p2;
wire   [0:0] tmp_15_fu_608_p2;
wire   [0:0] tmp_40_fu_617_p2;
wire   [0:0] tmp_17_fu_612_p2;
wire   [0:0] tmp_42_fu_621_p2;
wire   [0:0] tmp2_fu_632_p2;
wire   [0:0] tmp_36_fu_638_p2;
wire   [0:0] tmp_37_fu_643_p2;
wire   [0:0] tmp3_fu_649_p2;
wire   [0:0] tmp_35_fu_626_p2;
wire   [0:0] tmp_38_fu_661_p2;
wire   [0:0] tmp4_fu_667_p2;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage9_00001;
wire    ap_block_pp0_stage10_00001;
wire    ap_block_pp0_stage11_00001;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 delay = 1'd0;
#0 lastrcCmdIn_V_0 = 16'd0;
#0 lastrcCmdIn_V_1 = 16'd0;
#0 lastrcCmdIn_V_2 = 16'd0;
#0 lastrcCmdIn_V_3 = 16'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

flightmain_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
flightmain_CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .rcCmdIn_V_address0(rcCmdIn_V_address0),
    .rcCmdIn_V_ce0(rcCmdIn_V_ce0),
    .rcCmdIn_V_we0(rcCmdIn_V_we0),
    .rcCmdIn_V_d0(rcCmdIn_V_d0),
    .rcCmdIn_V_q0(rcCmdIn_V_q0),
    .obj_avd_cmd_V(obj_avd_cmd_V),
    .horizon_cmd_V(horizon_cmd_V),
    .obj_avd_flag_V(obj_avd_flag_V)
);

flightmain_dcmp_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
flightmain_dcmp_6bkb_U0(
    .din0(grp_fu_173_p0),
    .din1(64'd4587366580439587226),
    .opcode(5'd4),
    .dout(grp_fu_173_p2)
);

flightmain_sitodpcud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
flightmain_sitodpcud_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_178_p0),
    .ce(1'b1),
    .dout(grp_fu_178_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19_subdone == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0))) begin
        delay <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        delay_load_reg_729 <= delay;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_11001 == 1'b0))) begin
        lastrcCmdIn_V_0 <= rcCmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_11001 == 1'b0))) begin
        lastrcCmdIn_V_1 <= rcCmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0))) begin
        lastrcCmdIn_V_2 <= rcCmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        lastrcCmdIn_V_3 <= rcCmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0))) begin
        notlhs1_reg_813 <= notlhs1_fu_405_p2;
        notrhs1_reg_818 <= notrhs1_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0))) begin
        notlhs2_reg_833 <= notlhs2_fu_486_p2;
        notrhs2_reg_838 <= notrhs2_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0))) begin
        notlhs3_reg_853 <= notlhs3_fu_585_p2;
        notrhs3_reg_858 <= notrhs3_fu_591_p2;
        tmp1_reg_868 <= tmp1_fu_597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0))) begin
        notlhs_reg_793 <= notlhs_fu_324_p2;
        notrhs_reg_798 <= notrhs_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0))) begin
        or_cond3_reg_873 <= or_cond3_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0) & (1'd0 == or_cond3_fu_655_p2))) begin
        or_cond4_reg_877 <= or_cond4_fu_673_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (delay_load_reg_729 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)))) begin
        reg_187 <= rcCmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
        tmp_10_reg_763 <= grp_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0))) begin
        tmp_14_reg_778 <= grp_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0))) begin
        tmp_16_reg_803 <= grp_fu_173_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((delay_load_reg_729 == 1'd1) & (1'd0 == tmp_4_reg_748) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0))) begin
        tmp_18_reg_808 <= tmp_18_fu_368_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0))) begin
        tmp_23_reg_823 <= grp_fu_173_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((delay_load_reg_729 == 1'd1) & (1'd0 == tmp_10_reg_763) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0))) begin
        tmp_25_reg_828 <= tmp_25_fu_449_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0))) begin
        tmp_30_reg_843 <= grp_fu_173_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((delay_load_reg_729 == 1'd1) & (1'd0 == tmp_14_reg_778) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0))) begin
        tmp_32_reg_848 <= tmp_32_fu_530_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (delay_load_reg_729 == 1'd1))) begin
        tmp_3_reg_733 <= grp_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0))) begin
        tmp_41_reg_863 <= grp_fu_173_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (delay_load_reg_729 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        tmp_4_reg_748 <= grp_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((delay_load_reg_729 == 1'd1) & (1'd0 == tmp_3_reg_733) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0))) begin
        tmp_reg_788 <= tmp_fu_287_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_idle_pp0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_enable_reg_pp0_iter0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_enable_reg_pp0_iter1)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_idle_pp0_0to0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11 == 1'b0))) begin
            grp_fu_173_p0 = ret_i_i_i_i_i_i2_fu_570_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10 == 1'b0))) begin
            grp_fu_173_p0 = ret_i_i_i_i_i_i1_fu_471_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9 == 1'b0))) begin
            grp_fu_173_p0 = ret_i_i_i_i_i_i9_fu_390_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8 == 1'b0))) begin
            grp_fu_173_p0 = ret_i_i_i_i_i_i_fu_309_p1;
        end else begin
            grp_fu_173_p0 = 'bx;
        end
    end else begin
        grp_fu_173_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5 == 1'b0))) begin
            grp_fu_178_p0 = dp_5_fu_250_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0))) begin
            grp_fu_178_p0 = dp_4_fu_235_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
            grp_fu_178_p0 = dp_s_fu_220_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
            grp_fu_178_p0 = dp8_fu_205_p1;
        end else begin
            grp_fu_178_p0 = 'bx;
        end
    end else begin
        grp_fu_178_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19 == 1'b0))) begin
        rcCmdIn_V_address0 = rcCmdIn_V_addr_6_gep_fu_164_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18 == 1'b0))) begin
        rcCmdIn_V_address0 = rcCmdIn_V_addr_5_gep_fu_155_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17 == 1'b0))) begin
        rcCmdIn_V_address0 = rcCmdIn_V_addr_4_gep_fu_146_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15 == 1'b0))) begin
        rcCmdIn_V_address0 = rcCmdIn_V_addr_3_reg_768;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14 == 1'b0))) begin
        rcCmdIn_V_address0 = rcCmdIn_V_addr_2_reg_753;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13 == 1'b0))) begin
        rcCmdIn_V_address0 = rcCmdIn_V_addr_1_reg_738;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16 == 1'b0)))) begin
        rcCmdIn_V_address0 = rcCmdIn_V_addr_reg_724;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
        rcCmdIn_V_address0 = 32'd3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
        rcCmdIn_V_address0 = 32'd2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0))) begin
        rcCmdIn_V_address0 = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0 == 1'b0))) begin
        rcCmdIn_V_address0 = 32'd0;
    end else begin
        rcCmdIn_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_11001 == 1'b0)))) begin
        rcCmdIn_V_ce0 = 1'b1;
    end else begin
        rcCmdIn_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15 == 1'b0))) begin
            rcCmdIn_V_d0 = lastrcCmdIn_V_3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14 == 1'b0))) begin
            rcCmdIn_V_d0 = lastrcCmdIn_V_2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13 == 1'b0))) begin
            rcCmdIn_V_d0 = lastrcCmdIn_V_1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12 == 1'b0))) begin
            rcCmdIn_V_d0 = lastrcCmdIn_V_0;
        end else begin
            rcCmdIn_V_d0 = 'bx;
        end
    end else begin
        rcCmdIn_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0) & (((delay_load_reg_729 == 1'd1) & (1'd1 == or_cond3_fu_655_p2)) | ((delay_load_reg_729 == 1'd1) & (1'd1 == or_cond4_fu_673_p2)))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0) & (((delay_load_reg_729 == 1'd1) & (1'd1 == or_cond3_reg_873)) | ((delay_load_reg_729 == 1'd1) & (1'd1 == or_cond4_reg_877)))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (((delay_load_reg_729 == 1'd1) & (1'd1 == or_cond3_reg_873)) | ((delay_load_reg_729 == 1'd1) & (1'd1 == or_cond4_reg_877))) & (ap_block_pp0_stage14_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (((delay_load_reg_729 == 1'd1) & (1'd1 == or_cond3_reg_873)) | ((delay_load_reg_729 == 1'd1) & (1'd1 == or_cond4_reg_877))) & (ap_block_pp0_stage15_11001 == 1'b0)))) begin
        rcCmdIn_V_we0 = 1'b1;
    end else begin
        rcCmdIn_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_subdone == 1'b0) & (ap_reset_idle_pp0 == 1'b0) & ~((1'b0 == ap_start) & (1'b1 == ap_idle_pp0_1to1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_reset_idle_pp0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((ap_block_pp0_stage2_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((ap_block_pp0_stage4_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((ap_block_pp0_stage5_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((ap_block_pp0_stage6_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((ap_block_pp0_stage7_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((ap_block_pp0_stage8_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((ap_block_pp0_stage9_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((ap_block_pp0_stage10_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((ap_block_pp0_stage11_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((ap_block_pp0_stage12_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((ap_block_pp0_stage13_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((ap_block_pp0_stage14_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((ap_block_pp0_stage15_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((ap_block_pp0_stage16_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((ap_block_pp0_stage17_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((ap_block_pp0_stage18_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((ap_block_pp0_stage19_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b0 == ap_start) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_start) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (1'b0 == ap_start);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign dp8_fu_205_p1 = $signed(tmp_2_fu_199_p2);

assign dp_4_fu_235_p1 = $signed(tmp_7_fu_229_p2);

assign dp_5_fu_250_p1 = $signed(tmp_13_fu_244_p2);

assign dp_s_fu_220_p1 = $signed(tmp_s_fu_214_p2);

assign exp_V_10_fu_431_p2 = ($signed(11'd2033) + $signed(exp_V_4_fu_421_p4));

assign exp_V_11_fu_512_p2 = ($signed(11'd2033) + $signed(exp_V_6_fu_502_p4));

assign exp_V_2_fu_340_p4 = {{res_V_8_fu_336_p1[62:52]}};

assign exp_V_4_fu_421_p4 = {{res_V_fu_417_p1[62:52]}};

assign exp_V_6_fu_502_p4 = {{res_V_9_fu_498_p1[62:52]}};

assign exp_V_8_fu_269_p2 = ($signed(11'd2033) + $signed(exp_V_fu_259_p4));

assign exp_V_9_fu_350_p2 = ($signed(11'd2033) + $signed(exp_V_2_fu_340_p4));

assign exp_V_fu_259_p4 = {{res_V_7_fu_255_p1[62:52]}};

assign grp_fu_181_p2 = ((rcCmdIn_V_q0 == 16'd16384) ? 1'b1 : 1'b0);

assign notlhs1_fu_405_p2 = ((tmp_21_fu_395_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs2_fu_486_p2 = ((tmp_28_fu_476_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs3_fu_585_p2 = ((tmp_39_fu_575_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs_fu_324_p2 = ((tmp_11_fu_314_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notrhs1_fu_411_p2 = ((tmp_20_fu_378_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_492_p2 = ((tmp_27_fu_459_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_591_p2 = ((tmp_34_fu_558_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_330_p2 = ((tmp_8_fu_297_p1 == 52'd0) ? 1'b1 : 1'b0);

assign or_cond3_fu_655_p2 = (tmp3_fu_649_p2 & tmp_35_fu_626_p2);

assign or_cond4_fu_673_p2 = (tmp4_fu_667_p2 & tmp_37_fu_643_p2);

assign p_Result_1_fu_301_p3 = {{1'd0}, {tmp_6_fu_291_p3}};

assign p_Result_2_fu_356_p5 = {{res_V_8_fu_336_p1[63:63]}, {exp_V_9_fu_350_p2}, {res_V_8_fu_336_p1[51:0]}};

assign p_Result_3_fu_382_p3 = {{1'd0}, {tmp_19_fu_372_p3}};

assign p_Result_4_fu_437_p5 = {{res_V_fu_417_p1[63:63]}, {exp_V_10_fu_431_p2}, {res_V_fu_417_p1[51:0]}};

assign p_Result_5_fu_463_p3 = {{1'd0}, {tmp_26_fu_453_p3}};

assign p_Result_6_fu_518_p5 = {{res_V_9_fu_498_p1[63:63]}, {exp_V_11_fu_512_p2}, {res_V_9_fu_498_p1[51:0]}};

assign p_Result_7_fu_562_p3 = {{1'd0}, {tmp_33_fu_552_p3}};

assign p_Result_s_fu_275_p5 = {{res_V_7_fu_255_p1[63:63]}, {exp_V_8_fu_269_p2}, {res_V_7_fu_255_p1[51:0]}};

assign rcCmdIn_V_addr_1_reg_738 = 32'd1;

assign rcCmdIn_V_addr_2_reg_753 = 32'd2;

assign rcCmdIn_V_addr_3_reg_768 = 32'd3;

assign rcCmdIn_V_addr_4_gep_fu_146_p3 = 32'd1;

assign rcCmdIn_V_addr_5_gep_fu_155_p3 = 32'd2;

assign rcCmdIn_V_addr_6_gep_fu_164_p3 = 32'd3;

assign rcCmdIn_V_addr_reg_724 = 32'd0;

assign res_V_7_fu_255_p1 = grp_fu_178_p1;

assign res_V_8_fu_336_p1 = grp_fu_178_p1;

assign res_V_9_fu_498_p1 = grp_fu_178_p1;

assign res_V_fu_417_p1 = grp_fu_178_p1;

assign ret_i_i_i_i_i_i1_fu_471_p1 = p_Result_5_fu_463_p3;

assign ret_i_i_i_i_i_i2_fu_570_p1 = p_Result_7_fu_562_p3;

assign ret_i_i_i_i_i_i9_fu_390_p1 = p_Result_3_fu_382_p3;

assign ret_i_i_i_i_i_i_fu_309_p1 = p_Result_1_fu_301_p3;

assign tmp1_fu_597_p2 = (tmp_24_fu_538_p2 & tmp_31_fu_547_p2);

assign tmp2_fu_632_p2 = (tmp_17_fu_612_p2 & tmp_42_fu_621_p2);

assign tmp3_fu_649_p2 = (tmp_36_fu_638_p2 & tmp_37_fu_643_p2);

assign tmp4_fu_667_p2 = (tmp_36_fu_638_p2 & tmp_38_fu_661_p2);

assign tmp_11_fu_314_p4 = {{tmp_6_fu_291_p3[62:52]}};

assign tmp_12_fu_240_p1 = $signed(reg_187);

assign tmp_13_fu_244_p2 = ($signed(17'd114688) + $signed(tmp_12_fu_240_p1));

assign tmp_15_fu_608_p2 = (notrhs_reg_798 | notlhs_reg_793);

assign tmp_17_fu_612_p2 = (tmp_15_fu_608_p2 & tmp_16_reg_803);

assign tmp_18_fu_368_p1 = p_Result_2_fu_356_p5[62:0];

assign tmp_19_fu_372_p3 = ((tmp_4_reg_748[0:0] === 1'b1) ? 63'd0 : tmp_18_reg_808);

assign tmp_1_fu_195_p1 = $signed(reg_187);

assign tmp_20_fu_378_p1 = tmp_19_fu_372_p3[51:0];

assign tmp_21_fu_395_p4 = {{tmp_19_fu_372_p3[62:52]}};

assign tmp_22_fu_534_p2 = (notrhs1_reg_818 | notlhs1_reg_813);

assign tmp_24_fu_538_p2 = (tmp_22_fu_534_p2 & tmp_23_reg_823);

assign tmp_25_fu_449_p1 = p_Result_4_fu_437_p5[62:0];

assign tmp_26_fu_453_p3 = ((tmp_10_reg_763[0:0] === 1'b1) ? 63'd0 : tmp_25_reg_828);

assign tmp_27_fu_459_p1 = tmp_26_fu_453_p3[51:0];

assign tmp_28_fu_476_p4 = {{tmp_26_fu_453_p3[62:52]}};

assign tmp_29_fu_543_p2 = (notrhs2_reg_838 | notlhs2_reg_833);

assign tmp_2_fu_199_p2 = ($signed(17'd114688) + $signed(tmp_1_fu_195_p1));

assign tmp_31_fu_547_p2 = (tmp_29_fu_543_p2 & tmp_30_reg_843);

assign tmp_32_fu_530_p1 = p_Result_6_fu_518_p5[62:0];

assign tmp_33_fu_552_p3 = ((tmp_14_reg_778[0:0] === 1'b1) ? 63'd0 : tmp_32_reg_848);

assign tmp_34_fu_558_p1 = tmp_33_fu_552_p3[51:0];

assign tmp_35_fu_626_p2 = ((obj_avd_cmd_V == 16'd0) ? 1'b1 : 1'b0);

assign tmp_36_fu_638_p2 = (tmp2_fu_632_p2 & tmp1_reg_868);

assign tmp_37_fu_643_p2 = ((horizon_cmd_V == 16'd0) ? 1'b1 : 1'b0);

assign tmp_38_fu_661_p2 = ((obj_avd_flag_V == 16'd0) ? 1'b1 : 1'b0);

assign tmp_39_fu_575_p4 = {{tmp_33_fu_552_p3[62:52]}};

assign tmp_40_fu_617_p2 = (notrhs3_reg_858 | notlhs3_reg_853);

assign tmp_42_fu_621_p2 = (tmp_40_fu_617_p2 & tmp_41_reg_863);

assign tmp_5_fu_225_p1 = $signed(reg_187);

assign tmp_6_fu_291_p3 = ((tmp_3_reg_733[0:0] === 1'b1) ? 63'd0 : tmp_reg_788);

assign tmp_7_fu_229_p2 = ($signed(17'd114688) + $signed(tmp_5_fu_225_p1));

assign tmp_8_fu_297_p1 = tmp_6_fu_291_p3[51:0];

assign tmp_9_fu_210_p1 = $signed(reg_187);

assign tmp_fu_287_p1 = p_Result_s_fu_275_p5[62:0];

assign tmp_s_fu_214_p2 = ($signed(17'd114688) + $signed(tmp_9_fu_210_p1));

endmodule //flightmain
