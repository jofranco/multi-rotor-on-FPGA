// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _flightmain_HH_
#define _flightmain_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "flightmain_CTRL_s_axi.h"
#include "flightmain_TEST_s_axi.h"
#include "flightmain_OUT_r_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_OUT_R_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUT_R_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_DATA_WIDTH = 32,
         unsigned int C_M_AXI_OUT_R_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32,
         unsigned int C_S_AXI_TEST_ADDR_WIDTH = 15,
         unsigned int C_S_AXI_TEST_DATA_WIDTH = 32>
struct flightmain : public sc_module {
    // Port declarations 82
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_OUT_r_AWVALID;
    sc_in< sc_logic > m_axi_OUT_r_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_ADDR_WIDTH> > m_axi_OUT_r_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_AWID;
    sc_out< sc_lv<8> > m_axi_OUT_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_OUT_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_OUT_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_OUT_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_OUT_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUT_R_AWUSER_WIDTH> > m_axi_OUT_r_AWUSER;
    sc_out< sc_logic > m_axi_OUT_r_WVALID;
    sc_in< sc_logic > m_axi_OUT_r_WREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH> > m_axi_OUT_r_WDATA;
    sc_out< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH/8> > m_axi_OUT_r_WSTRB;
    sc_out< sc_logic > m_axi_OUT_r_WLAST;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_WID;
    sc_out< sc_uint<C_M_AXI_OUT_R_WUSER_WIDTH> > m_axi_OUT_r_WUSER;
    sc_out< sc_logic > m_axi_OUT_r_ARVALID;
    sc_in< sc_logic > m_axi_OUT_r_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_ADDR_WIDTH> > m_axi_OUT_r_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_ARID;
    sc_out< sc_lv<8> > m_axi_OUT_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_OUT_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_OUT_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_OUT_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_OUT_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUT_R_ARUSER_WIDTH> > m_axi_OUT_r_ARUSER;
    sc_in< sc_logic > m_axi_OUT_r_RVALID;
    sc_out< sc_logic > m_axi_OUT_r_RREADY;
    sc_in< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH> > m_axi_OUT_r_RDATA;
    sc_in< sc_logic > m_axi_OUT_r_RLAST;
    sc_in< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_RID;
    sc_in< sc_uint<C_M_AXI_OUT_R_RUSER_WIDTH> > m_axi_OUT_r_RUSER;
    sc_in< sc_lv<2> > m_axi_OUT_r_RRESP;
    sc_in< sc_logic > m_axi_OUT_r_BVALID;
    sc_out< sc_logic > m_axi_OUT_r_BREADY;
    sc_in< sc_lv<2> > m_axi_OUT_r_BRESP;
    sc_in< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_BID;
    sc_in< sc_uint<C_M_AXI_OUT_R_BUSER_WIDTH> > m_axi_OUT_r_BUSER;
    sc_in< sc_logic > s_axi_CTRL_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_WVALID;
    sc_out< sc_logic > s_axi_CTRL_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_CTRL_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_RVALID;
    sc_in< sc_logic > s_axi_CTRL_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BRESP;
    sc_out< sc_logic > interrupt;
    sc_in< sc_logic > s_axi_TEST_AWVALID;
    sc_out< sc_logic > s_axi_TEST_AWREADY;
    sc_in< sc_uint<C_S_AXI_TEST_ADDR_WIDTH> > s_axi_TEST_AWADDR;
    sc_in< sc_logic > s_axi_TEST_WVALID;
    sc_out< sc_logic > s_axi_TEST_WREADY;
    sc_in< sc_uint<C_S_AXI_TEST_DATA_WIDTH> > s_axi_TEST_WDATA;
    sc_in< sc_uint<C_S_AXI_TEST_DATA_WIDTH/8> > s_axi_TEST_WSTRB;
    sc_in< sc_logic > s_axi_TEST_ARVALID;
    sc_out< sc_logic > s_axi_TEST_ARREADY;
    sc_in< sc_uint<C_S_AXI_TEST_ADDR_WIDTH> > s_axi_TEST_ARADDR;
    sc_out< sc_logic > s_axi_TEST_RVALID;
    sc_in< sc_logic > s_axi_TEST_RREADY;
    sc_out< sc_uint<C_S_AXI_TEST_DATA_WIDTH> > s_axi_TEST_RDATA;
    sc_out< sc_lv<2> > s_axi_TEST_RRESP;
    sc_out< sc_logic > s_axi_TEST_BVALID;
    sc_in< sc_logic > s_axi_TEST_BREADY;
    sc_out< sc_lv<2> > s_axi_TEST_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<3> > ap_var_for_const4;
    sc_signal< sc_lv<2> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const6;
    sc_signal< sc_lv<2> > ap_var_for_const7;


    // Module declarations
    flightmain(sc_module_name name);
    SC_HAS_PROCESS(flightmain);

    ~flightmain();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    flightmain_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* flightmain_CTRL_s_axi_U;
    flightmain_TEST_s_axi<C_S_AXI_TEST_ADDR_WIDTH,C_S_AXI_TEST_DATA_WIDTH>* flightmain_TEST_s_axi_U;
    flightmain_OUT_r_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_OUT_R_ID_WIDTH,C_M_AXI_OUT_R_ADDR_WIDTH,C_M_AXI_OUT_R_DATA_WIDTH,C_M_AXI_OUT_R_AWUSER_WIDTH,C_M_AXI_OUT_R_ARUSER_WIDTH,C_M_AXI_OUT_R_WUSER_WIDTH,C_M_AXI_OUT_R_RUSER_WIDTH,C_M_AXI_OUT_R_BUSER_WIDTH,C_M_AXI_OUT_R_TARGET_ADDR,C_M_AXI_OUT_R_USER_VALUE,C_M_AXI_OUT_R_PROT_VALUE,C_M_AXI_OUT_R_CACHE_VALUE>* flightmain_OUT_r_m_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<18> > ap_CS_iter0_fsm;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state1;
    sc_signal< sc_lv<8> > ap_CS_iter1_fsm;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state0;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state18;
    sc_signal< sc_logic > OUT_r_AWVALID;
    sc_signal< sc_logic > OUT_r_AWREADY;
    sc_signal< sc_lv<32> > OUT_r_AWADDR;
    sc_signal< sc_lv<32> > OUT_r_AWLEN;
    sc_signal< sc_logic > OUT_r_WVALID;
    sc_signal< sc_logic > OUT_r_WREADY;
    sc_signal< sc_lv<16> > OUT_r_WDATA;
    sc_signal< sc_logic > OUT_r_ARREADY;
    sc_signal< sc_logic > OUT_r_RVALID;
    sc_signal< sc_lv<16> > OUT_r_RDATA;
    sc_signal< sc_logic > OUT_r_RLAST;
    sc_signal< sc_lv<1> > OUT_r_RID;
    sc_signal< sc_lv<1> > OUT_r_RUSER;
    sc_signal< sc_lv<2> > OUT_r_RRESP;
    sc_signal< sc_logic > OUT_r_BVALID;
    sc_signal< sc_logic > OUT_r_BREADY;
    sc_signal< sc_lv<2> > OUT_r_BRESP;
    sc_signal< sc_lv<1> > OUT_r_BID;
    sc_signal< sc_lv<1> > OUT_r_BUSER;
    sc_signal< sc_lv<1> > tmp_8_reg_1188;
    sc_signal< sc_lv<1> > tmp_8_reg_1188_pp0_iter0_reg;
    sc_signal< sc_lv<3> > p_3_reg_1209;
    sc_signal< sc_lv<3> > p_3_reg_1209_pp0_iter0_reg;
    sc_signal< sc_lv<1> > brmerge1_reg_1300;
    sc_signal< sc_lv<1> > brmerge1_reg_1300_pp0_iter0_reg;
    sc_signal< bool > ap_predicate_op368_writeresp_state25;
    sc_signal< sc_lv<1> > brmerge_reg_1330;
    sc_signal< sc_lv<1> > brmerge_reg_1330_pp0_iter0_reg;
    sc_signal< bool > ap_predicate_op369_writeresp_state25;
    sc_signal< bool > ap_predicate_op370_writeresp_state25;
    sc_signal< bool > ap_block_state25_pp0_stage6_iter1;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state25;
    sc_signal< bool > ap_predicate_op256_writeresp_state19;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter1;
    sc_signal< sc_logic > ap_sig_ioackin_OUT_r_WREADY;
    sc_signal< bool > ap_predicate_op254_write_state19;
    sc_signal< bool > ap_predicate_op260_write_state19;
    sc_signal< bool > ap_predicate_op267_write_state19;
    sc_signal< sc_logic > ap_sig_ioackin_OUT_r_AWREADY;
    sc_signal< bool > ap_block_state19_io;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state19;
    sc_signal< bool > ap_predicate_op279_writeresp_state20;
    sc_signal< bool > ap_predicate_op280_writeresp_state20;
    sc_signal< bool > ap_predicate_op286_writeresp_state20;
    sc_signal< bool > ap_block_state20_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state20_io;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state20;
    sc_signal< bool > ap_predicate_op346_writeresp_state24;
    sc_signal< bool > ap_predicate_op348_writeresp_state24;
    sc_signal< bool > ap_predicate_op350_writeresp_state24;
    sc_signal< bool > ap_block_state24_pp0_stage5_iter1;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state24;
    sc_signal< bool > ap_block_state18_pp0_stage17_iter0;
    sc_signal< bool > ap_predicate_op225_write_state18;
    sc_signal< bool > ap_predicate_op232_write_state18;
    sc_signal< bool > ap_predicate_op240_write_state18;
    sc_signal< bool > ap_block_state18_io;
    sc_signal< bool > ap_predicate_op306_writeresp_state21;
    sc_signal< bool > ap_predicate_op307_writeresp_state21;
    sc_signal< bool > ap_predicate_op308_writeresp_state21;
    sc_signal< bool > ap_block_state21_pp0_stage2_iter1;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state21;
    sc_signal< bool > ap_predicate_op318_writeresp_state22;
    sc_signal< bool > ap_predicate_op322_writeresp_state22;
    sc_signal< bool > ap_predicate_op326_writeresp_state22;
    sc_signal< bool > ap_block_state22_pp0_stage3_iter1;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state22;
    sc_signal< bool > ap_predicate_op334_writeresp_state23;
    sc_signal< bool > ap_predicate_op337_writeresp_state23;
    sc_signal< bool > ap_predicate_op340_writeresp_state23;
    sc_signal< bool > ap_block_state23_pp0_stage4_iter1;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state23;
    sc_signal< sc_lv<3> > rcCmdIn_V_address0;
    sc_signal< sc_logic > rcCmdIn_V_ce0;
    sc_signal< sc_lv<16> > rcCmdIn_V_q0;
    sc_signal< sc_lv<12> > test_V_address0;
    sc_signal< sc_logic > test_V_ce0;
    sc_signal< sc_logic > test_V_we0;
    sc_signal< sc_lv<32> > test_V_d0;
    sc_signal< sc_logic > OUT_r_blk_n_AW;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state10;
    sc_signal< sc_logic > OUT_r_blk_n_W;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state11;
    sc_signal< sc_logic > OUT_r_blk_n_B;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state14;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state15;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state16;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state17;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state12;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state13;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state9;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state4;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state5;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state6;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state7;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state8;
    sc_signal< bool > ap_block_state14_pp0_stage13_iter0;
    sc_signal< bool > ap_predicate_op143_write_state14;
    sc_signal< bool > ap_predicate_op145_writereq_state14;
    sc_signal< bool > ap_predicate_op146_write_state14;
    sc_signal< bool > ap_predicate_op148_writereq_state14;
    sc_signal< bool > ap_block_state14_io;
    sc_signal< bool > ap_predicate_op155_writeresp_state15;
    sc_signal< bool > ap_block_state15_pp0_stage14_iter0;
    sc_signal< bool > ap_predicate_op158_writereq_state15;
    sc_signal< bool > ap_predicate_op159_write_state15;
    sc_signal< bool > ap_predicate_op161_write_state15;
    sc_signal< bool > ap_predicate_op164_write_state15;
    sc_signal< bool > ap_predicate_op165_write_state15;
    sc_signal< bool > ap_block_state15_io;
    sc_signal< bool > ap_predicate_op176_writeresp_state16;
    sc_signal< bool > ap_block_state16_pp0_stage15_iter0;
    sc_signal< bool > ap_predicate_op183_write_state16;
    sc_signal< bool > ap_predicate_op186_write_state16;
    sc_signal< bool > ap_predicate_op188_write_state16;
    sc_signal< bool > ap_block_state16_io;
    sc_signal< bool > ap_block_state17_pp0_stage16_iter0;
    sc_signal< bool > ap_predicate_op200_write_state17;
    sc_signal< bool > ap_predicate_op206_write_state17;
    sc_signal< bool > ap_predicate_op213_write_state17;
    sc_signal< bool > ap_block_state17_io;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<16> > p_Val2_s_reg_1171;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state2;
    sc_signal< bool > ap_block_state2_pp0_stage1_iter0;
    sc_signal< sc_lv<16> > p_Val2_s_reg_1171_pp0_iter0_reg;
    sc_signal< sc_lv<1> > tmp_8_fu_1039_p2;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state3;
    sc_signal< bool > ap_block_state3_pp0_stage2_iter0;
    sc_signal< sc_lv<16> > p_Val2_1_reg_1197;
    sc_signal< sc_lv<16> > p_Val2_1_reg_1197_pp0_iter0_reg;
    sc_signal< sc_lv<3> > p_3_fu_1071_p3;
    sc_signal< sc_lv<16> > p_Val2_3_reg_1213;
    sc_signal< bool > ap_block_state4_pp0_stage3_iter0;
    sc_signal< bool > ap_predicate_op54_writereq_state4;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< sc_lv<16> > p_Val2_4_reg_1229;
    sc_signal< bool > ap_block_state5_pp0_stage4_iter0;
    sc_signal< bool > ap_predicate_op58_write_state5;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< sc_lv<16> > p_Val2_5_reg_1247;
    sc_signal< bool > ap_block_state6_pp0_stage5_iter0;
    sc_signal< bool > ap_predicate_op62_write_state6;
    sc_signal< bool > ap_block_state6_io;
    sc_signal< bool > ap_block_state7_pp0_stage6_iter0;
    sc_signal< bool > ap_predicate_op65_write_state7;
    sc_signal< bool > ap_block_state7_io;
    sc_signal< sc_lv<16> > p_Val2_6_reg_1270;
    sc_signal< sc_lv<32> > tmp_3_fu_1079_p1;
    sc_signal< sc_lv<32> > tmp_s_fu_1083_p1;
    sc_signal< bool > ap_block_state8_pp0_stage7_iter0;
    sc_signal< bool > ap_predicate_op68_write_state8;
    sc_signal< bool > ap_block_state8_io;
    sc_signal< sc_lv<1> > brmerge1_fu_1099_p2;
    sc_signal< bool > ap_block_state9_pp0_stage8_iter0;
    sc_signal< bool > ap_predicate_op80_writereq_state9;
    sc_signal< bool > ap_predicate_op82_write_state9;
    sc_signal< bool > ap_block_state9_io;
    sc_signal< sc_lv<32> > tmp_1_fu_1105_p1;
    sc_signal< bool > ap_block_state10_pp0_stage9_iter0;
    sc_signal< bool > ap_predicate_op87_write_state10;
    sc_signal< bool > ap_predicate_op89_writereq_state10;
    sc_signal< bool > ap_predicate_op91_writereq_state10;
    sc_signal< bool > ap_predicate_op99_writereq_state10;
    sc_signal< bool > ap_predicate_op101_write_state10;
    sc_signal< bool > ap_block_state10_io;
    sc_signal< sc_lv<1> > brmerge_fu_1121_p2;
    sc_signal< sc_lv<32> > tmp_2_fu_1127_p1;
    sc_signal< bool > ap_block_state11_pp0_stage10_iter0;
    sc_signal< bool > ap_predicate_op107_write_state11;
    sc_signal< bool > ap_predicate_op108_write_state11;
    sc_signal< bool > ap_predicate_op109_write_state11;
    sc_signal< bool > ap_predicate_op111_writereq_state11;
    sc_signal< bool > ap_block_state11_io;
    sc_signal< sc_lv<32> > tmp_4_fu_1131_p1;
    sc_signal< sc_lv<32> > tmp_4_reg_1354;
    sc_signal< sc_lv<32> > tmp_7_fu_1135_p1;
    sc_signal< sc_lv<32> > tmp_7_reg_1364;
    sc_signal< bool > ap_block_state12_pp0_stage11_iter0;
    sc_signal< bool > ap_predicate_op119_write_state12;
    sc_signal< bool > ap_predicate_op122_write_state12;
    sc_signal< bool > ap_block_state12_io;
    sc_signal< sc_lv<32> > tmp_9_fu_1139_p1;
    sc_signal< bool > ap_block_state13_pp0_stage12_iter0;
    sc_signal< bool > ap_predicate_op133_write_state13;
    sc_signal< bool > ap_predicate_op134_write_state13;
    sc_signal< bool > ap_predicate_op135_writereq_state13;
    sc_signal< bool > ap_block_state13_io;
    sc_signal< sc_lv<32> > tmp_10_fu_1144_p1;
    sc_signal< sc_lv<32> > tmp_11_fu_1149_p1;
    sc_signal< sc_lv<32> > tmp_12_fu_1154_p1;
    sc_signal< sc_lv<32> > OUT_addr_4_fu_1159_p2;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_p_Val2_7_reg_778;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_p_Val2_8_reg_800;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_p_Val2_2_reg_824;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_p_Val2_9_reg_848;
    sc_signal< sc_logic > ap_reg_ioackin_OUT_r_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_OUT_r_WREADY;
    sc_signal< sc_lv<16> > grp_fu_870_p1;
    sc_signal< sc_lv<3> > grp_fu_870_p4;
    sc_signal< sc_lv<16> > tmp_13_fu_1005_p1;
    sc_signal< sc_lv<16> > tmp_14_fu_1013_p0;
    sc_signal< sc_lv<13> > tmp_14_fu_1013_p1;
    sc_signal< sc_lv<1> > tmp_6_fu_1017_p2;
    sc_signal< sc_lv<3> > grp_fu_880_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_1005_p3;
    sc_signal< sc_lv<3> > p_s_fu_1023_p3;
    sc_signal< sc_lv<3> > p_2_fu_1031_p3;
    sc_signal< sc_lv<16> > tmp_15_fu_1045_p1;
    sc_signal< sc_lv<16> > tmp_16_fu_1053_p0;
    sc_signal< sc_lv<13> > tmp_16_fu_1053_p1;
    sc_signal< sc_lv<1> > tmp_5_fu_1057_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_1045_p3;
    sc_signal< sc_lv<3> > p_1_fu_1063_p3;
    sc_signal< sc_lv<1> > grp_fu_886_p2;
    sc_signal< sc_lv<1> > grp_fu_891_p2;
    sc_signal< sc_lv<1> > grp_fu_901_p2;
    sc_signal< sc_lv<1> > grp_fu_896_p2;
    sc_signal< sc_lv<1> > tmp3_fu_1093_p2;
    sc_signal< sc_lv<1> > tmp2_fu_1087_p2;
    sc_signal< sc_lv<1> > tmp1_fu_1115_p2;
    sc_signal< sc_lv<1> > tmp_fu_1109_p2;
    sc_signal< sc_lv<18> > ap_NS_iter0_fsm;
    sc_signal< sc_lv<8> > ap_NS_iter1_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<18> ap_ST_iter0_fsm_state1;
    static const sc_lv<18> ap_ST_iter0_fsm_state2;
    static const sc_lv<18> ap_ST_iter0_fsm_state3;
    static const sc_lv<18> ap_ST_iter0_fsm_state4;
    static const sc_lv<18> ap_ST_iter0_fsm_state5;
    static const sc_lv<18> ap_ST_iter0_fsm_state6;
    static const sc_lv<18> ap_ST_iter0_fsm_state7;
    static const sc_lv<18> ap_ST_iter0_fsm_state8;
    static const sc_lv<18> ap_ST_iter0_fsm_state9;
    static const sc_lv<18> ap_ST_iter0_fsm_state10;
    static const sc_lv<18> ap_ST_iter0_fsm_state11;
    static const sc_lv<18> ap_ST_iter0_fsm_state12;
    static const sc_lv<18> ap_ST_iter0_fsm_state13;
    static const sc_lv<18> ap_ST_iter0_fsm_state14;
    static const sc_lv<18> ap_ST_iter0_fsm_state15;
    static const sc_lv<18> ap_ST_iter0_fsm_state16;
    static const sc_lv<18> ap_ST_iter0_fsm_state17;
    static const sc_lv<18> ap_ST_iter0_fsm_state18;
    static const sc_lv<8> ap_ST_iter1_fsm_state19;
    static const sc_lv<8> ap_ST_iter1_fsm_state20;
    static const sc_lv<8> ap_ST_iter1_fsm_state21;
    static const sc_lv<8> ap_ST_iter1_fsm_state22;
    static const sc_lv<8> ap_ST_iter1_fsm_state23;
    static const sc_lv<8> ap_ST_iter1_fsm_state24;
    static const sc_lv<8> ap_ST_iter1_fsm_state25;
    static const sc_lv<8> ap_ST_iter1_fsm_state0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_8;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_OUT_R_TARGET_ADDR;
    static const int C_M_AXI_OUT_R_USER_VALUE;
    static const int C_M_AXI_OUT_R_PROT_VALUE;
    static const int C_M_AXI_OUT_R_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<16> ap_const_lv16_198;
    static const sc_lv<16> ap_const_lv16_FE67;
    static const sc_lv<13> ap_const_lv13_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_clk_no_reset_();
    void thread_OUT_addr_4_fu_1159_p2();
    void thread_OUT_r_AWADDR();
    void thread_OUT_r_AWLEN();
    void thread_OUT_r_AWVALID();
    void thread_OUT_r_BREADY();
    void thread_OUT_r_WDATA();
    void thread_OUT_r_WVALID();
    void thread_OUT_r_blk_n_AW();
    void thread_OUT_r_blk_n_B();
    void thread_OUT_r_blk_n_W();
    void thread_ap_CS_iter0_fsm_state1();
    void thread_ap_CS_iter0_fsm_state10();
    void thread_ap_CS_iter0_fsm_state11();
    void thread_ap_CS_iter0_fsm_state12();
    void thread_ap_CS_iter0_fsm_state13();
    void thread_ap_CS_iter0_fsm_state14();
    void thread_ap_CS_iter0_fsm_state15();
    void thread_ap_CS_iter0_fsm_state16();
    void thread_ap_CS_iter0_fsm_state17();
    void thread_ap_CS_iter0_fsm_state18();
    void thread_ap_CS_iter0_fsm_state2();
    void thread_ap_CS_iter0_fsm_state3();
    void thread_ap_CS_iter0_fsm_state4();
    void thread_ap_CS_iter0_fsm_state5();
    void thread_ap_CS_iter0_fsm_state6();
    void thread_ap_CS_iter0_fsm_state7();
    void thread_ap_CS_iter0_fsm_state8();
    void thread_ap_CS_iter0_fsm_state9();
    void thread_ap_CS_iter1_fsm_state0();
    void thread_ap_CS_iter1_fsm_state19();
    void thread_ap_CS_iter1_fsm_state20();
    void thread_ap_CS_iter1_fsm_state21();
    void thread_ap_CS_iter1_fsm_state22();
    void thread_ap_CS_iter1_fsm_state23();
    void thread_ap_CS_iter1_fsm_state24();
    void thread_ap_CS_iter1_fsm_state25();
    void thread_ap_block_state10_io();
    void thread_ap_block_state10_pp0_stage9_iter0();
    void thread_ap_block_state11_io();
    void thread_ap_block_state11_pp0_stage10_iter0();
    void thread_ap_block_state12_io();
    void thread_ap_block_state12_pp0_stage11_iter0();
    void thread_ap_block_state13_io();
    void thread_ap_block_state13_pp0_stage12_iter0();
    void thread_ap_block_state14_io();
    void thread_ap_block_state14_pp0_stage13_iter0();
    void thread_ap_block_state15_io();
    void thread_ap_block_state15_pp0_stage14_iter0();
    void thread_ap_block_state16_io();
    void thread_ap_block_state16_pp0_stage15_iter0();
    void thread_ap_block_state17_io();
    void thread_ap_block_state17_pp0_stage16_iter0();
    void thread_ap_block_state18_io();
    void thread_ap_block_state18_pp0_stage17_iter0();
    void thread_ap_block_state19_io();
    void thread_ap_block_state19_pp0_stage0_iter1();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state20_io();
    void thread_ap_block_state20_pp0_stage1_iter1();
    void thread_ap_block_state21_pp0_stage2_iter1();
    void thread_ap_block_state22_pp0_stage3_iter1();
    void thread_ap_block_state23_pp0_stage4_iter1();
    void thread_ap_block_state24_pp0_stage5_iter1();
    void thread_ap_block_state25_pp0_stage6_iter1();
    void thread_ap_block_state2_pp0_stage1_iter0();
    void thread_ap_block_state3_pp0_stage2_iter0();
    void thread_ap_block_state4_io();
    void thread_ap_block_state4_pp0_stage3_iter0();
    void thread_ap_block_state5_io();
    void thread_ap_block_state5_pp0_stage4_iter0();
    void thread_ap_block_state6_io();
    void thread_ap_block_state6_pp0_stage5_iter0();
    void thread_ap_block_state7_io();
    void thread_ap_block_state7_pp0_stage6_iter0();
    void thread_ap_block_state8_io();
    void thread_ap_block_state8_pp0_stage7_iter0();
    void thread_ap_block_state9_io();
    void thread_ap_block_state9_pp0_stage8_iter0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op101_write_state10();
    void thread_ap_predicate_op107_write_state11();
    void thread_ap_predicate_op108_write_state11();
    void thread_ap_predicate_op109_write_state11();
    void thread_ap_predicate_op111_writereq_state11();
    void thread_ap_predicate_op119_write_state12();
    void thread_ap_predicate_op122_write_state12();
    void thread_ap_predicate_op133_write_state13();
    void thread_ap_predicate_op134_write_state13();
    void thread_ap_predicate_op135_writereq_state13();
    void thread_ap_predicate_op143_write_state14();
    void thread_ap_predicate_op145_writereq_state14();
    void thread_ap_predicate_op146_write_state14();
    void thread_ap_predicate_op148_writereq_state14();
    void thread_ap_predicate_op155_writeresp_state15();
    void thread_ap_predicate_op158_writereq_state15();
    void thread_ap_predicate_op159_write_state15();
    void thread_ap_predicate_op161_write_state15();
    void thread_ap_predicate_op164_write_state15();
    void thread_ap_predicate_op165_write_state15();
    void thread_ap_predicate_op176_writeresp_state16();
    void thread_ap_predicate_op183_write_state16();
    void thread_ap_predicate_op186_write_state16();
    void thread_ap_predicate_op188_write_state16();
    void thread_ap_predicate_op200_write_state17();
    void thread_ap_predicate_op206_write_state17();
    void thread_ap_predicate_op213_write_state17();
    void thread_ap_predicate_op225_write_state18();
    void thread_ap_predicate_op232_write_state18();
    void thread_ap_predicate_op240_write_state18();
    void thread_ap_predicate_op254_write_state19();
    void thread_ap_predicate_op256_writeresp_state19();
    void thread_ap_predicate_op260_write_state19();
    void thread_ap_predicate_op267_write_state19();
    void thread_ap_predicate_op279_writeresp_state20();
    void thread_ap_predicate_op280_writeresp_state20();
    void thread_ap_predicate_op286_writeresp_state20();
    void thread_ap_predicate_op306_writeresp_state21();
    void thread_ap_predicate_op307_writeresp_state21();
    void thread_ap_predicate_op308_writeresp_state21();
    void thread_ap_predicate_op318_writeresp_state22();
    void thread_ap_predicate_op322_writeresp_state22();
    void thread_ap_predicate_op326_writeresp_state22();
    void thread_ap_predicate_op334_writeresp_state23();
    void thread_ap_predicate_op337_writeresp_state23();
    void thread_ap_predicate_op340_writeresp_state23();
    void thread_ap_predicate_op346_writeresp_state24();
    void thread_ap_predicate_op348_writeresp_state24();
    void thread_ap_predicate_op350_writeresp_state24();
    void thread_ap_predicate_op368_writeresp_state25();
    void thread_ap_predicate_op369_writeresp_state25();
    void thread_ap_predicate_op370_writeresp_state25();
    void thread_ap_predicate_op54_writereq_state4();
    void thread_ap_predicate_op58_write_state5();
    void thread_ap_predicate_op62_write_state6();
    void thread_ap_predicate_op65_write_state7();
    void thread_ap_predicate_op68_write_state8();
    void thread_ap_predicate_op80_writereq_state9();
    void thread_ap_predicate_op82_write_state9();
    void thread_ap_predicate_op87_write_state10();
    void thread_ap_predicate_op89_writereq_state10();
    void thread_ap_predicate_op91_writereq_state10();
    void thread_ap_predicate_op99_writereq_state10();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_OUT_r_AWREADY();
    void thread_ap_sig_ioackin_OUT_r_WREADY();
    void thread_brmerge1_fu_1099_p2();
    void thread_brmerge_fu_1121_p2();
    void thread_grp_fu_870_p1();
    void thread_grp_fu_870_p4();
    void thread_grp_fu_880_p2();
    void thread_grp_fu_886_p2();
    void thread_grp_fu_891_p2();
    void thread_grp_fu_896_p2();
    void thread_grp_fu_901_p2();
    void thread_p_1_fu_1063_p3();
    void thread_p_2_fu_1031_p3();
    void thread_p_3_fu_1071_p3();
    void thread_p_s_fu_1023_p3();
    void thread_rcCmdIn_V_address0();
    void thread_rcCmdIn_V_ce0();
    void thread_test_V_address0();
    void thread_test_V_ce0();
    void thread_test_V_d0();
    void thread_test_V_we0();
    void thread_tmp1_fu_1115_p2();
    void thread_tmp2_fu_1087_p2();
    void thread_tmp3_fu_1093_p2();
    void thread_tmp_10_fu_1144_p1();
    void thread_tmp_11_fu_1149_p1();
    void thread_tmp_12_fu_1154_p1();
    void thread_tmp_13_fu_1005_p1();
    void thread_tmp_13_fu_1005_p3();
    void thread_tmp_14_fu_1013_p0();
    void thread_tmp_14_fu_1013_p1();
    void thread_tmp_15_fu_1045_p1();
    void thread_tmp_15_fu_1045_p3();
    void thread_tmp_16_fu_1053_p0();
    void thread_tmp_16_fu_1053_p1();
    void thread_tmp_1_fu_1105_p1();
    void thread_tmp_2_fu_1127_p1();
    void thread_tmp_3_fu_1079_p1();
    void thread_tmp_4_fu_1131_p1();
    void thread_tmp_5_fu_1057_p2();
    void thread_tmp_6_fu_1017_p2();
    void thread_tmp_7_fu_1135_p1();
    void thread_tmp_8_fu_1039_p2();
    void thread_tmp_9_fu_1139_p1();
    void thread_tmp_fu_1109_p2();
    void thread_tmp_s_fu_1083_p1();
    void thread_ap_NS_iter0_fsm();
    void thread_ap_NS_iter1_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
