// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _flightmain_HH_
#define _flightmain_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "flightmain_buffer_V.h"
#include "flightmain_CTRL_s_axi.h"
#include "flightmain_TEST_s_axi.h"
#include "flightmain_OUT_r_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_OUT_R_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUT_R_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_DATA_WIDTH = 32,
         unsigned int C_M_AXI_OUT_R_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32,
         unsigned int C_S_AXI_TEST_ADDR_WIDTH = 15,
         unsigned int C_S_AXI_TEST_DATA_WIDTH = 32>
struct flightmain : public sc_module {
    // Port declarations 82
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_OUT_r_AWVALID;
    sc_in< sc_logic > m_axi_OUT_r_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_ADDR_WIDTH> > m_axi_OUT_r_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_AWID;
    sc_out< sc_lv<8> > m_axi_OUT_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_OUT_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_OUT_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_OUT_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_OUT_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUT_R_AWUSER_WIDTH> > m_axi_OUT_r_AWUSER;
    sc_out< sc_logic > m_axi_OUT_r_WVALID;
    sc_in< sc_logic > m_axi_OUT_r_WREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH> > m_axi_OUT_r_WDATA;
    sc_out< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH/8> > m_axi_OUT_r_WSTRB;
    sc_out< sc_logic > m_axi_OUT_r_WLAST;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_WID;
    sc_out< sc_uint<C_M_AXI_OUT_R_WUSER_WIDTH> > m_axi_OUT_r_WUSER;
    sc_out< sc_logic > m_axi_OUT_r_ARVALID;
    sc_in< sc_logic > m_axi_OUT_r_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_ADDR_WIDTH> > m_axi_OUT_r_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_ARID;
    sc_out< sc_lv<8> > m_axi_OUT_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_OUT_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_OUT_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_OUT_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_OUT_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUT_R_ARUSER_WIDTH> > m_axi_OUT_r_ARUSER;
    sc_in< sc_logic > m_axi_OUT_r_RVALID;
    sc_out< sc_logic > m_axi_OUT_r_RREADY;
    sc_in< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH> > m_axi_OUT_r_RDATA;
    sc_in< sc_logic > m_axi_OUT_r_RLAST;
    sc_in< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_RID;
    sc_in< sc_uint<C_M_AXI_OUT_R_RUSER_WIDTH> > m_axi_OUT_r_RUSER;
    sc_in< sc_lv<2> > m_axi_OUT_r_RRESP;
    sc_in< sc_logic > m_axi_OUT_r_BVALID;
    sc_out< sc_logic > m_axi_OUT_r_BREADY;
    sc_in< sc_lv<2> > m_axi_OUT_r_BRESP;
    sc_in< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_BID;
    sc_in< sc_uint<C_M_AXI_OUT_R_BUSER_WIDTH> > m_axi_OUT_r_BUSER;
    sc_in< sc_logic > s_axi_CTRL_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_WVALID;
    sc_out< sc_logic > s_axi_CTRL_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_CTRL_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_RVALID;
    sc_in< sc_logic > s_axi_CTRL_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BRESP;
    sc_out< sc_logic > interrupt;
    sc_in< sc_logic > s_axi_TEST_AWVALID;
    sc_out< sc_logic > s_axi_TEST_AWREADY;
    sc_in< sc_uint<C_S_AXI_TEST_ADDR_WIDTH> > s_axi_TEST_AWADDR;
    sc_in< sc_logic > s_axi_TEST_WVALID;
    sc_out< sc_logic > s_axi_TEST_WREADY;
    sc_in< sc_uint<C_S_AXI_TEST_DATA_WIDTH> > s_axi_TEST_WDATA;
    sc_in< sc_uint<C_S_AXI_TEST_DATA_WIDTH/8> > s_axi_TEST_WSTRB;
    sc_in< sc_logic > s_axi_TEST_ARVALID;
    sc_out< sc_logic > s_axi_TEST_ARREADY;
    sc_in< sc_uint<C_S_AXI_TEST_ADDR_WIDTH> > s_axi_TEST_ARADDR;
    sc_out< sc_logic > s_axi_TEST_RVALID;
    sc_in< sc_logic > s_axi_TEST_RREADY;
    sc_out< sc_uint<C_S_AXI_TEST_DATA_WIDTH> > s_axi_TEST_RDATA;
    sc_out< sc_lv<2> > s_axi_TEST_RRESP;
    sc_out< sc_logic > s_axi_TEST_BVALID;
    sc_in< sc_logic > s_axi_TEST_BREADY;
    sc_out< sc_lv<2> > s_axi_TEST_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const7;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<1> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const4;
    sc_signal< sc_lv<32> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const6;
    sc_signal< sc_lv<2> > ap_var_for_const8;


    // Module declarations
    flightmain(sc_module_name name);
    SC_HAS_PROCESS(flightmain);

    ~flightmain();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    flightmain_buffer_V* buffer_V_U;
    flightmain_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* flightmain_CTRL_s_axi_U;
    flightmain_TEST_s_axi<C_S_AXI_TEST_ADDR_WIDTH,C_S_AXI_TEST_DATA_WIDTH>* flightmain_TEST_s_axi_U;
    flightmain_OUT_r_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_OUT_R_ID_WIDTH,C_M_AXI_OUT_R_ADDR_WIDTH,C_M_AXI_OUT_R_DATA_WIDTH,C_M_AXI_OUT_R_AWUSER_WIDTH,C_M_AXI_OUT_R_ARUSER_WIDTH,C_M_AXI_OUT_R_WUSER_WIDTH,C_M_AXI_OUT_R_RUSER_WIDTH,C_M_AXI_OUT_R_BUSER_WIDTH,C_M_AXI_OUT_R_TARGET_ADDR,C_M_AXI_OUT_R_USER_VALUE,C_M_AXI_OUT_R_PROT_VALUE,C_M_AXI_OUT_R_CACHE_VALUE>* flightmain_OUT_r_m_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<85> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<3> > rcCmdIn_V_address0;
    sc_signal< sc_logic > rcCmdIn_V_ce0;
    sc_signal< sc_lv<16> > rcCmdIn_V_q0;
    sc_signal< sc_lv<12> > test_V_address0;
    sc_signal< sc_logic > test_V_ce0;
    sc_signal< sc_logic > test_V_we0;
    sc_signal< sc_lv<32> > test_V_d0;
    sc_signal< sc_lv<3> > buffer_V_address0;
    sc_signal< sc_logic > buffer_V_ce0;
    sc_signal< sc_logic > buffer_V_we0;
    sc_signal< sc_lv<16> > buffer_V_q0;
    sc_signal< sc_lv<3> > buffer_V_address1;
    sc_signal< sc_logic > buffer_V_ce1;
    sc_signal< sc_lv<16> > buffer_V_q1;
    sc_signal< sc_logic > OUT_r_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_8_fu_962_p2;
    sc_signal< sc_lv<3> > p_3_fu_1010_p3;
    sc_signal< sc_logic > OUT_r_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > p_3_reg_1208;
    sc_signal< sc_lv<1> > brmerge_fu_1048_p2;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > OUT_r_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<1> > tmp_8_reg_1195;
    sc_signal< sc_lv<1> > brmerge_reg_1216;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_lv<1> > brmerge1_fu_1030_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<1> > brmerge1_reg_1212;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_logic > ap_CS_fsm_state55;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_logic > ap_CS_fsm_state56;
    sc_signal< sc_logic > ap_CS_fsm_state52;
    sc_signal< sc_logic > ap_CS_fsm_state57;
    sc_signal< sc_logic > ap_CS_fsm_state53;
    sc_signal< sc_logic > ap_CS_fsm_state58;
    sc_signal< sc_logic > ap_CS_fsm_state54;
    sc_signal< sc_logic > ap_CS_fsm_state59;
    sc_signal< sc_logic > ap_CS_fsm_state60;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_logic > ap_CS_fsm_state61;
    sc_signal< sc_logic > ap_CS_fsm_state66;
    sc_signal< sc_logic > ap_CS_fsm_state62;
    sc_signal< sc_logic > ap_CS_fsm_state67;
    sc_signal< sc_logic > ap_CS_fsm_state63;
    sc_signal< sc_logic > ap_CS_fsm_state68;
    sc_signal< sc_logic > ap_CS_fsm_state64;
    sc_signal< sc_logic > ap_CS_fsm_state69;
    sc_signal< sc_logic > ap_CS_fsm_state65;
    sc_signal< sc_logic > ap_CS_fsm_state70;
    sc_signal< sc_logic > ap_CS_fsm_state71;
    sc_signal< sc_logic > OUT_r_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state72;
    sc_signal< sc_logic > OUT_r_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state79;
    sc_signal< sc_logic > ap_CS_fsm_state80;
    sc_signal< sc_logic > ap_CS_fsm_state81;
    sc_signal< sc_logic > ap_CS_fsm_state82;
    sc_signal< sc_logic > ap_CS_fsm_state83;
    sc_signal< sc_logic > ap_CS_fsm_state84;
    sc_signal< sc_logic > OUT_r_AWVALID;
    sc_signal< sc_logic > OUT_r_AWREADY;
    sc_signal< sc_lv<32> > OUT_r_AWADDR;
    sc_signal< sc_lv<32> > OUT_r_AWLEN;
    sc_signal< sc_logic > OUT_r_WVALID;
    sc_signal< sc_logic > OUT_r_WREADY;
    sc_signal< sc_lv<16> > OUT_r_WDATA;
    sc_signal< sc_logic > OUT_r_ARVALID;
    sc_signal< sc_logic > OUT_r_ARREADY;
    sc_signal< sc_logic > OUT_r_RVALID;
    sc_signal< sc_logic > OUT_r_RREADY;
    sc_signal< sc_lv<16> > OUT_r_RDATA;
    sc_signal< sc_logic > OUT_r_RLAST;
    sc_signal< sc_lv<1> > OUT_r_RID;
    sc_signal< sc_lv<1> > OUT_r_RUSER;
    sc_signal< sc_lv<2> > OUT_r_RRESP;
    sc_signal< sc_logic > OUT_r_BVALID;
    sc_signal< sc_logic > OUT_r_BREADY;
    sc_signal< sc_lv<2> > OUT_r_BRESP;
    sc_signal< sc_lv<1> > OUT_r_BID;
    sc_signal< sc_lv<1> > OUT_r_BUSER;
    sc_signal< sc_lv<16> > reg_821;
    sc_signal< sc_logic > ap_sig_ioackin_OUT_r_AWREADY;
    sc_signal< sc_logic > ap_sig_ioackin_OUT_r_WREADY;
    sc_signal< bool > ap_block_state7_io;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< bool > ap_block_state26_io;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< bool > ap_block_state50_io;
    sc_signal< bool > ap_block_state61_io;
    sc_signal< bool > ap_block_state8_io;
    sc_signal< bool > ap_block_state27_io;
    sc_signal< bool > ap_block_state51_io;
    sc_signal< bool > ap_block_state62_io;
    sc_signal< bool > ap_block_state9_io;
    sc_signal< bool > ap_block_state28_io;
    sc_signal< bool > ap_block_state52_io;
    sc_signal< bool > ap_block_state63_io;
    sc_signal< bool > ap_block_state10_io;
    sc_signal< bool > ap_block_state29_io;
    sc_signal< bool > ap_block_state53_io;
    sc_signal< bool > ap_block_state64_io;
    sc_signal< bool > ap_block_state11_io;
    sc_signal< bool > ap_block_state54_io;
    sc_signal< bool > ap_block_state65_io;
    sc_signal< sc_lv<16> > reg_891;
    sc_signal< sc_lv<3> > i_1_fu_901_p2;
    sc_signal< sc_lv<3> > i_1_reg_1171;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > tmp_4_fu_907_p1;
    sc_signal< sc_lv<64> > tmp_4_reg_1176;
    sc_signal< sc_lv<1> > exitcond1_fu_895_p2;
    sc_signal< sc_lv<16> > p_Val2_s_reg_1186;
    sc_signal< bool > ap_predicate_op138_writereq_state4;
    sc_signal< bool > ap_predicate_op140_writereq_state4;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< sc_lv<16> > p_Val2_1_reg_1199;
    sc_signal< bool > ap_predicate_op153_writereq_state5;
    sc_signal< bool > ap_predicate_op166_writereq_state5;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< sc_lv<3> > i_4_fu_1064_p2;
    sc_signal< sc_lv<3> > i_4_reg_1223;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<1> > exitcond_fu_1058_p2;
    sc_signal< bool > ap_block_state30_io;
    sc_signal< sc_lv<3> > i_3_fu_1081_p2;
    sc_signal< sc_lv<3> > i_3_reg_1242;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_lv<1> > exitcond3_fu_1075_p2;
    sc_signal< sc_lv<3> > i_2_fu_1098_p2;
    sc_signal< sc_lv<3> > i_2_reg_1255;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_lv<1> > exitcond2_fu_1092_p2;
    sc_signal< sc_lv<3> > i_reg_703;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > i3_reg_714;
    sc_signal< sc_lv<3> > i2_reg_725;
    sc_signal< sc_lv<3> > i1_reg_736;
    sc_signal< sc_lv<64> > tmp_2_fu_1070_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_1087_p1;
    sc_signal< sc_lv<64> > tmp_1_fu_1104_p1;
    sc_signal< sc_logic > ap_CS_fsm_state77;
    sc_signal< sc_logic > ap_CS_fsm_state78;
    sc_signal< sc_logic > ap_CS_fsm_state85;
    sc_signal< sc_logic > ap_reg_ioackin_OUT_r_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_OUT_r_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_OUT_r_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_OUT_r_WREADY;
    sc_signal< bool > ap_predicate_op217_writeresp_state17;
    sc_signal< bool > ap_predicate_op220_writeresp_state17;
    sc_signal< bool > ap_block_state17;
    sc_signal< sc_logic > ap_CS_fsm_state76;
    sc_signal< sc_lv<32> > tmp_11_fu_1054_p1;
    sc_signal< sc_lv<32> > tmp_12_fu_1109_p1;
    sc_signal< sc_logic > ap_CS_fsm_state73;
    sc_signal< sc_lv<32> > tmp_3_fu_1113_p1;
    sc_signal< sc_lv<32> > tmp_7_fu_1118_p1;
    sc_signal< sc_lv<32> > tmp_9_fu_1123_p1;
    sc_signal< sc_lv<32> > tmp_10_fu_1128_p1;
    sc_signal< sc_lv<32> > tmp_13_fu_1133_p1;
    sc_signal< sc_lv<32> > tmp_14_fu_1138_p1;
    sc_signal< sc_lv<32> > tmp_15_fu_1143_p1;
    sc_signal< sc_lv<32> > tmp_16_fu_1148_p1;
    sc_signal< sc_lv<32> > tmp_17_fu_1153_p1;
    sc_signal< sc_lv<32> > tmp_18_fu_1158_p1;
    sc_signal< sc_lv<16> > ret_V_fu_912_p1;
    sc_signal< sc_lv<16> > tmp_19_fu_922_p1;
    sc_signal< sc_lv<16> > tmp_20_fu_930_p0;
    sc_signal< sc_lv<13> > tmp_20_fu_930_p1;
    sc_signal< sc_lv<3> > ret_V_fu_912_p4;
    sc_signal< sc_lv<1> > tmp_6_fu_934_p2;
    sc_signal< sc_lv<3> > ret_V_1_fu_940_p2;
    sc_signal< sc_lv<1> > tmp_19_fu_922_p3;
    sc_signal< sc_lv<3> > p_s_fu_946_p3;
    sc_signal< sc_lv<3> > p_2_fu_954_p3;
    sc_signal< sc_lv<16> > ret_V_2_fu_968_p1;
    sc_signal< sc_lv<16> > tmp_21_fu_978_p1;
    sc_signal< sc_lv<16> > tmp_22_fu_986_p0;
    sc_signal< sc_lv<13> > tmp_22_fu_986_p1;
    sc_signal< sc_lv<3> > ret_V_2_fu_968_p4;
    sc_signal< sc_lv<1> > tmp_5_fu_990_p2;
    sc_signal< sc_lv<3> > ret_V_3_fu_996_p2;
    sc_signal< sc_lv<1> > tmp_21_fu_978_p3;
    sc_signal< sc_lv<3> > p_1_fu_1002_p3;
    sc_signal< sc_lv<1> > grp_fu_747_p2;
    sc_signal< sc_lv<1> > grp_fu_753_p2;
    sc_signal< sc_lv<1> > grp_fu_765_p2;
    sc_signal< sc_lv<1> > grp_fu_759_p2;
    sc_signal< sc_lv<1> > tmp3_fu_1024_p2;
    sc_signal< sc_lv<1> > tmp2_fu_1018_p2;
    sc_signal< sc_lv<1> > tmp1_fu_1042_p2;
    sc_signal< sc_lv<1> > tmp_fu_1036_p2;
    sc_signal< sc_lv<16> > tmp_18_fu_1158_p0;
    sc_signal< sc_lv<85> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<85> ap_ST_fsm_state1;
    static const sc_lv<85> ap_ST_fsm_state2;
    static const sc_lv<85> ap_ST_fsm_state3;
    static const sc_lv<85> ap_ST_fsm_state4;
    static const sc_lv<85> ap_ST_fsm_state5;
    static const sc_lv<85> ap_ST_fsm_state6;
    static const sc_lv<85> ap_ST_fsm_state7;
    static const sc_lv<85> ap_ST_fsm_state8;
    static const sc_lv<85> ap_ST_fsm_state9;
    static const sc_lv<85> ap_ST_fsm_state10;
    static const sc_lv<85> ap_ST_fsm_state11;
    static const sc_lv<85> ap_ST_fsm_state12;
    static const sc_lv<85> ap_ST_fsm_state13;
    static const sc_lv<85> ap_ST_fsm_state14;
    static const sc_lv<85> ap_ST_fsm_state15;
    static const sc_lv<85> ap_ST_fsm_state16;
    static const sc_lv<85> ap_ST_fsm_state17;
    static const sc_lv<85> ap_ST_fsm_state18;
    static const sc_lv<85> ap_ST_fsm_state19;
    static const sc_lv<85> ap_ST_fsm_state20;
    static const sc_lv<85> ap_ST_fsm_state21;
    static const sc_lv<85> ap_ST_fsm_state22;
    static const sc_lv<85> ap_ST_fsm_state23;
    static const sc_lv<85> ap_ST_fsm_state24;
    static const sc_lv<85> ap_ST_fsm_state25;
    static const sc_lv<85> ap_ST_fsm_state26;
    static const sc_lv<85> ap_ST_fsm_state27;
    static const sc_lv<85> ap_ST_fsm_state28;
    static const sc_lv<85> ap_ST_fsm_state29;
    static const sc_lv<85> ap_ST_fsm_state30;
    static const sc_lv<85> ap_ST_fsm_state31;
    static const sc_lv<85> ap_ST_fsm_state32;
    static const sc_lv<85> ap_ST_fsm_state33;
    static const sc_lv<85> ap_ST_fsm_state34;
    static const sc_lv<85> ap_ST_fsm_state35;
    static const sc_lv<85> ap_ST_fsm_state36;
    static const sc_lv<85> ap_ST_fsm_state37;
    static const sc_lv<85> ap_ST_fsm_state38;
    static const sc_lv<85> ap_ST_fsm_state39;
    static const sc_lv<85> ap_ST_fsm_state40;
    static const sc_lv<85> ap_ST_fsm_state41;
    static const sc_lv<85> ap_ST_fsm_state42;
    static const sc_lv<85> ap_ST_fsm_state43;
    static const sc_lv<85> ap_ST_fsm_state44;
    static const sc_lv<85> ap_ST_fsm_state45;
    static const sc_lv<85> ap_ST_fsm_state46;
    static const sc_lv<85> ap_ST_fsm_state47;
    static const sc_lv<85> ap_ST_fsm_state48;
    static const sc_lv<85> ap_ST_fsm_state49;
    static const sc_lv<85> ap_ST_fsm_state50;
    static const sc_lv<85> ap_ST_fsm_state51;
    static const sc_lv<85> ap_ST_fsm_state52;
    static const sc_lv<85> ap_ST_fsm_state53;
    static const sc_lv<85> ap_ST_fsm_state54;
    static const sc_lv<85> ap_ST_fsm_state55;
    static const sc_lv<85> ap_ST_fsm_state56;
    static const sc_lv<85> ap_ST_fsm_state57;
    static const sc_lv<85> ap_ST_fsm_state58;
    static const sc_lv<85> ap_ST_fsm_state59;
    static const sc_lv<85> ap_ST_fsm_state60;
    static const sc_lv<85> ap_ST_fsm_state61;
    static const sc_lv<85> ap_ST_fsm_state62;
    static const sc_lv<85> ap_ST_fsm_state63;
    static const sc_lv<85> ap_ST_fsm_state64;
    static const sc_lv<85> ap_ST_fsm_state65;
    static const sc_lv<85> ap_ST_fsm_state66;
    static const sc_lv<85> ap_ST_fsm_state67;
    static const sc_lv<85> ap_ST_fsm_state68;
    static const sc_lv<85> ap_ST_fsm_state69;
    static const sc_lv<85> ap_ST_fsm_state70;
    static const sc_lv<85> ap_ST_fsm_state71;
    static const sc_lv<85> ap_ST_fsm_state72;
    static const sc_lv<85> ap_ST_fsm_state73;
    static const sc_lv<85> ap_ST_fsm_state74;
    static const sc_lv<85> ap_ST_fsm_state75;
    static const sc_lv<85> ap_ST_fsm_state76;
    static const sc_lv<85> ap_ST_fsm_state77;
    static const sc_lv<85> ap_ST_fsm_state78;
    static const sc_lv<85> ap_ST_fsm_state79;
    static const sc_lv<85> ap_ST_fsm_state80;
    static const sc_lv<85> ap_ST_fsm_state81;
    static const sc_lv<85> ap_ST_fsm_state82;
    static const sc_lv<85> ap_ST_fsm_state83;
    static const sc_lv<85> ap_ST_fsm_state84;
    static const sc_lv<85> ap_ST_fsm_state85;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_36;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_39;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_3A;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<32> ap_const_lv32_3D;
    static const sc_lv<32> ap_const_lv32_42;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<32> ap_const_lv32_43;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_44;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_45;
    static const sc_lv<32> ap_const_lv32_46;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<32> ap_const_lv32_4E;
    static const sc_lv<32> ap_const_lv32_4F;
    static const sc_lv<32> ap_const_lv32_50;
    static const sc_lv<32> ap_const_lv32_51;
    static const sc_lv<32> ap_const_lv32_52;
    static const sc_lv<32> ap_const_lv32_53;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_OUT_R_TARGET_ADDR;
    static const int C_M_AXI_OUT_R_USER_VALUE;
    static const int C_M_AXI_OUT_R_PROT_VALUE;
    static const int C_M_AXI_OUT_R_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<32> ap_const_lv32_4C;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<32> ap_const_lv32_4D;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<32> ap_const_lv32_54;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<32> ap_const_lv32_4B;
    static const sc_lv<32> ap_const_lv32_48;
    static const sc_lv<16> ap_const_lv16_198;
    static const sc_lv<16> ap_const_lv16_FE67;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<13> ap_const_lv13_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const8();
    void thread_ap_clk_no_reset_();
    void thread_OUT_r_ARVALID();
    void thread_OUT_r_AWADDR();
    void thread_OUT_r_AWLEN();
    void thread_OUT_r_AWVALID();
    void thread_OUT_r_BREADY();
    void thread_OUT_r_RREADY();
    void thread_OUT_r_WDATA();
    void thread_OUT_r_WVALID();
    void thread_OUT_r_blk_n_AR();
    void thread_OUT_r_blk_n_AW();
    void thread_OUT_r_blk_n_B();
    void thread_OUT_r_blk_n_R();
    void thread_OUT_r_blk_n_W();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state50();
    void thread_ap_CS_fsm_state51();
    void thread_ap_CS_fsm_state52();
    void thread_ap_CS_fsm_state53();
    void thread_ap_CS_fsm_state54();
    void thread_ap_CS_fsm_state55();
    void thread_ap_CS_fsm_state56();
    void thread_ap_CS_fsm_state57();
    void thread_ap_CS_fsm_state58();
    void thread_ap_CS_fsm_state59();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state60();
    void thread_ap_CS_fsm_state61();
    void thread_ap_CS_fsm_state62();
    void thread_ap_CS_fsm_state63();
    void thread_ap_CS_fsm_state64();
    void thread_ap_CS_fsm_state65();
    void thread_ap_CS_fsm_state66();
    void thread_ap_CS_fsm_state67();
    void thread_ap_CS_fsm_state68();
    void thread_ap_CS_fsm_state69();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state70();
    void thread_ap_CS_fsm_state71();
    void thread_ap_CS_fsm_state72();
    void thread_ap_CS_fsm_state73();
    void thread_ap_CS_fsm_state76();
    void thread_ap_CS_fsm_state77();
    void thread_ap_CS_fsm_state78();
    void thread_ap_CS_fsm_state79();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state80();
    void thread_ap_CS_fsm_state81();
    void thread_ap_CS_fsm_state82();
    void thread_ap_CS_fsm_state83();
    void thread_ap_CS_fsm_state84();
    void thread_ap_CS_fsm_state85();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state10_io();
    void thread_ap_block_state11_io();
    void thread_ap_block_state17();
    void thread_ap_block_state26_io();
    void thread_ap_block_state27_io();
    void thread_ap_block_state28_io();
    void thread_ap_block_state29_io();
    void thread_ap_block_state30_io();
    void thread_ap_block_state4_io();
    void thread_ap_block_state50_io();
    void thread_ap_block_state51_io();
    void thread_ap_block_state52_io();
    void thread_ap_block_state53_io();
    void thread_ap_block_state54_io();
    void thread_ap_block_state5_io();
    void thread_ap_block_state61_io();
    void thread_ap_block_state62_io();
    void thread_ap_block_state63_io();
    void thread_ap_block_state64_io();
    void thread_ap_block_state65_io();
    void thread_ap_block_state7_io();
    void thread_ap_block_state8_io();
    void thread_ap_block_state9_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op138_writereq_state4();
    void thread_ap_predicate_op140_writereq_state4();
    void thread_ap_predicate_op153_writereq_state5();
    void thread_ap_predicate_op166_writereq_state5();
    void thread_ap_predicate_op217_writeresp_state17();
    void thread_ap_predicate_op220_writeresp_state17();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_OUT_r_ARREADY();
    void thread_ap_sig_ioackin_OUT_r_AWREADY();
    void thread_ap_sig_ioackin_OUT_r_WREADY();
    void thread_brmerge1_fu_1030_p2();
    void thread_brmerge_fu_1048_p2();
    void thread_buffer_V_address0();
    void thread_buffer_V_address1();
    void thread_buffer_V_ce0();
    void thread_buffer_V_ce1();
    void thread_buffer_V_we0();
    void thread_exitcond1_fu_895_p2();
    void thread_exitcond2_fu_1092_p2();
    void thread_exitcond3_fu_1075_p2();
    void thread_exitcond_fu_1058_p2();
    void thread_grp_fu_747_p2();
    void thread_grp_fu_753_p2();
    void thread_grp_fu_759_p2();
    void thread_grp_fu_765_p2();
    void thread_i_1_fu_901_p2();
    void thread_i_2_fu_1098_p2();
    void thread_i_3_fu_1081_p2();
    void thread_i_4_fu_1064_p2();
    void thread_p_1_fu_1002_p3();
    void thread_p_2_fu_954_p3();
    void thread_p_3_fu_1010_p3();
    void thread_p_s_fu_946_p3();
    void thread_rcCmdIn_V_address0();
    void thread_rcCmdIn_V_ce0();
    void thread_ret_V_1_fu_940_p2();
    void thread_ret_V_2_fu_968_p1();
    void thread_ret_V_2_fu_968_p4();
    void thread_ret_V_3_fu_996_p2();
    void thread_ret_V_fu_912_p1();
    void thread_ret_V_fu_912_p4();
    void thread_test_V_address0();
    void thread_test_V_ce0();
    void thread_test_V_d0();
    void thread_test_V_we0();
    void thread_tmp1_fu_1042_p2();
    void thread_tmp2_fu_1018_p2();
    void thread_tmp3_fu_1024_p2();
    void thread_tmp_10_fu_1128_p1();
    void thread_tmp_11_fu_1054_p1();
    void thread_tmp_12_fu_1109_p1();
    void thread_tmp_13_fu_1133_p1();
    void thread_tmp_14_fu_1138_p1();
    void thread_tmp_15_fu_1143_p1();
    void thread_tmp_16_fu_1148_p1();
    void thread_tmp_17_fu_1153_p1();
    void thread_tmp_18_fu_1158_p0();
    void thread_tmp_18_fu_1158_p1();
    void thread_tmp_19_fu_922_p1();
    void thread_tmp_19_fu_922_p3();
    void thread_tmp_1_fu_1104_p1();
    void thread_tmp_20_fu_930_p0();
    void thread_tmp_20_fu_930_p1();
    void thread_tmp_21_fu_978_p1();
    void thread_tmp_21_fu_978_p3();
    void thread_tmp_22_fu_986_p0();
    void thread_tmp_22_fu_986_p1();
    void thread_tmp_2_fu_1070_p1();
    void thread_tmp_3_fu_1113_p1();
    void thread_tmp_4_fu_907_p1();
    void thread_tmp_5_fu_990_p2();
    void thread_tmp_6_fu_934_p2();
    void thread_tmp_7_fu_1118_p1();
    void thread_tmp_8_fu_962_p2();
    void thread_tmp_9_fu_1123_p1();
    void thread_tmp_fu_1036_p2();
    void thread_tmp_s_fu_1087_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
