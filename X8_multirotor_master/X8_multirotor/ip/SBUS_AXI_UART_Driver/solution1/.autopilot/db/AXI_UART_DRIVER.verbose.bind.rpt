

================================================================
== Vivado HLS Report for 'AXI_UART_DRIVER'
================================================================
* Date:           Wed Jun  5 19:27:49 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        SBUS_AXI_UART_Driver
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|  9 ~ 21  |          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 64
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (firstSample_load)
	23  / (!firstSample_load)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / (calibrationSuccess_l)
	64  / (!calibrationSuccess_l)
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / (tmp_4)
	64  / (!tmp_4)
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	64  / (!tmp_5)
	44  / (tmp_5)
44 --> 
	45  / (tmp_6)
	64  / (!tmp_6)
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / (tmp_9)
	64  / (!tmp_9)
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	44  / (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & !tmp_7)

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %UART), !map !48"   --->   Operation 65 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %OUT_r), !map !54"   --->   Operation 66 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([16 x i8]* @AXI_UART_DRIVER_str) nounwind"   --->   Operation 67 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:31]   --->   Operation 68 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %UART, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [5 x i8]* @p_str4, [4 x i8]* @p_str5, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 69 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %OUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [4 x i8]* @p_str6, [4 x i8]* @p_str5, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 70 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i1* @firstSample, i32 1, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:44]   --->   Operation 71 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%firstSample_load = load i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:47]   --->   Operation 72 'load' 'firstSample_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "br i1 %firstSample_load, label %1, label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:47]   --->   Operation 73 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%UART_addr = getelementptr i32* %UART, i64 1031"   --->   Operation 74 'getelementptr' 'UART_addr' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (8.75ns)   --->   "%UART_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 75 'writereq' 'UART_addr_req' <Predicate = (firstSample_load)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 76 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr, i32 69, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 76 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%UART_addr_1 = getelementptr i32* %UART, i64 1027"   --->   Operation 77 'getelementptr' 'UART_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (8.75ns)   --->   "%UART_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 78 'writereq' 'UART_addr_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 79 [5/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 79 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 80 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 128, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 80 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%UART_addr_2 = getelementptr i32* %UART, i64 1024"   --->   Operation 81 'getelementptr' 'UART_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (8.75ns)   --->   "%UART_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_2, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 82 'writereq' 'UART_addr_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 83 [4/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 83 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 84 [5/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 84 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 85 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_2, i32 62, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 85 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%UART_addr_3 = getelementptr i32* %UART, i64 1025"   --->   Operation 86 'getelementptr' 'UART_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (8.75ns)   --->   "%UART_addr_3_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 87 'writereq' 'UART_addr_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 88 [3/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 88 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 89 [4/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 89 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 90 [5/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 90 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 91 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 0, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 91 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 92 [1/1] (8.75ns)   --->   "%UART_addr_1_req4 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 92 'writereq' 'UART_addr_1_req4' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 93 [2/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 93 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 94 [3/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 94 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 95 [4/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 95 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 96 [5/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 96 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 97 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 31, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 97 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%UART_addr_4 = getelementptr i32* %UART, i64 1026"   --->   Operation 98 'getelementptr' 'UART_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (8.75ns)   --->   "%UART_addr_4_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_4, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 99 'writereq' 'UART_addr_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 100 [1/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 100 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 101 [2/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 101 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 102 [3/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 102 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 103 [4/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 103 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 104 [5/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 104 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 105 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_4, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 105 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 106 [1/1] (8.75ns)   --->   "%UART_addr_3_req6 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 106 'writereq' 'UART_addr_3_req6' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 107 [1/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 107 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 108 [2/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 108 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 109 [3/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 109 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 110 [4/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 110 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 111 [5/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 111 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 112 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 112 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 113 [1/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 113 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 114 [2/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 114 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 115 [3/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 115 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 116 [4/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 116 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 117 [5/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 117 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 118 [1/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 118 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 119 [2/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 119 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 120 [3/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 120 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 121 [4/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 121 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 122 [1/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 122 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 123 [2/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 123 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 124 [3/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 124 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 125 [1/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 125 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 126 [2/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 126 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 127 [1/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 127 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 128 [7/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 128 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 129 [6/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 129 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 130 [5/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 130 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 131 [4/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 131 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.75>
ST_18 : Operation 132 [3/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 132 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 8.75>
ST_19 : Operation 133 [2/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 133 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.75>
ST_20 : Operation 134 [1/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 134 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 8.75>
ST_21 : Operation 135 [1/1] (8.75ns)   --->   "%UART_addr_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 135 'read' 'UART_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 136 [1/1] (0.00ns)   --->   "%temp = trunc i32 %UART_addr_read to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 136 'trunc' 'temp' <Predicate = true> <Delay = 0.00>

State 22 <SV = 21> <Delay = 1.55>
ST_22 : Operation 137 [1/1] (1.55ns)   --->   "%tmp = icmp eq i8 %temp, 69" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:79]   --->   Operation 137 'icmp' 'tmp' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 138 [1/1] (0.00ns)   --->   "br i1 %tmp, label %2, label %._crit_edge1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:79]   --->   Operation 138 'br' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 139 [1/1] (0.00ns)   --->   "store i1 true, i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 139 'store' <Predicate = (tmp)> <Delay = 0.00>
ST_22 : Operation 140 [1/1] (0.00ns)   --->   "br label %._crit_edge1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:82]   --->   Operation 140 'br' <Predicate = (tmp)> <Delay = 0.00>
ST_22 : Operation 141 [1/1] (0.00ns)   --->   "store i1 false, i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:85]   --->   Operation 141 'store' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 142 [1/1] (0.00ns)   --->   "br label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:86]   --->   Operation 142 'br' <Predicate = true> <Delay = 0.00>

State 23 <SV = 22> <Delay = 8.75>
ST_23 : Operation 143 [1/1] (0.00ns)   --->   "%calibrationSuccess_l = load i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:90]   --->   Operation 143 'load' 'calibrationSuccess_l' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 144 [1/1] (0.00ns)   --->   "br i1 %calibrationSuccess_l, label %3, label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:90]   --->   Operation 144 'br' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 145 [1/1] (0.00ns)   --->   "%UART_addr_5 = getelementptr i32* %UART, i64 1029"   --->   Operation 145 'getelementptr' 'UART_addr_5' <Predicate = (calibrationSuccess_l)> <Delay = 0.00>
ST_23 : Operation 146 [7/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 146 'readreq' 'UART_load_1_req' <Predicate = (calibrationSuccess_l)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 8.75>
ST_24 : Operation 147 [6/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 147 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 8.75>
ST_25 : Operation 148 [5/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 148 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 8.75>
ST_26 : Operation 149 [4/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 149 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 8.75>
ST_27 : Operation 150 [3/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 150 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 8.75>
ST_28 : Operation 151 [2/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 151 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 8.75>
ST_29 : Operation 152 [1/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 152 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 8.75>
ST_30 : Operation 153 [1/1] (8.75ns)   --->   "%UART_addr_5_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 153 'read' 'UART_addr_5_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_4 = trunc i32 %UART_addr_5_read to i1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 154 'trunc' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 155 [1/1] (0.00ns)   --->   "br i1 %tmp_4, label %4, label %._crit_edge3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:94]   --->   Operation 155 'br' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 156 [1/1] (0.00ns)   --->   "%UART_addr_6 = getelementptr i32* %UART, i64 1024"   --->   Operation 156 'getelementptr' 'UART_addr_6' <Predicate = (tmp_4)> <Delay = 0.00>
ST_30 : Operation 157 [7/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 157 'readreq' 'UART_load_2_req' <Predicate = (tmp_4)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 8.75>
ST_31 : Operation 158 [6/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 158 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 8.75>
ST_32 : Operation 159 [5/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 159 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 8.75>
ST_33 : Operation 160 [4/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 160 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 8.75>
ST_34 : Operation 161 [3/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 161 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 8.75>
ST_35 : Operation 162 [2/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 162 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 8.75>
ST_36 : Operation 163 [1/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 163 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 8.75>
ST_37 : Operation 164 [1/1] (8.75ns)   --->   "%UART_addr_6_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_6)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 164 'read' 'UART_addr_6_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_8 = trunc i32 %UART_addr_6_read to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 165 'trunc' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 166 [1/1] (8.75ns)   --->   "%OUT_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %OUT_r, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 166 'writereq' 'OUT_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 8.75>
ST_38 : Operation 167 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 %tmp_8, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 167 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 168 [1/1] (1.55ns)   --->   "%tmp_5 = icmp eq i8 %tmp_8, 15" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 168 'icmp' 'tmp_5' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 38> <Delay = 8.75>
ST_39 : Operation 169 [5/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 169 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 8.75>
ST_40 : Operation 170 [4/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 170 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 8.75>
ST_41 : Operation 171 [3/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 171 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 8.75>
ST_42 : Operation 172 [2/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 172 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 8.75>
ST_43 : Operation 173 [1/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 173 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 174 [1/1] (0.00ns)   --->   "br i1 %tmp_5, label %.preheader.preheader, label %._crit_edge4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 174 'br' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 175 [1/1] (0.00ns)   --->   "%NUM_BYTES_READ = alloca i5"   --->   Operation 175 'alloca' 'NUM_BYTES_READ' <Predicate = (tmp_5)> <Delay = 0.00>
ST_43 : Operation 176 [1/1] (1.76ns)   --->   "store i5 1, i5* %NUM_BYTES_READ"   --->   Operation 176 'store' <Predicate = (tmp_5)> <Delay = 1.76>
ST_43 : Operation 177 [1/1] (0.00ns)   --->   "br label %.preheader" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:103]   --->   Operation 177 'br' <Predicate = (tmp_5)> <Delay = 0.00>

State 44 <SV = 43> <Delay = 8.75>
ST_44 : Operation 178 [1/1] (0.00ns)   --->   "%NUM_BYTES_READ_load = load i5* %NUM_BYTES_READ" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:110]   --->   Operation 178 'load' 'NUM_BYTES_READ_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 179 [1/1] (1.36ns)   --->   "%tmp_6 = icmp ult i5 %NUM_BYTES_READ_load, -7" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:103]   --->   Operation 179 'icmp' 'tmp_6' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 180 [1/1] (0.00ns)   --->   "br i1 %tmp_6, label %5, label %.loopexit" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:103]   --->   Operation 180 'br' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 181 [7/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 181 'readreq' 'UART_load_3_req' <Predicate = (tmp_6)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 8.75>
ST_45 : Operation 182 [6/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 182 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 8.75>
ST_46 : Operation 183 [5/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 183 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 8.75>
ST_47 : Operation 184 [4/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 184 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 8.75>
ST_48 : Operation 185 [3/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 185 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 49 <SV = 48> <Delay = 8.75>
ST_49 : Operation 186 [2/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 186 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 50 <SV = 49> <Delay = 8.75>
ST_50 : Operation 187 [1/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 187 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 50> <Delay = 8.75>
ST_51 : Operation 188 [1/1] (8.75ns)   --->   "%UART_addr_5_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 188 'read' 'UART_addr_5_read_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_51 : Operation 189 [1/1] (0.00ns)   --->   "%tmp_9 = trunc i32 %UART_addr_5_read_1 to i1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 189 'trunc' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 190 [1/1] (0.00ns)   --->   "br i1 %tmp_9, label %6, label %._crit_edge5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 190 'br' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 191 [7/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 191 'readreq' 'UART_load_4_req' <Predicate = (tmp_9)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_51 : Operation 192 [1/1] (1.76ns)   --->   "store i14 0, i14* @cycle_count, align 2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:111]   --->   Operation 192 'store' <Predicate = (tmp_9)> <Delay = 1.76>

State 52 <SV = 51> <Delay = 8.75>
ST_52 : Operation 193 [6/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 193 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 8.75>
ST_53 : Operation 194 [5/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 194 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 8.75>
ST_54 : Operation 195 [4/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 195 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 54> <Delay = 8.75>
ST_55 : Operation 196 [3/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 196 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 55> <Delay = 8.75>
ST_56 : Operation 197 [2/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 197 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 57 <SV = 56> <Delay = 8.75>
ST_57 : Operation 198 [1/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 198 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 58 <SV = 57> <Delay = 8.75>
ST_58 : Operation 199 [1/1] (8.75ns)   --->   "%UART_addr_6_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_6)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 199 'read' 'UART_addr_6_read_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 200 [1/1] (0.00ns)   --->   "%tmp_10 = trunc i32 %UART_addr_6_read_1 to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 200 'trunc' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 201 [1/1] (0.00ns)   --->   "%tmp_1 = zext i5 %NUM_BYTES_READ_load to i64" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 201 'zext' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 202 [1/1] (0.00ns)   --->   "%OUT_addr = getelementptr i8* %OUT_r, i64 %tmp_1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 202 'getelementptr' 'OUT_addr' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 203 [1/1] (8.75ns)   --->   "%OUT_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %OUT_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 203 'writereq' 'OUT_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 204 [1/1] (1.78ns)   --->   "%NUM_BYTES_READ_1 = add i5 1, %NUM_BYTES_READ_load" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:110]   --->   Operation 204 'add' 'NUM_BYTES_READ_1' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 205 [1/1] (1.76ns)   --->   "store i5 %NUM_BYTES_READ_1, i5* %NUM_BYTES_READ" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:110]   --->   Operation 205 'store' <Predicate = true> <Delay = 1.76>

State 59 <SV = 58> <Delay = 8.75>
ST_59 : Operation 206 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_addr, i8 %tmp_10, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 206 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 60 <SV = 59> <Delay = 8.75>
ST_60 : Operation 207 [5/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 207 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 61 <SV = 60> <Delay = 8.75>
ST_61 : Operation 208 [4/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 208 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 62 <SV = 61> <Delay = 8.75>
ST_62 : Operation 209 [3/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 209 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 63 <SV = 62> <Delay = 8.75>
ST_63 : Operation 210 [2/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 210 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 64 <SV = 63> <Delay = 8.75>
ST_64 : Operation 211 [1/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 211 'writeresp' 'OUT_addr_resp' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & tmp_9)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 212 [1/1] (0.00ns)   --->   "br label %._crit_edge5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:112]   --->   Operation 212 'br' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & tmp_9)> <Delay = 0.00>
ST_64 : Operation 213 [1/1] (0.00ns)   --->   "%cycle_count_load = load i14* @cycle_count, align 2"   --->   Operation 213 'load' 'cycle_count_load' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6)> <Delay = 0.00>
ST_64 : Operation 214 [1/1] (2.20ns)   --->   "%tmp_7 = icmp ugt i14 %cycle_count_load, -6384" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:113]   --->   Operation 214 'icmp' 'tmp_7' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6)> <Delay = 2.20> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 215 [1/1] (0.00ns)   --->   "br i1 %tmp_7, label %.loopexit, label %7" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:113]   --->   Operation 215 'br' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6)> <Delay = 0.00>
ST_64 : Operation 216 [1/1] (1.81ns)   --->   "%tmp_2 = add i14 %cycle_count_load, 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:117]   --->   Operation 216 'add' 'tmp_2' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & !tmp_7)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 217 [1/1] (1.76ns)   --->   "store i14 %tmp_2, i14* @cycle_count, align 2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:117]   --->   Operation 217 'store' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & !tmp_7)> <Delay = 1.76>
ST_64 : Operation 218 [1/1] (0.00ns)   --->   "br label %.preheader" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:118]   --->   Operation 218 'br' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & !tmp_7)> <Delay = 0.00>
ST_64 : Operation 219 [1/1] (0.00ns)   --->   "br label %._crit_edge4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:119]   --->   Operation 219 'br' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & !tmp_6) | (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_7)> <Delay = 0.00>
ST_64 : Operation 220 [1/1] (0.00ns)   --->   "br label %._crit_edge3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:120]   --->   Operation 220 'br' <Predicate = (calibrationSuccess_l & tmp_4 & !tmp_5) | (calibrationSuccess_l & tmp_4 & !tmp_6) | (calibrationSuccess_l & tmp_4 & tmp_7)> <Delay = 0.00>
ST_64 : Operation 221 [1/1] (0.00ns)   --->   "br label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:121]   --->   Operation 221 'br' <Predicate = (calibrationSuccess_l & !tmp_4) | (calibrationSuccess_l & !tmp_5) | (calibrationSuccess_l & !tmp_6) | (calibrationSuccess_l & tmp_7)> <Delay = 0.00>
ST_64 : Operation 222 [1/1] (0.00ns)   --->   "ret void" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:122]   --->   Operation 222 'ret' <Predicate = (!calibrationSuccess_l) | (!tmp_4) | (!tmp_5) | (!tmp_6) | (tmp_7)> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ UART]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ OUT_r]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ firstSample]:  wired=0; compound=0; hidden=1; nouse=0; global=1; static=1; extern=0; dir=2; type=0; pingpong=0; private_global=1; linkage=7; visibility=0; IO mode=ap_ovld:ce=0
Port [ calibrationSuccess]:  wired=0; compound=0; hidden=1; nouse=0; global=1; static=1; extern=0; dir=2; type=0; pingpong=0; private_global=1; linkage=7; visibility=0; IO mode=ap_ovld:ce=0
Port [ cycle_count]:  wired=0; compound=0; hidden=1; nouse=0; global=1; static=1; extern=0; dir=2; type=0; pingpong=0; private_global=1; linkage=7; visibility=0; IO mode=ap_ovld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
StgValue_65          (specbitsmap  ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_66          (specbitsmap  ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_67          (spectopmodule) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_68          (specinterface) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_69          (specinterface) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_70          (specinterface) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_71          (specreset    ) [ 00000000000000000000000000000000000000000000000000000000000000000]
firstSample_load     (load         ) [ 01000000000000000000000000000000000000000000000000000000000000000]
StgValue_73          (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr            (getelementptr) [ 00111111111111111111110000000000000000000000000000000000000000000]
UART_addr_req        (writereq     ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_76          (write        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_1          (getelementptr) [ 00011111111100000000000000000000000000000000000000000000000000000]
UART_addr_1_req      (writereq     ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_80          (write        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_2          (getelementptr) [ 00001111110000000000000000000000000000000000000000000000000000000]
UART_addr_2_req      (writereq     ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_85          (write        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_3          (getelementptr) [ 00000111111111000000000000000000000000000000000000000000000000000]
UART_addr_3_req      (writereq     ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_91          (write        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_1_req4     (writereq     ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_97          (write        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_4          (getelementptr) [ 00000001111110000000000000000000000000000000000000000000000000000]
UART_addr_4_req      (writereq     ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_resp       (writeresp    ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_105         (write        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_3_req6     (writereq     ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_1_resp     (writeresp    ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_112         (write        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_2_resp     (writeresp    ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_3_resp     (writeresp    ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_1_resp5    (writeresp    ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_4_resp     (writeresp    ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_3_resp7    (writeresp    ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_load_req        (readreq      ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_read       (read         ) [ 00000000000000000000000000000000000000000000000000000000000000000]
temp                 (trunc        ) [ 00000000000000000000001000000000000000000000000000000000000000000]
tmp                  (icmp         ) [ 00000000000000000000001000000000000000000000000000000000000000000]
StgValue_138         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_139         (store        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_140         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_141         (store        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_142         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
calibrationSuccess_l (load         ) [ 00000000000000000000000111111111111111111111111111111111111111111]
StgValue_144         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_5          (getelementptr) [ 00000000000000000000000011111111111111111111111111111111111111111]
UART_load_1_req      (readreq      ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_5_read     (read         ) [ 00000000000000000000000000000000000000000000000000000000000000000]
tmp_4                (trunc        ) [ 00000000000000000000000000000011111111111111111111111111111111111]
StgValue_155         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_6          (getelementptr) [ 00000000000000000000000000000001111111111111111111111111111111111]
UART_load_2_req      (readreq      ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_6_read     (read         ) [ 00000000000000000000000000000000000000000000000000000000000000000]
tmp_8                (trunc        ) [ 00000000000000000000000000000000000000100000000000000000000000000]
OUT_req              (writereq     ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_167         (write        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
tmp_5                (icmp         ) [ 00000000000000000000000000000000000000011111111111111111111111111]
OUT_resp             (writeresp    ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_174         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
NUM_BYTES_READ       (alloca       ) [ 00000000000000000000000000000000000000000001111111111111111111111]
StgValue_176         (store        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_177         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
NUM_BYTES_READ_load  (load         ) [ 00000000000000000000000000000000000000000000011111111111111000000]
tmp_6                (icmp         ) [ 00000000000000000000000000000000000000000000111111111111111111111]
StgValue_180         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_load_3_req      (readreq      ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_5_read_1   (read         ) [ 00000000000000000000000000000000000000000000000000000000000000000]
tmp_9                (trunc        ) [ 00000000000000000000000000000000000000000000111111111111111111111]
StgValue_190         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_192         (store        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_load_4_req      (readreq      ) [ 00000000000000000000000000000000000000000000000000000000000000000]
UART_addr_6_read_1   (read         ) [ 00000000000000000000000000000000000000000000000000000000000000000]
tmp_10               (trunc        ) [ 00000000000000000000000000000000000000000000000000000000000100000]
tmp_1                (zext         ) [ 00000000000000000000000000000000000000000000000000000000000000000]
OUT_addr             (getelementptr) [ 00000000000000000000000000000000000000000000111111110000000111111]
OUT_addr_req         (writereq     ) [ 00000000000000000000000000000000000000000000000000000000000000000]
NUM_BYTES_READ_1     (add          ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_205         (store        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_206         (write        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
OUT_addr_resp        (writeresp    ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_212         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
cycle_count_load     (load         ) [ 00000000000000000000000000000000000000000000000000000000000000000]
tmp_7                (icmp         ) [ 00000000000000000000000000000000000000000000111111111111111111111]
StgValue_215         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
tmp_2                (add          ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_217         (store        ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_218         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_219         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_220         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_221         (br           ) [ 00000000000000000000000000000000000000000000000000000000000000000]
StgValue_222         (ret          ) [ 00000000000000000000000000000000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="UART">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="UART"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="OUT_r">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="OUT_r"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="firstSample">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="firstSample"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="calibrationSuccess">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="calibrationSuccess"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="cycle_count">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="cycle_count"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="AXI_UART_DRIVER_str"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str6"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecReset"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="76" class="1001" name="const_76">
<pin_list>
<pin id="77" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="78" class="1001" name="const_78">
<pin_list>
<pin id="79" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="80" class="1001" name="const_80">
<pin_list>
<pin id="81" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="82" class="1001" name="const_82">
<pin_list>
<pin id="83" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="84" class="1001" name="const_84">
<pin_list>
<pin id="85" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="86" class="1001" name="const_86">
<pin_list>
<pin id="87" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="88" class="1001" name="const_88">
<pin_list>
<pin id="89" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="90" class="1001" name="const_90">
<pin_list>
<pin id="91" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="92" class="1001" name="const_92">
<pin_list>
<pin id="93" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="94" class="1001" name="const_94">
<pin_list>
<pin id="95" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="96" class="1001" name="const_96">
<pin_list>
<pin id="97" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="98" class="1004" name="NUM_BYTES_READ_fu_98">
<pin_list>
<pin id="99" dir="0" index="0" bw="1" slack="0"/>
<pin id="100" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="NUM_BYTES_READ/43 "/>
</bind>
</comp>

<comp id="102" class="1004" name="grp_readreq_fu_102">
<pin_list>
<pin id="103" dir="0" index="0" bw="1" slack="0"/>
<pin id="104" dir="0" index="1" bw="32" slack="0"/>
<pin id="105" dir="0" index="2" bw="1" slack="0"/>
<pin id="106" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) writereq(1155) writeresp(1158) " fcode="readreq"/>
<opset="UART_addr_req/1 UART_addr_resp/3 UART_load_req/14 "/>
</bind>
</comp>

<comp id="109" class="1004" name="StgValue_76_write_fu_109">
<pin_list>
<pin id="110" dir="0" index="0" bw="0" slack="0"/>
<pin id="111" dir="0" index="1" bw="32" slack="1"/>
<pin id="112" dir="0" index="2" bw="8" slack="0"/>
<pin id="113" dir="0" index="3" bw="1" slack="0"/>
<pin id="114" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_76/2 "/>
</bind>
</comp>

<comp id="118" class="1004" name="grp_writeresp_fu_118">
<pin_list>
<pin id="119" dir="0" index="0" bw="1" slack="0"/>
<pin id="120" dir="0" index="1" bw="32" slack="0"/>
<pin id="121" dir="0" index="2" bw="1" slack="0"/>
<pin id="122" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_1_req/2 UART_addr_1_resp/4 UART_addr_1_req4/5 UART_addr_1_resp5/7 "/>
</bind>
</comp>

<comp id="126" class="1004" name="StgValue_80_write_fu_126">
<pin_list>
<pin id="127" dir="0" index="0" bw="0" slack="0"/>
<pin id="128" dir="0" index="1" bw="32" slack="1"/>
<pin id="129" dir="0" index="2" bw="9" slack="0"/>
<pin id="130" dir="0" index="3" bw="1" slack="0"/>
<pin id="131" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_80/3 "/>
</bind>
</comp>

<comp id="135" class="1004" name="grp_writeresp_fu_135">
<pin_list>
<pin id="136" dir="0" index="0" bw="1" slack="0"/>
<pin id="137" dir="0" index="1" bw="32" slack="0"/>
<pin id="138" dir="0" index="2" bw="1" slack="0"/>
<pin id="139" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_2_req/3 UART_addr_2_resp/5 "/>
</bind>
</comp>

<comp id="143" class="1004" name="StgValue_85_write_fu_143">
<pin_list>
<pin id="144" dir="0" index="0" bw="0" slack="0"/>
<pin id="145" dir="0" index="1" bw="32" slack="1"/>
<pin id="146" dir="0" index="2" bw="7" slack="0"/>
<pin id="147" dir="0" index="3" bw="1" slack="0"/>
<pin id="148" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_85/4 "/>
</bind>
</comp>

<comp id="152" class="1004" name="grp_writeresp_fu_152">
<pin_list>
<pin id="153" dir="0" index="0" bw="1" slack="0"/>
<pin id="154" dir="0" index="1" bw="32" slack="0"/>
<pin id="155" dir="0" index="2" bw="1" slack="0"/>
<pin id="156" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_3_req/4 UART_addr_3_resp/6 UART_addr_3_req6/7 UART_addr_3_resp7/9 "/>
</bind>
</comp>

<comp id="160" class="1004" name="StgValue_91_write_fu_160">
<pin_list>
<pin id="161" dir="0" index="0" bw="0" slack="0"/>
<pin id="162" dir="0" index="1" bw="32" slack="1"/>
<pin id="163" dir="0" index="2" bw="1" slack="0"/>
<pin id="164" dir="0" index="3" bw="1" slack="0"/>
<pin id="165" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_91/5 "/>
</bind>
</comp>

<comp id="170" class="1004" name="StgValue_97_write_fu_170">
<pin_list>
<pin id="171" dir="0" index="0" bw="0" slack="0"/>
<pin id="172" dir="0" index="1" bw="32" slack="4"/>
<pin id="173" dir="0" index="2" bw="6" slack="0"/>
<pin id="174" dir="0" index="3" bw="1" slack="0"/>
<pin id="175" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_97/6 "/>
</bind>
</comp>

<comp id="179" class="1004" name="grp_writeresp_fu_179">
<pin_list>
<pin id="180" dir="0" index="0" bw="1" slack="0"/>
<pin id="181" dir="0" index="1" bw="32" slack="0"/>
<pin id="182" dir="0" index="2" bw="1" slack="0"/>
<pin id="183" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="UART_addr_4_req/6 UART_addr_4_resp/8 "/>
</bind>
</comp>

<comp id="186" class="1004" name="StgValue_105_write_fu_186">
<pin_list>
<pin id="187" dir="0" index="0" bw="0" slack="0"/>
<pin id="188" dir="0" index="1" bw="32" slack="1"/>
<pin id="189" dir="0" index="2" bw="1" slack="0"/>
<pin id="190" dir="0" index="3" bw="1" slack="0"/>
<pin id="191" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_105/7 "/>
</bind>
</comp>

<comp id="196" class="1004" name="StgValue_112_write_fu_196">
<pin_list>
<pin id="197" dir="0" index="0" bw="0" slack="0"/>
<pin id="198" dir="0" index="1" bw="32" slack="4"/>
<pin id="199" dir="0" index="2" bw="1" slack="0"/>
<pin id="200" dir="0" index="3" bw="1" slack="0"/>
<pin id="201" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_112/8 "/>
</bind>
</comp>

<comp id="206" class="1004" name="UART_addr_read_read_fu_206">
<pin_list>
<pin id="207" dir="0" index="0" bw="32" slack="0"/>
<pin id="208" dir="0" index="1" bw="32" slack="20"/>
<pin id="209" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="UART_addr_read/21 "/>
</bind>
</comp>

<comp id="211" class="1004" name="grp_readreq_fu_211">
<pin_list>
<pin id="212" dir="0" index="0" bw="1" slack="0"/>
<pin id="213" dir="0" index="1" bw="32" slack="0"/>
<pin id="214" dir="0" index="2" bw="1" slack="0"/>
<pin id="215" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="UART_load_1_req/23 UART_load_3_req/44 "/>
</bind>
</comp>

<comp id="218" class="1004" name="grp_read_fu_218">
<pin_list>
<pin id="219" dir="0" index="0" bw="32" slack="0"/>
<pin id="220" dir="0" index="1" bw="32" slack="7"/>
<pin id="221" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="UART_addr_5_read/30 UART_addr_5_read_1/51 "/>
</bind>
</comp>

<comp id="223" class="1004" name="grp_readreq_fu_223">
<pin_list>
<pin id="224" dir="0" index="0" bw="1" slack="0"/>
<pin id="225" dir="0" index="1" bw="32" slack="0"/>
<pin id="226" dir="0" index="2" bw="1" slack="0"/>
<pin id="227" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="UART_load_2_req/30 UART_load_4_req/51 "/>
</bind>
</comp>

<comp id="230" class="1004" name="grp_read_fu_230">
<pin_list>
<pin id="231" dir="0" index="0" bw="32" slack="0"/>
<pin id="232" dir="0" index="1" bw="32" slack="7"/>
<pin id="233" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="UART_addr_6_read/37 UART_addr_6_read_1/58 "/>
</bind>
</comp>

<comp id="235" class="1004" name="grp_writeresp_fu_235">
<pin_list>
<pin id="236" dir="0" index="0" bw="1" slack="0"/>
<pin id="237" dir="0" index="1" bw="8" slack="0"/>
<pin id="238" dir="0" index="2" bw="1" slack="0"/>
<pin id="239" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="OUT_req/37 OUT_resp/39 "/>
</bind>
</comp>

<comp id="243" class="1004" name="StgValue_167_write_fu_243">
<pin_list>
<pin id="244" dir="0" index="0" bw="0" slack="0"/>
<pin id="245" dir="0" index="1" bw="8" slack="0"/>
<pin id="246" dir="0" index="2" bw="8" slack="1"/>
<pin id="247" dir="0" index="3" bw="1" slack="0"/>
<pin id="248" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_167/38 "/>
</bind>
</comp>

<comp id="253" class="1004" name="grp_writeresp_fu_253">
<pin_list>
<pin id="254" dir="0" index="0" bw="1" slack="0"/>
<pin id="255" dir="0" index="1" bw="8" slack="0"/>
<pin id="256" dir="0" index="2" bw="1" slack="0"/>
<pin id="257" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="OUT_addr_req/58 OUT_addr_resp/60 "/>
</bind>
</comp>

<comp id="260" class="1004" name="StgValue_206_write_fu_260">
<pin_list>
<pin id="261" dir="0" index="0" bw="0" slack="0"/>
<pin id="262" dir="0" index="1" bw="8" slack="1"/>
<pin id="263" dir="0" index="2" bw="8" slack="1"/>
<pin id="264" dir="0" index="3" bw="1" slack="0"/>
<pin id="265" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_206/59 "/>
</bind>
</comp>

<comp id="269" class="1004" name="grp_fu_269">
<pin_list>
<pin id="270" dir="0" index="0" bw="32" slack="0"/>
<pin id="271" dir="0" index="1" bw="12" slack="0"/>
<pin id="272" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_2/3 UART_addr_6/30 "/>
</bind>
</comp>

<comp id="277" class="1005" name="reg_277">
<pin_list>
<pin id="278" dir="0" index="0" bw="32" slack="1"/>
<pin id="279" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_2 UART_addr_6 "/>
</bind>
</comp>

<comp id="285" class="1004" name="firstSample_load_load_fu_285">
<pin_list>
<pin id="286" dir="0" index="0" bw="1" slack="0"/>
<pin id="287" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="firstSample_load/1 "/>
</bind>
</comp>

<comp id="289" class="1004" name="UART_addr_fu_289">
<pin_list>
<pin id="290" dir="0" index="0" bw="32" slack="0"/>
<pin id="291" dir="0" index="1" bw="12" slack="0"/>
<pin id="292" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr/1 "/>
</bind>
</comp>

<comp id="296" class="1004" name="UART_addr_1_fu_296">
<pin_list>
<pin id="297" dir="0" index="0" bw="32" slack="0"/>
<pin id="298" dir="0" index="1" bw="12" slack="0"/>
<pin id="299" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_1/2 "/>
</bind>
</comp>

<comp id="303" class="1004" name="UART_addr_3_fu_303">
<pin_list>
<pin id="304" dir="0" index="0" bw="32" slack="0"/>
<pin id="305" dir="0" index="1" bw="12" slack="0"/>
<pin id="306" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_3/4 "/>
</bind>
</comp>

<comp id="310" class="1004" name="UART_addr_4_fu_310">
<pin_list>
<pin id="311" dir="0" index="0" bw="32" slack="0"/>
<pin id="312" dir="0" index="1" bw="12" slack="0"/>
<pin id="313" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_4/6 "/>
</bind>
</comp>

<comp id="317" class="1004" name="temp_fu_317">
<pin_list>
<pin id="318" dir="0" index="0" bw="32" slack="0"/>
<pin id="319" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="temp/21 "/>
</bind>
</comp>

<comp id="321" class="1004" name="tmp_fu_321">
<pin_list>
<pin id="322" dir="0" index="0" bw="8" slack="1"/>
<pin id="323" dir="0" index="1" bw="8" slack="0"/>
<pin id="324" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp/22 "/>
</bind>
</comp>

<comp id="326" class="1004" name="StgValue_139_store_fu_326">
<pin_list>
<pin id="327" dir="0" index="0" bw="1" slack="0"/>
<pin id="328" dir="0" index="1" bw="1" slack="0"/>
<pin id="329" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_139/22 "/>
</bind>
</comp>

<comp id="332" class="1004" name="StgValue_141_store_fu_332">
<pin_list>
<pin id="333" dir="0" index="0" bw="1" slack="0"/>
<pin id="334" dir="0" index="1" bw="1" slack="0"/>
<pin id="335" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_141/22 "/>
</bind>
</comp>

<comp id="338" class="1004" name="calibrationSuccess_l_load_fu_338">
<pin_list>
<pin id="339" dir="0" index="0" bw="1" slack="0"/>
<pin id="340" dir="1" index="1" bw="1" slack="41"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="calibrationSuccess_l/23 "/>
</bind>
</comp>

<comp id="342" class="1004" name="UART_addr_5_fu_342">
<pin_list>
<pin id="343" dir="0" index="0" bw="32" slack="0"/>
<pin id="344" dir="0" index="1" bw="12" slack="0"/>
<pin id="345" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="UART_addr_5/23 "/>
</bind>
</comp>

<comp id="349" class="1004" name="tmp_4_fu_349">
<pin_list>
<pin id="350" dir="0" index="0" bw="32" slack="0"/>
<pin id="351" dir="1" index="1" bw="1" slack="34"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_4/30 "/>
</bind>
</comp>

<comp id="353" class="1004" name="tmp_8_fu_353">
<pin_list>
<pin id="354" dir="0" index="0" bw="32" slack="0"/>
<pin id="355" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_8/37 "/>
</bind>
</comp>

<comp id="357" class="1004" name="tmp_5_fu_357">
<pin_list>
<pin id="358" dir="0" index="0" bw="8" slack="1"/>
<pin id="359" dir="0" index="1" bw="5" slack="0"/>
<pin id="360" dir="1" index="2" bw="1" slack="5"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_5/38 "/>
</bind>
</comp>

<comp id="362" class="1004" name="StgValue_176_store_fu_362">
<pin_list>
<pin id="363" dir="0" index="0" bw="1" slack="0"/>
<pin id="364" dir="0" index="1" bw="5" slack="0"/>
<pin id="365" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_176/43 "/>
</bind>
</comp>

<comp id="367" class="1004" name="NUM_BYTES_READ_load_load_fu_367">
<pin_list>
<pin id="368" dir="0" index="0" bw="5" slack="1"/>
<pin id="369" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="NUM_BYTES_READ_load/44 "/>
</bind>
</comp>

<comp id="370" class="1004" name="tmp_6_fu_370">
<pin_list>
<pin id="371" dir="0" index="0" bw="5" slack="0"/>
<pin id="372" dir="0" index="1" bw="5" slack="0"/>
<pin id="373" dir="1" index="2" bw="1" slack="20"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_6/44 "/>
</bind>
</comp>

<comp id="376" class="1004" name="tmp_9_fu_376">
<pin_list>
<pin id="377" dir="0" index="0" bw="32" slack="0"/>
<pin id="378" dir="1" index="1" bw="1" slack="13"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_9/51 "/>
</bind>
</comp>

<comp id="380" class="1004" name="StgValue_192_store_fu_380">
<pin_list>
<pin id="381" dir="0" index="0" bw="1" slack="0"/>
<pin id="382" dir="0" index="1" bw="14" slack="0"/>
<pin id="383" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_192/51 "/>
</bind>
</comp>

<comp id="386" class="1004" name="tmp_10_fu_386">
<pin_list>
<pin id="387" dir="0" index="0" bw="32" slack="0"/>
<pin id="388" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_10/58 "/>
</bind>
</comp>

<comp id="390" class="1004" name="tmp_1_fu_390">
<pin_list>
<pin id="391" dir="0" index="0" bw="5" slack="14"/>
<pin id="392" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp_1/58 "/>
</bind>
</comp>

<comp id="393" class="1004" name="OUT_addr_fu_393">
<pin_list>
<pin id="394" dir="0" index="0" bw="8" slack="0"/>
<pin id="395" dir="0" index="1" bw="5" slack="0"/>
<pin id="396" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="OUT_addr/58 "/>
</bind>
</comp>

<comp id="400" class="1004" name="NUM_BYTES_READ_1_fu_400">
<pin_list>
<pin id="401" dir="0" index="0" bw="1" slack="0"/>
<pin id="402" dir="0" index="1" bw="5" slack="14"/>
<pin id="403" dir="1" index="2" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="NUM_BYTES_READ_1/58 "/>
</bind>
</comp>

<comp id="405" class="1004" name="StgValue_205_store_fu_405">
<pin_list>
<pin id="406" dir="0" index="0" bw="5" slack="0"/>
<pin id="407" dir="0" index="1" bw="5" slack="15"/>
<pin id="408" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_205/58 "/>
</bind>
</comp>

<comp id="410" class="1004" name="cycle_count_load_load_fu_410">
<pin_list>
<pin id="411" dir="0" index="0" bw="14" slack="0"/>
<pin id="412" dir="1" index="1" bw="14" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="cycle_count_load/64 "/>
</bind>
</comp>

<comp id="414" class="1004" name="tmp_7_fu_414">
<pin_list>
<pin id="415" dir="0" index="0" bw="14" slack="0"/>
<pin id="416" dir="0" index="1" bw="14" slack="0"/>
<pin id="417" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_7/64 "/>
</bind>
</comp>

<comp id="420" class="1004" name="tmp_2_fu_420">
<pin_list>
<pin id="421" dir="0" index="0" bw="14" slack="0"/>
<pin id="422" dir="0" index="1" bw="1" slack="0"/>
<pin id="423" dir="1" index="2" bw="14" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp_2/64 "/>
</bind>
</comp>

<comp id="426" class="1004" name="StgValue_217_store_fu_426">
<pin_list>
<pin id="427" dir="0" index="0" bw="14" slack="0"/>
<pin id="428" dir="0" index="1" bw="14" slack="0"/>
<pin id="429" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_217/64 "/>
</bind>
</comp>

<comp id="435" class="1005" name="UART_addr_reg_435">
<pin_list>
<pin id="436" dir="0" index="0" bw="32" slack="1"/>
<pin id="437" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr "/>
</bind>
</comp>

<comp id="442" class="1005" name="UART_addr_1_reg_442">
<pin_list>
<pin id="443" dir="0" index="0" bw="32" slack="1"/>
<pin id="444" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_1 "/>
</bind>
</comp>

<comp id="449" class="1005" name="UART_addr_3_reg_449">
<pin_list>
<pin id="450" dir="0" index="0" bw="32" slack="1"/>
<pin id="451" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_3 "/>
</bind>
</comp>

<comp id="456" class="1005" name="UART_addr_4_reg_456">
<pin_list>
<pin id="457" dir="0" index="0" bw="32" slack="1"/>
<pin id="458" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_4 "/>
</bind>
</comp>

<comp id="462" class="1005" name="temp_reg_462">
<pin_list>
<pin id="463" dir="0" index="0" bw="8" slack="1"/>
<pin id="464" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="temp "/>
</bind>
</comp>

<comp id="470" class="1005" name="calibrationSuccess_l_reg_470">
<pin_list>
<pin id="471" dir="0" index="0" bw="1" slack="41"/>
<pin id="472" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="calibrationSuccess_l "/>
</bind>
</comp>

<comp id="474" class="1005" name="UART_addr_5_reg_474">
<pin_list>
<pin id="475" dir="0" index="0" bw="32" slack="1"/>
<pin id="476" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="UART_addr_5 "/>
</bind>
</comp>

<comp id="480" class="1005" name="tmp_4_reg_480">
<pin_list>
<pin id="481" dir="0" index="0" bw="1" slack="34"/>
<pin id="482" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_4 "/>
</bind>
</comp>

<comp id="484" class="1005" name="tmp_8_reg_484">
<pin_list>
<pin id="485" dir="0" index="0" bw="8" slack="1"/>
<pin id="486" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="tmp_8 "/>
</bind>
</comp>

<comp id="490" class="1005" name="tmp_5_reg_490">
<pin_list>
<pin id="491" dir="0" index="0" bw="1" slack="5"/>
<pin id="492" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_5 "/>
</bind>
</comp>

<comp id="494" class="1005" name="NUM_BYTES_READ_reg_494">
<pin_list>
<pin id="495" dir="0" index="0" bw="5" slack="0"/>
<pin id="496" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opset="NUM_BYTES_READ "/>
</bind>
</comp>

<comp id="501" class="1005" name="NUM_BYTES_READ_load_reg_501">
<pin_list>
<pin id="502" dir="0" index="0" bw="5" slack="14"/>
<pin id="503" dir="1" index="1" bw="5" slack="14"/>
</pin_list>
<bind>
<opset="NUM_BYTES_READ_load "/>
</bind>
</comp>

<comp id="507" class="1005" name="tmp_6_reg_507">
<pin_list>
<pin id="508" dir="0" index="0" bw="1" slack="20"/>
<pin id="509" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_6 "/>
</bind>
</comp>

<comp id="511" class="1005" name="tmp_9_reg_511">
<pin_list>
<pin id="512" dir="0" index="0" bw="1" slack="13"/>
<pin id="513" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_9 "/>
</bind>
</comp>

<comp id="515" class="1005" name="tmp_10_reg_515">
<pin_list>
<pin id="516" dir="0" index="0" bw="8" slack="1"/>
<pin id="517" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="tmp_10 "/>
</bind>
</comp>

<comp id="520" class="1005" name="OUT_addr_reg_520">
<pin_list>
<pin id="521" dir="0" index="0" bw="8" slack="1"/>
<pin id="522" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="OUT_addr "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="101"><net_src comp="40" pin="0"/><net_sink comp="98" pin=0"/></net>

<net id="107"><net_src comp="44" pin="0"/><net_sink comp="102" pin=0"/></net>

<net id="108"><net_src comp="40" pin="0"/><net_sink comp="102" pin=2"/></net>

<net id="115"><net_src comp="46" pin="0"/><net_sink comp="109" pin=0"/></net>

<net id="116"><net_src comp="48" pin="0"/><net_sink comp="109" pin=2"/></net>

<net id="117"><net_src comp="50" pin="0"/><net_sink comp="109" pin=3"/></net>

<net id="123"><net_src comp="44" pin="0"/><net_sink comp="118" pin=0"/></net>

<net id="124"><net_src comp="40" pin="0"/><net_sink comp="118" pin=2"/></net>

<net id="125"><net_src comp="54" pin="0"/><net_sink comp="102" pin=0"/></net>

<net id="132"><net_src comp="46" pin="0"/><net_sink comp="126" pin=0"/></net>

<net id="133"><net_src comp="56" pin="0"/><net_sink comp="126" pin=2"/></net>

<net id="134"><net_src comp="50" pin="0"/><net_sink comp="126" pin=3"/></net>

<net id="140"><net_src comp="44" pin="0"/><net_sink comp="135" pin=0"/></net>

<net id="141"><net_src comp="40" pin="0"/><net_sink comp="135" pin=2"/></net>

<net id="142"><net_src comp="54" pin="0"/><net_sink comp="118" pin=0"/></net>

<net id="149"><net_src comp="46" pin="0"/><net_sink comp="143" pin=0"/></net>

<net id="150"><net_src comp="60" pin="0"/><net_sink comp="143" pin=2"/></net>

<net id="151"><net_src comp="50" pin="0"/><net_sink comp="143" pin=3"/></net>

<net id="157"><net_src comp="44" pin="0"/><net_sink comp="152" pin=0"/></net>

<net id="158"><net_src comp="40" pin="0"/><net_sink comp="152" pin=2"/></net>

<net id="159"><net_src comp="54" pin="0"/><net_sink comp="135" pin=0"/></net>

<net id="166"><net_src comp="46" pin="0"/><net_sink comp="160" pin=0"/></net>

<net id="167"><net_src comp="18" pin="0"/><net_sink comp="160" pin=2"/></net>

<net id="168"><net_src comp="50" pin="0"/><net_sink comp="160" pin=3"/></net>

<net id="169"><net_src comp="54" pin="0"/><net_sink comp="152" pin=0"/></net>

<net id="176"><net_src comp="46" pin="0"/><net_sink comp="170" pin=0"/></net>

<net id="177"><net_src comp="64" pin="0"/><net_sink comp="170" pin=2"/></net>

<net id="178"><net_src comp="50" pin="0"/><net_sink comp="170" pin=3"/></net>

<net id="184"><net_src comp="44" pin="0"/><net_sink comp="179" pin=0"/></net>

<net id="185"><net_src comp="40" pin="0"/><net_sink comp="179" pin=2"/></net>

<net id="192"><net_src comp="46" pin="0"/><net_sink comp="186" pin=0"/></net>

<net id="193"><net_src comp="40" pin="0"/><net_sink comp="186" pin=2"/></net>

<net id="194"><net_src comp="50" pin="0"/><net_sink comp="186" pin=3"/></net>

<net id="195"><net_src comp="54" pin="0"/><net_sink comp="179" pin=0"/></net>

<net id="202"><net_src comp="46" pin="0"/><net_sink comp="196" pin=0"/></net>

<net id="203"><net_src comp="40" pin="0"/><net_sink comp="196" pin=2"/></net>

<net id="204"><net_src comp="50" pin="0"/><net_sink comp="196" pin=3"/></net>

<net id="205"><net_src comp="68" pin="0"/><net_sink comp="102" pin=0"/></net>

<net id="210"><net_src comp="70" pin="0"/><net_sink comp="206" pin=0"/></net>

<net id="216"><net_src comp="68" pin="0"/><net_sink comp="211" pin=0"/></net>

<net id="217"><net_src comp="40" pin="0"/><net_sink comp="211" pin=2"/></net>

<net id="222"><net_src comp="70" pin="0"/><net_sink comp="218" pin=0"/></net>

<net id="228"><net_src comp="68" pin="0"/><net_sink comp="223" pin=0"/></net>

<net id="229"><net_src comp="40" pin="0"/><net_sink comp="223" pin=2"/></net>

<net id="234"><net_src comp="70" pin="0"/><net_sink comp="230" pin=0"/></net>

<net id="240"><net_src comp="80" pin="0"/><net_sink comp="235" pin=0"/></net>

<net id="241"><net_src comp="2" pin="0"/><net_sink comp="235" pin=1"/></net>

<net id="242"><net_src comp="40" pin="0"/><net_sink comp="235" pin=2"/></net>

<net id="249"><net_src comp="82" pin="0"/><net_sink comp="243" pin=0"/></net>

<net id="250"><net_src comp="2" pin="0"/><net_sink comp="243" pin=1"/></net>

<net id="251"><net_src comp="74" pin="0"/><net_sink comp="243" pin=3"/></net>

<net id="252"><net_src comp="86" pin="0"/><net_sink comp="235" pin=0"/></net>

<net id="258"><net_src comp="80" pin="0"/><net_sink comp="253" pin=0"/></net>

<net id="259"><net_src comp="40" pin="0"/><net_sink comp="253" pin=2"/></net>

<net id="266"><net_src comp="82" pin="0"/><net_sink comp="260" pin=0"/></net>

<net id="267"><net_src comp="74" pin="0"/><net_sink comp="260" pin=3"/></net>

<net id="268"><net_src comp="86" pin="0"/><net_sink comp="253" pin=0"/></net>

<net id="273"><net_src comp="0" pin="0"/><net_sink comp="269" pin=0"/></net>

<net id="274"><net_src comp="58" pin="0"/><net_sink comp="269" pin=1"/></net>

<net id="275"><net_src comp="269" pin="2"/><net_sink comp="135" pin=1"/></net>

<net id="276"><net_src comp="269" pin="2"/><net_sink comp="223" pin=1"/></net>

<net id="280"><net_src comp="269" pin="2"/><net_sink comp="277" pin=0"/></net>

<net id="281"><net_src comp="277" pin="1"/><net_sink comp="143" pin=1"/></net>

<net id="282"><net_src comp="277" pin="1"/><net_sink comp="135" pin=1"/></net>

<net id="283"><net_src comp="277" pin="1"/><net_sink comp="223" pin=1"/></net>

<net id="284"><net_src comp="277" pin="1"/><net_sink comp="230" pin=1"/></net>

<net id="288"><net_src comp="4" pin="0"/><net_sink comp="285" pin=0"/></net>

<net id="293"><net_src comp="0" pin="0"/><net_sink comp="289" pin=0"/></net>

<net id="294"><net_src comp="42" pin="0"/><net_sink comp="289" pin=1"/></net>

<net id="295"><net_src comp="289" pin="2"/><net_sink comp="102" pin=1"/></net>

<net id="300"><net_src comp="0" pin="0"/><net_sink comp="296" pin=0"/></net>

<net id="301"><net_src comp="52" pin="0"/><net_sink comp="296" pin=1"/></net>

<net id="302"><net_src comp="296" pin="2"/><net_sink comp="118" pin=1"/></net>

<net id="307"><net_src comp="0" pin="0"/><net_sink comp="303" pin=0"/></net>

<net id="308"><net_src comp="62" pin="0"/><net_sink comp="303" pin=1"/></net>

<net id="309"><net_src comp="303" pin="2"/><net_sink comp="152" pin=1"/></net>

<net id="314"><net_src comp="0" pin="0"/><net_sink comp="310" pin=0"/></net>

<net id="315"><net_src comp="66" pin="0"/><net_sink comp="310" pin=1"/></net>

<net id="316"><net_src comp="310" pin="2"/><net_sink comp="179" pin=1"/></net>

<net id="320"><net_src comp="206" pin="2"/><net_sink comp="317" pin=0"/></net>

<net id="325"><net_src comp="72" pin="0"/><net_sink comp="321" pin=1"/></net>

<net id="330"><net_src comp="74" pin="0"/><net_sink comp="326" pin=0"/></net>

<net id="331"><net_src comp="6" pin="0"/><net_sink comp="326" pin=1"/></net>

<net id="336"><net_src comp="76" pin="0"/><net_sink comp="332" pin=0"/></net>

<net id="337"><net_src comp="4" pin="0"/><net_sink comp="332" pin=1"/></net>

<net id="341"><net_src comp="6" pin="0"/><net_sink comp="338" pin=0"/></net>

<net id="346"><net_src comp="0" pin="0"/><net_sink comp="342" pin=0"/></net>

<net id="347"><net_src comp="78" pin="0"/><net_sink comp="342" pin=1"/></net>

<net id="348"><net_src comp="342" pin="2"/><net_sink comp="211" pin=1"/></net>

<net id="352"><net_src comp="218" pin="2"/><net_sink comp="349" pin=0"/></net>

<net id="356"><net_src comp="230" pin="2"/><net_sink comp="353" pin=0"/></net>

<net id="361"><net_src comp="84" pin="0"/><net_sink comp="357" pin=1"/></net>

<net id="366"><net_src comp="88" pin="0"/><net_sink comp="362" pin=0"/></net>

<net id="374"><net_src comp="367" pin="1"/><net_sink comp="370" pin=0"/></net>

<net id="375"><net_src comp="90" pin="0"/><net_sink comp="370" pin=1"/></net>

<net id="379"><net_src comp="218" pin="2"/><net_sink comp="376" pin=0"/></net>

<net id="384"><net_src comp="92" pin="0"/><net_sink comp="380" pin=0"/></net>

<net id="385"><net_src comp="8" pin="0"/><net_sink comp="380" pin=1"/></net>

<net id="389"><net_src comp="230" pin="2"/><net_sink comp="386" pin=0"/></net>

<net id="397"><net_src comp="2" pin="0"/><net_sink comp="393" pin=0"/></net>

<net id="398"><net_src comp="390" pin="1"/><net_sink comp="393" pin=1"/></net>

<net id="399"><net_src comp="393" pin="2"/><net_sink comp="253" pin=1"/></net>

<net id="404"><net_src comp="88" pin="0"/><net_sink comp="400" pin=0"/></net>

<net id="409"><net_src comp="400" pin="2"/><net_sink comp="405" pin=0"/></net>

<net id="413"><net_src comp="8" pin="0"/><net_sink comp="410" pin=0"/></net>

<net id="418"><net_src comp="410" pin="1"/><net_sink comp="414" pin=0"/></net>

<net id="419"><net_src comp="94" pin="0"/><net_sink comp="414" pin=1"/></net>

<net id="424"><net_src comp="410" pin="1"/><net_sink comp="420" pin=0"/></net>

<net id="425"><net_src comp="96" pin="0"/><net_sink comp="420" pin=1"/></net>

<net id="430"><net_src comp="420" pin="2"/><net_sink comp="426" pin=0"/></net>

<net id="431"><net_src comp="8" pin="0"/><net_sink comp="426" pin=1"/></net>

<net id="438"><net_src comp="289" pin="2"/><net_sink comp="435" pin=0"/></net>

<net id="439"><net_src comp="435" pin="1"/><net_sink comp="109" pin=1"/></net>

<net id="440"><net_src comp="435" pin="1"/><net_sink comp="102" pin=1"/></net>

<net id="441"><net_src comp="435" pin="1"/><net_sink comp="206" pin=1"/></net>

<net id="445"><net_src comp="296" pin="2"/><net_sink comp="442" pin=0"/></net>

<net id="446"><net_src comp="442" pin="1"/><net_sink comp="126" pin=1"/></net>

<net id="447"><net_src comp="442" pin="1"/><net_sink comp="118" pin=1"/></net>

<net id="448"><net_src comp="442" pin="1"/><net_sink comp="170" pin=1"/></net>

<net id="452"><net_src comp="303" pin="2"/><net_sink comp="449" pin=0"/></net>

<net id="453"><net_src comp="449" pin="1"/><net_sink comp="160" pin=1"/></net>

<net id="454"><net_src comp="449" pin="1"/><net_sink comp="152" pin=1"/></net>

<net id="455"><net_src comp="449" pin="1"/><net_sink comp="196" pin=1"/></net>

<net id="459"><net_src comp="310" pin="2"/><net_sink comp="456" pin=0"/></net>

<net id="460"><net_src comp="456" pin="1"/><net_sink comp="186" pin=1"/></net>

<net id="461"><net_src comp="456" pin="1"/><net_sink comp="179" pin=1"/></net>

<net id="465"><net_src comp="317" pin="1"/><net_sink comp="462" pin=0"/></net>

<net id="466"><net_src comp="462" pin="1"/><net_sink comp="321" pin=0"/></net>

<net id="473"><net_src comp="338" pin="1"/><net_sink comp="470" pin=0"/></net>

<net id="477"><net_src comp="342" pin="2"/><net_sink comp="474" pin=0"/></net>

<net id="478"><net_src comp="474" pin="1"/><net_sink comp="211" pin=1"/></net>

<net id="479"><net_src comp="474" pin="1"/><net_sink comp="218" pin=1"/></net>

<net id="483"><net_src comp="349" pin="1"/><net_sink comp="480" pin=0"/></net>

<net id="487"><net_src comp="353" pin="1"/><net_sink comp="484" pin=0"/></net>

<net id="488"><net_src comp="484" pin="1"/><net_sink comp="243" pin=2"/></net>

<net id="489"><net_src comp="484" pin="1"/><net_sink comp="357" pin=0"/></net>

<net id="493"><net_src comp="357" pin="2"/><net_sink comp="490" pin=0"/></net>

<net id="497"><net_src comp="98" pin="1"/><net_sink comp="494" pin=0"/></net>

<net id="498"><net_src comp="494" pin="1"/><net_sink comp="362" pin=1"/></net>

<net id="499"><net_src comp="494" pin="1"/><net_sink comp="367" pin=0"/></net>

<net id="500"><net_src comp="494" pin="1"/><net_sink comp="405" pin=1"/></net>

<net id="504"><net_src comp="367" pin="1"/><net_sink comp="501" pin=0"/></net>

<net id="505"><net_src comp="501" pin="1"/><net_sink comp="390" pin=0"/></net>

<net id="506"><net_src comp="501" pin="1"/><net_sink comp="400" pin=1"/></net>

<net id="510"><net_src comp="370" pin="2"/><net_sink comp="507" pin=0"/></net>

<net id="514"><net_src comp="376" pin="1"/><net_sink comp="511" pin=0"/></net>

<net id="518"><net_src comp="386" pin="1"/><net_sink comp="515" pin=0"/></net>

<net id="519"><net_src comp="515" pin="1"/><net_sink comp="260" pin=2"/></net>

<net id="523"><net_src comp="393" pin="2"/><net_sink comp="520" pin=0"/></net>

<net id="524"><net_src comp="520" pin="1"/><net_sink comp="260" pin=1"/></net>

<net id="525"><net_src comp="520" pin="1"/><net_sink comp="253" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: UART | {1 2 3 4 5 6 7 8 9 10 11 12 13 }
	Port: OUT_r | {37 38 39 40 41 42 43 58 59 60 61 62 63 64 }
	Port: firstSample | {22 }
	Port: calibrationSuccess | {22 }
	Port: cycle_count | {51 64 }
 - Input state : 
	Port: AXI_UART_DRIVER : UART | {14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 }
	Port: AXI_UART_DRIVER : firstSample | {1 }
	Port: AXI_UART_DRIVER : calibrationSuccess | {23 }
	Port: AXI_UART_DRIVER : cycle_count | {64 }
  - Chain level:
	State 1
		StgValue_73 : 1
		UART_addr_req : 1
	State 2
		UART_addr_1_req : 1
	State 3
		UART_addr_2_req : 1
	State 4
		UART_addr_3_req : 1
	State 5
	State 6
		UART_addr_4_req : 1
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
		StgValue_138 : 1
	State 23
		StgValue_144 : 1
		UART_load_1_req : 1
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
		StgValue_155 : 1
		UART_load_2_req : 1
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
		StgValue_176 : 1
	State 44
		tmp_6 : 1
		StgValue_180 : 2
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
		StgValue_190 : 1
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
		OUT_addr : 1
		OUT_addr_req : 2
		StgValue_205 : 1
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
		tmp_7 : 1
		StgValue_215 : 2
		tmp_2 : 1
		StgValue_217 : 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------------------|---------|---------|
| Operation|       Functional Unit      |    FF   |   LUT   |
|----------|----------------------------|---------|---------|
|          |         tmp_fu_321         |    0    |    11   |
|   icmp   |        tmp_5_fu_357        |    0    |    11   |
|          |        tmp_6_fu_370        |    0    |    11   |
|          |        tmp_7_fu_414        |    0    |    13   |
|----------|----------------------------|---------|---------|
|    add   |   NUM_BYTES_READ_1_fu_400  |    0    |    15   |
|          |        tmp_2_fu_420        |    0    |    19   |
|----------|----------------------------|---------|---------|
|          |     grp_readreq_fu_102     |    0    |    0    |
|  readreq |     grp_readreq_fu_211     |    0    |    0    |
|          |     grp_readreq_fu_223     |    0    |    0    |
|----------|----------------------------|---------|---------|
|          |  StgValue_76_write_fu_109  |    0    |    0    |
|          |  StgValue_80_write_fu_126  |    0    |    0    |
|          |  StgValue_85_write_fu_143  |    0    |    0    |
|          |  StgValue_91_write_fu_160  |    0    |    0    |
|   write  |  StgValue_97_write_fu_170  |    0    |    0    |
|          |  StgValue_105_write_fu_186 |    0    |    0    |
|          |  StgValue_112_write_fu_196 |    0    |    0    |
|          |  StgValue_167_write_fu_243 |    0    |    0    |
|          |  StgValue_206_write_fu_260 |    0    |    0    |
|----------|----------------------------|---------|---------|
|          |    grp_writeresp_fu_118    |    0    |    0    |
|          |    grp_writeresp_fu_135    |    0    |    0    |
| writeresp|    grp_writeresp_fu_152    |    0    |    0    |
|          |    grp_writeresp_fu_179    |    0    |    0    |
|          |    grp_writeresp_fu_235    |    0    |    0    |
|          |    grp_writeresp_fu_253    |    0    |    0    |
|----------|----------------------------|---------|---------|
|          | UART_addr_read_read_fu_206 |    0    |    0    |
|   read   |       grp_read_fu_218      |    0    |    0    |
|          |       grp_read_fu_230      |    0    |    0    |
|----------|----------------------------|---------|---------|
|          |         temp_fu_317        |    0    |    0    |
|          |        tmp_4_fu_349        |    0    |    0    |
|   trunc  |        tmp_8_fu_353        |    0    |    0    |
|          |        tmp_9_fu_376        |    0    |    0    |
|          |        tmp_10_fu_386       |    0    |    0    |
|----------|----------------------------|---------|---------|
|   zext   |        tmp_1_fu_390        |    0    |    0    |
|----------|----------------------------|---------|---------|
|   Total  |                            |    0    |    80   |
|----------|----------------------------|---------|---------|

Memories:
N/A

* Register list:
+----------------------------+--------+
|                            |   FF   |
+----------------------------+--------+
| NUM_BYTES_READ_load_reg_501|    5   |
|   NUM_BYTES_READ_reg_494   |    5   |
|      OUT_addr_reg_520      |    8   |
|     UART_addr_1_reg_442    |   32   |
|     UART_addr_3_reg_449    |   32   |
|     UART_addr_4_reg_456    |   32   |
|     UART_addr_5_reg_474    |   32   |
|      UART_addr_reg_435     |   32   |
|calibrationSuccess_l_reg_470|    1   |
|           reg_277          |   32   |
|        temp_reg_462        |    8   |
|       tmp_10_reg_515       |    8   |
|        tmp_4_reg_480       |    1   |
|        tmp_5_reg_490       |    1   |
|        tmp_6_reg_507       |    1   |
|        tmp_8_reg_484       |    8   |
|        tmp_9_reg_511       |    1   |
+----------------------------+--------+
|            Total           |   239  |
+----------------------------+--------+

* Multiplexer (MUX) list: 
|----------------------|------|------|------|--------||---------||---------|
|         Comp         |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|----------------------|------|------|------|--------||---------||---------|
|  grp_readreq_fu_102  |  p0  |   3  |   1  |    3   |
|  grp_readreq_fu_102  |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_118 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_118 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_135 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_135 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_152 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_152 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_179 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_179 |  p1  |   2  |  32  |   64   ||    9    |
|  grp_readreq_fu_211  |  p1  |   2  |  32  |   64   ||    9    |
|  grp_readreq_fu_223  |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_235 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_253 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_253 |  p1  |   2  |   8  |   16   ||    9    |
|----------------------|------|------|------|--------||---------||---------|
|         Total        |      |      |      |   479  || 26.5807 ||    72   |
|----------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   80   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|   26   |    -   |   72   |
|  Register |    -   |   239  |    -   |
+-----------+--------+--------+--------+
|   Total   |   26   |   239  |   152  |
+-----------+--------+--------+--------+
