

================================================================
== Vivado HLS Report for 'AXI_UART_DRIVER'
================================================================
* Date:           Wed Jun  5 19:27:48 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        SBUS_AXI_UART_Driver
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|  9 ~ 21  |          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 64
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (firstSample_load)
	23  / (!firstSample_load)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / (calibrationSuccess_l)
	64  / (!calibrationSuccess_l)
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / (tmp_4)
	64  / (!tmp_4)
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	64  / (!tmp_5)
	44  / (tmp_5)
44 --> 
	45  / (tmp_6)
	64  / (!tmp_6)
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / (tmp_9)
	64  / (!tmp_9)
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	44  / (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & !tmp_7)

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %UART), !map !48"   --->   Operation 65 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %OUT_r), !map !54"   --->   Operation 66 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([16 x i8]* @AXI_UART_DRIVER_str) nounwind"   --->   Operation 67 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:31]   --->   Operation 68 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %UART, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [5 x i8]* @p_str4, [4 x i8]* @p_str5, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 69 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %OUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 4096, [4 x i8]* @p_str6, [4 x i8]* @p_str5, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 70 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i1* @firstSample, i32 1, [1 x i8]* @p_str) nounwind" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:44]   --->   Operation 71 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%firstSample_load = load i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:47]   --->   Operation 72 'load' 'firstSample_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "br i1 %firstSample_load, label %1, label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:47]   --->   Operation 73 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%UART_addr = getelementptr i32* %UART, i64 1031"   --->   Operation 74 'getelementptr' 'UART_addr' <Predicate = (firstSample_load)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (8.75ns)   --->   "%UART_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 75 'writereq' 'UART_addr_req' <Predicate = (firstSample_load)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 76 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr, i32 69, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 76 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%UART_addr_1 = getelementptr i32* %UART, i64 1027"   --->   Operation 77 'getelementptr' 'UART_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (8.75ns)   --->   "%UART_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 78 'writereq' 'UART_addr_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 79 [5/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 79 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 80 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 128, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 80 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%UART_addr_2 = getelementptr i32* %UART, i64 1024"   --->   Operation 81 'getelementptr' 'UART_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (8.75ns)   --->   "%UART_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_2, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 82 'writereq' 'UART_addr_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 83 [4/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 83 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 84 [5/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 84 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 85 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_2, i32 62, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 85 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%UART_addr_3 = getelementptr i32* %UART, i64 1025"   --->   Operation 86 'getelementptr' 'UART_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (8.75ns)   --->   "%UART_addr_3_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 87 'writereq' 'UART_addr_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 88 [3/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 88 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 89 [4/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 89 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 90 [5/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 90 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 91 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 0, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 91 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 92 [1/1] (8.75ns)   --->   "%UART_addr_1_req4 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_1, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 92 'writereq' 'UART_addr_1_req4' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 93 [2/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 93 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 94 [3/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 94 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 95 [4/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 95 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 96 [5/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 96 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 97 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_1, i32 31, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 97 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%UART_addr_4 = getelementptr i32* %UART, i64 1026"   --->   Operation 98 'getelementptr' 'UART_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (8.75ns)   --->   "%UART_addr_4_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_4, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 99 'writereq' 'UART_addr_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 100 [1/5] (8.75ns)   --->   "%UART_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52]   --->   Operation 100 'writeresp' 'UART_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 101 [2/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 101 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 102 [3/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 102 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 103 [4/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 103 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 104 [5/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 104 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 105 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_4, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 105 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 106 [1/1] (8.75ns)   --->   "%UART_addr_3_req6 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %UART_addr_3, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 106 'writereq' 'UART_addr_3_req6' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 107 [1/5] (8.75ns)   --->   "%UART_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55]   --->   Operation 107 'writeresp' 'UART_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 108 [2/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 108 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 109 [3/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 109 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 110 [4/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 110 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 111 [5/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 111 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 112 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %UART_addr_3, i32 1, i4 -1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 112 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 113 [1/5] (8.75ns)   --->   "%UART_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_2)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59]   --->   Operation 113 'writeresp' 'UART_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 114 [2/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 114 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 115 [3/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 115 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 116 [4/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 116 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 117 [5/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 117 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 118 [1/5] (8.75ns)   --->   "%UART_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62]   --->   Operation 118 'writeresp' 'UART_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 119 [2/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 119 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 120 [3/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 120 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 121 [4/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 121 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 122 [1/5] (8.75ns)   --->   "%UART_addr_1_resp5 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65]   --->   Operation 122 'writeresp' 'UART_addr_1_resp5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 123 [2/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 123 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 124 [3/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 124 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 125 [1/5] (8.75ns)   --->   "%UART_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_4)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68]   --->   Operation 125 'writeresp' 'UART_addr_4_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 126 [2/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 126 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 127 [1/5] (8.75ns)   --->   "%UART_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %UART_addr_3)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74]   --->   Operation 127 'writeresp' 'UART_addr_3_resp7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 128 [7/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 128 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 129 [6/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 129 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 130 [5/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 130 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 131 [4/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 131 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.75>
ST_18 : Operation 132 [3/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 132 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 8.75>
ST_19 : Operation 133 [2/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 133 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.75>
ST_20 : Operation 134 [1/7] (8.75ns)   --->   "%UART_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 134 'readreq' 'UART_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 8.75>
ST_21 : Operation 135 [1/1] (8.75ns)   --->   "%UART_addr_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 135 'read' 'UART_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 136 [1/1] (0.00ns)   --->   "%temp = trunc i32 %UART_addr_read to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78]   --->   Operation 136 'trunc' 'temp' <Predicate = true> <Delay = 0.00>

State 22 <SV = 21> <Delay = 1.55>
ST_22 : Operation 137 [1/1] (1.55ns)   --->   "%tmp = icmp eq i8 %temp, 69" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:79]   --->   Operation 137 'icmp' 'tmp' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 138 [1/1] (0.00ns)   --->   "br i1 %tmp, label %2, label %._crit_edge1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:79]   --->   Operation 138 'br' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 139 [1/1] (0.00ns)   --->   "store i1 true, i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:81]   --->   Operation 139 'store' <Predicate = (tmp)> <Delay = 0.00>
ST_22 : Operation 140 [1/1] (0.00ns)   --->   "br label %._crit_edge1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:82]   --->   Operation 140 'br' <Predicate = (tmp)> <Delay = 0.00>
ST_22 : Operation 141 [1/1] (0.00ns)   --->   "store i1 false, i1* @firstSample, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:85]   --->   Operation 141 'store' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 142 [1/1] (0.00ns)   --->   "br label %._crit_edge" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:86]   --->   Operation 142 'br' <Predicate = true> <Delay = 0.00>

State 23 <SV = 22> <Delay = 8.75>
ST_23 : Operation 143 [1/1] (0.00ns)   --->   "%calibrationSuccess_l = load i1* @calibrationSuccess, align 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:90]   --->   Operation 143 'load' 'calibrationSuccess_l' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 144 [1/1] (0.00ns)   --->   "br i1 %calibrationSuccess_l, label %3, label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:90]   --->   Operation 144 'br' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 145 [1/1] (0.00ns)   --->   "%UART_addr_5 = getelementptr i32* %UART, i64 1029"   --->   Operation 145 'getelementptr' 'UART_addr_5' <Predicate = (calibrationSuccess_l)> <Delay = 0.00>
ST_23 : Operation 146 [7/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 146 'readreq' 'UART_load_1_req' <Predicate = (calibrationSuccess_l)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 8.75>
ST_24 : Operation 147 [6/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 147 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 8.75>
ST_25 : Operation 148 [5/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 148 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 8.75>
ST_26 : Operation 149 [4/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 149 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 8.75>
ST_27 : Operation 150 [3/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 150 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 8.75>
ST_28 : Operation 151 [2/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 151 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 8.75>
ST_29 : Operation 152 [1/7] (8.75ns)   --->   "%UART_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 152 'readreq' 'UART_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 8.75>
ST_30 : Operation 153 [1/1] (8.75ns)   --->   "%UART_addr_5_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 153 'read' 'UART_addr_5_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_4 = trunc i32 %UART_addr_5_read to i1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93]   --->   Operation 154 'trunc' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 155 [1/1] (0.00ns)   --->   "br i1 %tmp_4, label %4, label %._crit_edge3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:94]   --->   Operation 155 'br' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 156 [1/1] (0.00ns)   --->   "%UART_addr_6 = getelementptr i32* %UART, i64 1024"   --->   Operation 156 'getelementptr' 'UART_addr_6' <Predicate = (tmp_4)> <Delay = 0.00>
ST_30 : Operation 157 [7/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 157 'readreq' 'UART_load_2_req' <Predicate = (tmp_4)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 8.75>
ST_31 : Operation 158 [6/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 158 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 8.75>
ST_32 : Operation 159 [5/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 159 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 8.75>
ST_33 : Operation 160 [4/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 160 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 8.75>
ST_34 : Operation 161 [3/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 161 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 8.75>
ST_35 : Operation 162 [2/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 162 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 8.75>
ST_36 : Operation 163 [1/7] (8.75ns)   --->   "%UART_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 163 'readreq' 'UART_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 8.75>
ST_37 : Operation 164 [1/1] (8.75ns)   --->   "%UART_addr_6_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_6)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 164 'read' 'UART_addr_6_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_8 = trunc i32 %UART_addr_6_read to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 165 'trunc' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 166 [1/1] (8.75ns)   --->   "%OUT_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %OUT_r, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 166 'writereq' 'OUT_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 8.75>
ST_38 : Operation 167 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_r, i8 %tmp_8, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 167 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 168 [1/1] (1.55ns)   --->   "%tmp_5 = icmp eq i8 %tmp_8, 15" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 168 'icmp' 'tmp_5' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 38> <Delay = 8.75>
ST_39 : Operation 169 [5/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 169 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 8.75>
ST_40 : Operation 170 [4/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 170 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 8.75>
ST_41 : Operation 171 [3/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 171 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 8.75>
ST_42 : Operation 172 [2/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 172 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 8.75>
ST_43 : Operation 173 [1/5] (8.75ns)   --->   "%OUT_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_r)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96]   --->   Operation 173 'writeresp' 'OUT_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 174 [1/1] (0.00ns)   --->   "br i1 %tmp_5, label %.preheader.preheader, label %._crit_edge4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:100]   --->   Operation 174 'br' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 175 [1/1] (0.00ns)   --->   "%NUM_BYTES_READ = alloca i5"   --->   Operation 175 'alloca' 'NUM_BYTES_READ' <Predicate = (tmp_5)> <Delay = 0.00>
ST_43 : Operation 176 [1/1] (1.76ns)   --->   "store i5 1, i5* %NUM_BYTES_READ"   --->   Operation 176 'store' <Predicate = (tmp_5)> <Delay = 1.76>
ST_43 : Operation 177 [1/1] (0.00ns)   --->   "br label %.preheader" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:103]   --->   Operation 177 'br' <Predicate = (tmp_5)> <Delay = 0.00>

State 44 <SV = 43> <Delay = 8.75>
ST_44 : Operation 178 [1/1] (0.00ns)   --->   "%NUM_BYTES_READ_load = load i5* %NUM_BYTES_READ" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:110]   --->   Operation 178 'load' 'NUM_BYTES_READ_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 179 [1/1] (1.36ns)   --->   "%tmp_6 = icmp ult i5 %NUM_BYTES_READ_load, -7" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:103]   --->   Operation 179 'icmp' 'tmp_6' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 180 [1/1] (0.00ns)   --->   "br i1 %tmp_6, label %5, label %.loopexit" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:103]   --->   Operation 180 'br' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 181 [7/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 181 'readreq' 'UART_load_3_req' <Predicate = (tmp_6)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 8.75>
ST_45 : Operation 182 [6/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 182 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 8.75>
ST_46 : Operation 183 [5/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 183 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 8.75>
ST_47 : Operation 184 [4/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 184 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 8.75>
ST_48 : Operation 185 [3/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 185 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 49 <SV = 48> <Delay = 8.75>
ST_49 : Operation 186 [2/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 186 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 50 <SV = 49> <Delay = 8.75>
ST_50 : Operation 187 [1/7] (8.75ns)   --->   "%UART_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_5, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 187 'readreq' 'UART_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 50> <Delay = 8.75>
ST_51 : Operation 188 [1/1] (8.75ns)   --->   "%UART_addr_5_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_5)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 188 'read' 'UART_addr_5_read_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_51 : Operation 189 [1/1] (0.00ns)   --->   "%tmp_9 = trunc i32 %UART_addr_5_read_1 to i1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106]   --->   Operation 189 'trunc' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 190 [1/1] (0.00ns)   --->   "br i1 %tmp_9, label %6, label %._crit_edge5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:107]   --->   Operation 190 'br' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 191 [7/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 191 'readreq' 'UART_load_4_req' <Predicate = (tmp_9)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_51 : Operation 192 [1/1] (1.76ns)   --->   "store i14 0, i14* @cycle_count, align 2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:111]   --->   Operation 192 'store' <Predicate = (tmp_9)> <Delay = 1.76>

State 52 <SV = 51> <Delay = 8.75>
ST_52 : Operation 193 [6/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 193 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 8.75>
ST_53 : Operation 194 [5/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 194 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 8.75>
ST_54 : Operation 195 [4/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 195 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 54> <Delay = 8.75>
ST_55 : Operation 196 [3/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 196 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 55> <Delay = 8.75>
ST_56 : Operation 197 [2/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 197 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 57 <SV = 56> <Delay = 8.75>
ST_57 : Operation 198 [1/7] (8.75ns)   --->   "%UART_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %UART_addr_6, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 198 'readreq' 'UART_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 58 <SV = 57> <Delay = 8.75>
ST_58 : Operation 199 [1/1] (8.75ns)   --->   "%UART_addr_6_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %UART_addr_6)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 199 'read' 'UART_addr_6_read_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 200 [1/1] (0.00ns)   --->   "%tmp_10 = trunc i32 %UART_addr_6_read_1 to i8" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 200 'trunc' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 201 [1/1] (0.00ns)   --->   "%tmp_1 = zext i5 %NUM_BYTES_READ_load to i64" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 201 'zext' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 202 [1/1] (0.00ns)   --->   "%OUT_addr = getelementptr i8* %OUT_r, i64 %tmp_1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 202 'getelementptr' 'OUT_addr' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 203 [1/1] (8.75ns)   --->   "%OUT_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %OUT_addr, i32 1)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 203 'writereq' 'OUT_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 204 [1/1] (1.78ns)   --->   "%NUM_BYTES_READ_1 = add i5 1, %NUM_BYTES_READ_load" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:110]   --->   Operation 204 'add' 'NUM_BYTES_READ_1' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 205 [1/1] (1.76ns)   --->   "store i5 %NUM_BYTES_READ_1, i5* %NUM_BYTES_READ" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:110]   --->   Operation 205 'store' <Predicate = true> <Delay = 1.76>

State 59 <SV = 58> <Delay = 8.75>
ST_59 : Operation 206 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %OUT_addr, i8 %tmp_10, i1 true)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 206 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 60 <SV = 59> <Delay = 8.75>
ST_60 : Operation 207 [5/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 207 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 61 <SV = 60> <Delay = 8.75>
ST_61 : Operation 208 [4/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 208 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 62 <SV = 61> <Delay = 8.75>
ST_62 : Operation 209 [3/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 209 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 63 <SV = 62> <Delay = 8.75>
ST_63 : Operation 210 [2/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 210 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 64 <SV = 63> <Delay = 8.75>
ST_64 : Operation 211 [1/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %OUT_addr)" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109]   --->   Operation 211 'writeresp' 'OUT_addr_resp' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & tmp_9)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 212 [1/1] (0.00ns)   --->   "br label %._crit_edge5" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:112]   --->   Operation 212 'br' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & tmp_9)> <Delay = 0.00>
ST_64 : Operation 213 [1/1] (0.00ns)   --->   "%cycle_count_load = load i14* @cycle_count, align 2"   --->   Operation 213 'load' 'cycle_count_load' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6)> <Delay = 0.00>
ST_64 : Operation 214 [1/1] (2.20ns)   --->   "%tmp_7 = icmp ugt i14 %cycle_count_load, -6384" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:113]   --->   Operation 214 'icmp' 'tmp_7' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6)> <Delay = 2.20> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 215 [1/1] (0.00ns)   --->   "br i1 %tmp_7, label %.loopexit, label %7" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:113]   --->   Operation 215 'br' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6)> <Delay = 0.00>
ST_64 : Operation 216 [1/1] (1.81ns)   --->   "%tmp_2 = add i14 %cycle_count_load, 1" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:117]   --->   Operation 216 'add' 'tmp_2' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & !tmp_7)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 217 [1/1] (1.76ns)   --->   "store i14 %tmp_2, i14* @cycle_count, align 2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:117]   --->   Operation 217 'store' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & !tmp_7)> <Delay = 1.76>
ST_64 : Operation 218 [1/1] (0.00ns)   --->   "br label %.preheader" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:118]   --->   Operation 218 'br' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_6 & !tmp_7)> <Delay = 0.00>
ST_64 : Operation 219 [1/1] (0.00ns)   --->   "br label %._crit_edge4" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:119]   --->   Operation 219 'br' <Predicate = (calibrationSuccess_l & tmp_4 & tmp_5 & !tmp_6) | (calibrationSuccess_l & tmp_4 & tmp_5 & tmp_7)> <Delay = 0.00>
ST_64 : Operation 220 [1/1] (0.00ns)   --->   "br label %._crit_edge3" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:120]   --->   Operation 220 'br' <Predicate = (calibrationSuccess_l & tmp_4 & !tmp_5) | (calibrationSuccess_l & tmp_4 & !tmp_6) | (calibrationSuccess_l & tmp_4 & tmp_7)> <Delay = 0.00>
ST_64 : Operation 221 [1/1] (0.00ns)   --->   "br label %._crit_edge2" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:121]   --->   Operation 221 'br' <Predicate = (calibrationSuccess_l & !tmp_4) | (calibrationSuccess_l & !tmp_5) | (calibrationSuccess_l & !tmp_6) | (calibrationSuccess_l & tmp_7)> <Delay = 0.00>
ST_64 : Operation 222 [1/1] (0.00ns)   --->   "ret void" [SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:122]   --->   Operation 222 'ret' <Predicate = (!calibrationSuccess_l) | (!tmp_4) | (!tmp_5) | (!tmp_6) | (tmp_7)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('UART_addr') [16]  (0 ns)
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52) [17]  (8.75 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	bus write on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52) [18]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52) [19]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52) [19]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52) [19]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52) [19]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:52) [19]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:55) [23]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:59) [27]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:62) [31]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:65) [34]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:68) [38]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus access on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:74) [41]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78) [42]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78) [42]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78) [42]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78) [42]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78) [42]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78) [42]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78) [42]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:78) [43]  (8.75 ns)

 <State 22>: 1.55ns
The critical path consists of the following:
	'icmp' operation ('tmp', SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:79) [45]  (1.55 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('UART_addr_5') [57]  (0 ns)
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93) [58]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93) [58]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93) [58]  (8.75 ns)

 <State 26>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93) [58]  (8.75 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93) [58]  (8.75 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93) [58]  (8.75 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93) [58]  (8.75 ns)

 <State 30>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:93) [59]  (8.75 ns)

 <State 31>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [64]  (8.75 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [64]  (8.75 ns)

 <State 33>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [64]  (8.75 ns)

 <State 34>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [64]  (8.75 ns)

 <State 35>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [64]  (8.75 ns)

 <State 36>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [64]  (8.75 ns)

 <State 37>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [65]  (8.75 ns)

 <State 38>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [68]  (8.75 ns)

 <State 39>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [69]  (8.75 ns)

 <State 40>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [69]  (8.75 ns)

 <State 41>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [69]  (8.75 ns)

 <State 42>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [69]  (8.75 ns)

 <State 43>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:96) [69]  (8.75 ns)

 <State 44>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106) [81]  (8.75 ns)

 <State 45>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106) [81]  (8.75 ns)

 <State 46>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106) [81]  (8.75 ns)

 <State 47>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106) [81]  (8.75 ns)

 <State 48>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106) [81]  (8.75 ns)

 <State 49>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106) [81]  (8.75 ns)

 <State 50>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106) [81]  (8.75 ns)

 <State 51>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:106) [82]  (8.75 ns)

 <State 52>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [86]  (8.75 ns)

 <State 53>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [86]  (8.75 ns)

 <State 54>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [86]  (8.75 ns)

 <State 55>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [86]  (8.75 ns)

 <State 56>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [86]  (8.75 ns)

 <State 57>: 8.75ns
The critical path consists of the following:
	bus request on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [86]  (8.75 ns)

 <State 58>: 8.75ns
The critical path consists of the following:
	bus read on port 'UART' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [87]  (8.75 ns)

 <State 59>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [92]  (8.75 ns)

 <State 60>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [93]  (8.75 ns)

 <State 61>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [93]  (8.75 ns)

 <State 62>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [93]  (8.75 ns)

 <State 63>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [93]  (8.75 ns)

 <State 64>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (SBUS_AXI_UART_Driver/AXI_UART_Driver.cpp:109) [93]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
