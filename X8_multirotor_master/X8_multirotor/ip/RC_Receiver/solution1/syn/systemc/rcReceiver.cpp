// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "rcReceiver.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic rcReceiver::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic rcReceiver::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state1 = "1";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state2 = "10";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state3 = "100";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state4 = "1000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state5 = "10000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state6 = "100000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state7 = "1000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state8 = "10000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state9 = "100000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state10 = "1000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state11 = "10000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state12 = "100000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state13 = "1000000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state14 = "10000000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state15 = "100000000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state16 = "1000000000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state17 = "10000000000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state18 = "100000000000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state19 = "1000000000000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state20 = "10000000000000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state21 = "100000000000000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state22 = "1000000000000000000000";
const sc_lv<23> rcReceiver::ap_ST_iter0_fsm_state23 = "10000000000000000000000";
const sc_lv<3> rcReceiver::ap_ST_iter1_fsm_state24 = "10";
const sc_lv<3> rcReceiver::ap_ST_iter1_fsm_state25 = "100";
const sc_lv<3> rcReceiver::ap_ST_iter1_fsm_state0 = "1";
const sc_lv<32> rcReceiver::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool rcReceiver::ap_const_boolean_1 = true;
const sc_lv<32> rcReceiver::ap_const_lv32_16 = "10110";
const sc_lv<32> rcReceiver::ap_const_lv32_1 = "1";
const sc_lv<32> rcReceiver::ap_const_lv32_2 = "10";
const sc_lv<32> rcReceiver::ap_const_lv32_D = "1101";
const sc_lv<32> rcReceiver::ap_const_lv32_E = "1110";
const sc_lv<32> rcReceiver::ap_const_lv32_F = "1111";
const sc_lv<32> rcReceiver::ap_const_lv32_10 = "10000";
const sc_lv<32> rcReceiver::ap_const_lv32_11 = "10001";
const sc_lv<32> rcReceiver::ap_const_lv32_12 = "10010";
const sc_lv<32> rcReceiver::ap_const_lv32_13 = "10011";
const int rcReceiver::C_S_AXI_DATA_WIDTH = "100000";
const int rcReceiver::C_M_AXI_OUT_R_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int rcReceiver::C_M_AXI_OUT_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int rcReceiver::C_M_AXI_OUT_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int rcReceiver::C_M_AXI_OUT_R_CACHE_VALUE = "11";
const int rcReceiver::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> rcReceiver::ap_const_lv32_3 = "11";
const sc_lv<32> rcReceiver::ap_const_lv32_4 = "100";
const sc_lv<32> rcReceiver::ap_const_lv32_5 = "101";
const sc_lv<32> rcReceiver::ap_const_lv32_6 = "110";
const sc_lv<32> rcReceiver::ap_const_lv32_7 = "111";
const sc_lv<32> rcReceiver::ap_const_lv32_8 = "1000";
const sc_lv<32> rcReceiver::ap_const_lv32_9 = "1001";
const sc_lv<32> rcReceiver::ap_const_lv32_A = "1010";
const sc_lv<32> rcReceiver::ap_const_lv32_B = "1011";
const sc_lv<1> rcReceiver::ap_const_lv1_1 = "1";
const sc_lv<32> rcReceiver::ap_const_lv32_C = "1100";
const sc_lv<32> rcReceiver::ap_const_lv32_14 = "10100";
const sc_lv<32> rcReceiver::ap_const_lv32_15 = "10101";
const sc_lv<1> rcReceiver::ap_const_lv1_0 = "0";
const sc_lv<15> rcReceiver::ap_const_lv15_0 = "000000000000000";
const sc_lv<15> rcReceiver::ap_const_lv15_6000 = "110000000000000";
const sc_lv<64> rcReceiver::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> rcReceiver::ap_const_lv64_1 = "1";
const sc_lv<64> rcReceiver::ap_const_lv64_2 = "10";
const sc_lv<64> rcReceiver::ap_const_lv64_3 = "11";
const sc_lv<64> rcReceiver::ap_const_lv64_4 = "100";
const sc_lv<64> rcReceiver::ap_const_lv64_5 = "101";
const sc_lv<64> rcReceiver::ap_const_lv64_6 = "110";
const sc_lv<64> rcReceiver::ap_const_lv64_7 = "111";
const sc_lv<64> rcReceiver::ap_const_lv64_8 = "1000";
const sc_lv<64> rcReceiver::ap_const_lv64_9 = "1001";
const sc_lv<64> rcReceiver::ap_const_lv64_18 = "11000";
const sc_lv<64> rcReceiver::ap_const_lv64_17 = "10111";
const sc_lv<64> rcReceiver::ap_const_lv64_A = "1010";
const sc_lv<64> rcReceiver::ap_const_lv64_B = "1011";
const sc_lv<3> rcReceiver::ap_const_lv3_0 = "000";
const sc_lv<2> rcReceiver::ap_const_lv2_0 = "00";
const sc_lv<4> rcReceiver::ap_const_lv4_0 = "0000";
const sc_lv<2> rcReceiver::ap_const_lv2_3 = "11";
const sc_lv<8> rcReceiver::ap_const_lv8_F = "1111";
const sc_lv<8> rcReceiver::ap_const_lv8_0 = "00000000";
const sc_lv<11> rcReceiver::ap_const_lv11_C8 = "11001000";
const sc_lv<11> rcReceiver::ap_const_lv11_708 = "11100001000";
const sc_lv<13> rcReceiver::ap_const_lv13_0 = "0000000000000";
const sc_lv<4> rcReceiver::ap_const_lv4_1 = "1";
const sc_lv<15> rcReceiver::ap_const_lv15_1800 = "1100000000000";
const sc_lv<2> rcReceiver::ap_const_lv2_1 = "1";
const sc_lv<2> rcReceiver::ap_const_lv2_2 = "10";

rcReceiver::rcReceiver(sc_module_name name) : sc_module(name), mVcdFile(0) {
    rcReceiver_CTRL_s_axi_U = new rcReceiver_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>("rcReceiver_CTRL_s_axi_U");
    rcReceiver_CTRL_s_axi_U->AWVALID(s_axi_CTRL_AWVALID);
    rcReceiver_CTRL_s_axi_U->AWREADY(s_axi_CTRL_AWREADY);
    rcReceiver_CTRL_s_axi_U->AWADDR(s_axi_CTRL_AWADDR);
    rcReceiver_CTRL_s_axi_U->WVALID(s_axi_CTRL_WVALID);
    rcReceiver_CTRL_s_axi_U->WREADY(s_axi_CTRL_WREADY);
    rcReceiver_CTRL_s_axi_U->WDATA(s_axi_CTRL_WDATA);
    rcReceiver_CTRL_s_axi_U->WSTRB(s_axi_CTRL_WSTRB);
    rcReceiver_CTRL_s_axi_U->ARVALID(s_axi_CTRL_ARVALID);
    rcReceiver_CTRL_s_axi_U->ARREADY(s_axi_CTRL_ARREADY);
    rcReceiver_CTRL_s_axi_U->ARADDR(s_axi_CTRL_ARADDR);
    rcReceiver_CTRL_s_axi_U->RVALID(s_axi_CTRL_RVALID);
    rcReceiver_CTRL_s_axi_U->RREADY(s_axi_CTRL_RREADY);
    rcReceiver_CTRL_s_axi_U->RDATA(s_axi_CTRL_RDATA);
    rcReceiver_CTRL_s_axi_U->RRESP(s_axi_CTRL_RRESP);
    rcReceiver_CTRL_s_axi_U->BVALID(s_axi_CTRL_BVALID);
    rcReceiver_CTRL_s_axi_U->BREADY(s_axi_CTRL_BREADY);
    rcReceiver_CTRL_s_axi_U->BRESP(s_axi_CTRL_BRESP);
    rcReceiver_CTRL_s_axi_U->ACLK(ap_clk);
    rcReceiver_CTRL_s_axi_U->ARESET(ap_rst_n_inv);
    rcReceiver_CTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    rcReceiver_CTRL_s_axi_U->ap_start(ap_start);
    rcReceiver_CTRL_s_axi_U->interrupt(interrupt);
    rcReceiver_CTRL_s_axi_U->ap_ready(ap_ready);
    rcReceiver_CTRL_s_axi_U->ap_done(ap_done);
    rcReceiver_CTRL_s_axi_U->ap_idle(ap_idle);
    rcReceiver_CTRL_s_axi_U->SBUS_data_address0(SBUS_data_address0);
    rcReceiver_CTRL_s_axi_U->SBUS_data_ce0(SBUS_data_ce0);
    rcReceiver_CTRL_s_axi_U->SBUS_data_q0(SBUS_data_q0);
    rcReceiver_TEST_s_axi_U = new rcReceiver_TEST_s_axi<C_S_AXI_TEST_ADDR_WIDTH,C_S_AXI_TEST_DATA_WIDTH>("rcReceiver_TEST_s_axi_U");
    rcReceiver_TEST_s_axi_U->AWVALID(s_axi_TEST_AWVALID);
    rcReceiver_TEST_s_axi_U->AWREADY(s_axi_TEST_AWREADY);
    rcReceiver_TEST_s_axi_U->AWADDR(s_axi_TEST_AWADDR);
    rcReceiver_TEST_s_axi_U->WVALID(s_axi_TEST_WVALID);
    rcReceiver_TEST_s_axi_U->WREADY(s_axi_TEST_WREADY);
    rcReceiver_TEST_s_axi_U->WDATA(s_axi_TEST_WDATA);
    rcReceiver_TEST_s_axi_U->WSTRB(s_axi_TEST_WSTRB);
    rcReceiver_TEST_s_axi_U->ARVALID(s_axi_TEST_ARVALID);
    rcReceiver_TEST_s_axi_U->ARREADY(s_axi_TEST_ARREADY);
    rcReceiver_TEST_s_axi_U->ARADDR(s_axi_TEST_ARADDR);
    rcReceiver_TEST_s_axi_U->RVALID(s_axi_TEST_RVALID);
    rcReceiver_TEST_s_axi_U->RREADY(s_axi_TEST_RREADY);
    rcReceiver_TEST_s_axi_U->RDATA(s_axi_TEST_RDATA);
    rcReceiver_TEST_s_axi_U->RRESP(s_axi_TEST_RRESP);
    rcReceiver_TEST_s_axi_U->BVALID(s_axi_TEST_BVALID);
    rcReceiver_TEST_s_axi_U->BREADY(s_axi_TEST_BREADY);
    rcReceiver_TEST_s_axi_U->BRESP(s_axi_TEST_BRESP);
    rcReceiver_TEST_s_axi_U->ACLK(ap_clk);
    rcReceiver_TEST_s_axi_U->ARESET(ap_rst_n_inv);
    rcReceiver_TEST_s_axi_U->ACLK_EN(ap_var_for_const0);
    rcReceiver_TEST_s_axi_U->test_V_address0(test_V_address0);
    rcReceiver_TEST_s_axi_U->test_V_ce0(test_V_ce0);
    rcReceiver_TEST_s_axi_U->test_V_we0(test_V_we0);
    rcReceiver_TEST_s_axi_U->test_V_d0(test_V_d0);
    rcReceiver_OUT_r_m_axi_U = new rcReceiver_OUT_r_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_OUT_R_ID_WIDTH,C_M_AXI_OUT_R_ADDR_WIDTH,C_M_AXI_OUT_R_DATA_WIDTH,C_M_AXI_OUT_R_AWUSER_WIDTH,C_M_AXI_OUT_R_ARUSER_WIDTH,C_M_AXI_OUT_R_WUSER_WIDTH,C_M_AXI_OUT_R_RUSER_WIDTH,C_M_AXI_OUT_R_BUSER_WIDTH,C_M_AXI_OUT_R_TARGET_ADDR,C_M_AXI_OUT_R_USER_VALUE,C_M_AXI_OUT_R_PROT_VALUE,C_M_AXI_OUT_R_CACHE_VALUE>("rcReceiver_OUT_r_m_axi_U");
    rcReceiver_OUT_r_m_axi_U->AWVALID(m_axi_OUT_r_AWVALID);
    rcReceiver_OUT_r_m_axi_U->AWREADY(m_axi_OUT_r_AWREADY);
    rcReceiver_OUT_r_m_axi_U->AWADDR(m_axi_OUT_r_AWADDR);
    rcReceiver_OUT_r_m_axi_U->AWID(m_axi_OUT_r_AWID);
    rcReceiver_OUT_r_m_axi_U->AWLEN(m_axi_OUT_r_AWLEN);
    rcReceiver_OUT_r_m_axi_U->AWSIZE(m_axi_OUT_r_AWSIZE);
    rcReceiver_OUT_r_m_axi_U->AWBURST(m_axi_OUT_r_AWBURST);
    rcReceiver_OUT_r_m_axi_U->AWLOCK(m_axi_OUT_r_AWLOCK);
    rcReceiver_OUT_r_m_axi_U->AWCACHE(m_axi_OUT_r_AWCACHE);
    rcReceiver_OUT_r_m_axi_U->AWPROT(m_axi_OUT_r_AWPROT);
    rcReceiver_OUT_r_m_axi_U->AWQOS(m_axi_OUT_r_AWQOS);
    rcReceiver_OUT_r_m_axi_U->AWREGION(m_axi_OUT_r_AWREGION);
    rcReceiver_OUT_r_m_axi_U->AWUSER(m_axi_OUT_r_AWUSER);
    rcReceiver_OUT_r_m_axi_U->WVALID(m_axi_OUT_r_WVALID);
    rcReceiver_OUT_r_m_axi_U->WREADY(m_axi_OUT_r_WREADY);
    rcReceiver_OUT_r_m_axi_U->WDATA(m_axi_OUT_r_WDATA);
    rcReceiver_OUT_r_m_axi_U->WSTRB(m_axi_OUT_r_WSTRB);
    rcReceiver_OUT_r_m_axi_U->WLAST(m_axi_OUT_r_WLAST);
    rcReceiver_OUT_r_m_axi_U->WID(m_axi_OUT_r_WID);
    rcReceiver_OUT_r_m_axi_U->WUSER(m_axi_OUT_r_WUSER);
    rcReceiver_OUT_r_m_axi_U->ARVALID(m_axi_OUT_r_ARVALID);
    rcReceiver_OUT_r_m_axi_U->ARREADY(m_axi_OUT_r_ARREADY);
    rcReceiver_OUT_r_m_axi_U->ARADDR(m_axi_OUT_r_ARADDR);
    rcReceiver_OUT_r_m_axi_U->ARID(m_axi_OUT_r_ARID);
    rcReceiver_OUT_r_m_axi_U->ARLEN(m_axi_OUT_r_ARLEN);
    rcReceiver_OUT_r_m_axi_U->ARSIZE(m_axi_OUT_r_ARSIZE);
    rcReceiver_OUT_r_m_axi_U->ARBURST(m_axi_OUT_r_ARBURST);
    rcReceiver_OUT_r_m_axi_U->ARLOCK(m_axi_OUT_r_ARLOCK);
    rcReceiver_OUT_r_m_axi_U->ARCACHE(m_axi_OUT_r_ARCACHE);
    rcReceiver_OUT_r_m_axi_U->ARPROT(m_axi_OUT_r_ARPROT);
    rcReceiver_OUT_r_m_axi_U->ARQOS(m_axi_OUT_r_ARQOS);
    rcReceiver_OUT_r_m_axi_U->ARREGION(m_axi_OUT_r_ARREGION);
    rcReceiver_OUT_r_m_axi_U->ARUSER(m_axi_OUT_r_ARUSER);
    rcReceiver_OUT_r_m_axi_U->RVALID(m_axi_OUT_r_RVALID);
    rcReceiver_OUT_r_m_axi_U->RREADY(m_axi_OUT_r_RREADY);
    rcReceiver_OUT_r_m_axi_U->RDATA(m_axi_OUT_r_RDATA);
    rcReceiver_OUT_r_m_axi_U->RLAST(m_axi_OUT_r_RLAST);
    rcReceiver_OUT_r_m_axi_U->RID(m_axi_OUT_r_RID);
    rcReceiver_OUT_r_m_axi_U->RUSER(m_axi_OUT_r_RUSER);
    rcReceiver_OUT_r_m_axi_U->RRESP(m_axi_OUT_r_RRESP);
    rcReceiver_OUT_r_m_axi_U->BVALID(m_axi_OUT_r_BVALID);
    rcReceiver_OUT_r_m_axi_U->BREADY(m_axi_OUT_r_BREADY);
    rcReceiver_OUT_r_m_axi_U->BRESP(m_axi_OUT_r_BRESP);
    rcReceiver_OUT_r_m_axi_U->BID(m_axi_OUT_r_BID);
    rcReceiver_OUT_r_m_axi_U->BUSER(m_axi_OUT_r_BUSER);
    rcReceiver_OUT_r_m_axi_U->ACLK(ap_clk);
    rcReceiver_OUT_r_m_axi_U->ARESET(ap_rst_n_inv);
    rcReceiver_OUT_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    rcReceiver_OUT_r_m_axi_U->I_ARVALID(ap_var_for_const1);
    rcReceiver_OUT_r_m_axi_U->I_ARREADY(OUT_r_ARREADY);
    rcReceiver_OUT_r_m_axi_U->I_ARADDR(ap_var_for_const2);
    rcReceiver_OUT_r_m_axi_U->I_ARID(ap_var_for_const3);
    rcReceiver_OUT_r_m_axi_U->I_ARLEN(ap_var_for_const2);
    rcReceiver_OUT_r_m_axi_U->I_ARSIZE(ap_var_for_const4);
    rcReceiver_OUT_r_m_axi_U->I_ARLOCK(ap_var_for_const5);
    rcReceiver_OUT_r_m_axi_U->I_ARCACHE(ap_var_for_const6);
    rcReceiver_OUT_r_m_axi_U->I_ARQOS(ap_var_for_const6);
    rcReceiver_OUT_r_m_axi_U->I_ARPROT(ap_var_for_const4);
    rcReceiver_OUT_r_m_axi_U->I_ARUSER(ap_var_for_const3);
    rcReceiver_OUT_r_m_axi_U->I_ARBURST(ap_var_for_const5);
    rcReceiver_OUT_r_m_axi_U->I_ARREGION(ap_var_for_const6);
    rcReceiver_OUT_r_m_axi_U->I_RVALID(OUT_r_RVALID);
    rcReceiver_OUT_r_m_axi_U->I_RREADY(ap_var_for_const1);
    rcReceiver_OUT_r_m_axi_U->I_RDATA(OUT_r_RDATA);
    rcReceiver_OUT_r_m_axi_U->I_RID(OUT_r_RID);
    rcReceiver_OUT_r_m_axi_U->I_RUSER(OUT_r_RUSER);
    rcReceiver_OUT_r_m_axi_U->I_RRESP(OUT_r_RRESP);
    rcReceiver_OUT_r_m_axi_U->I_RLAST(OUT_r_RLAST);
    rcReceiver_OUT_r_m_axi_U->I_AWVALID(OUT_r_AWVALID);
    rcReceiver_OUT_r_m_axi_U->I_AWREADY(OUT_r_AWREADY);
    rcReceiver_OUT_r_m_axi_U->I_AWADDR(ap_var_for_const2);
    rcReceiver_OUT_r_m_axi_U->I_AWID(ap_var_for_const3);
    rcReceiver_OUT_r_m_axi_U->I_AWLEN(ap_var_for_const7);
    rcReceiver_OUT_r_m_axi_U->I_AWSIZE(ap_var_for_const4);
    rcReceiver_OUT_r_m_axi_U->I_AWLOCK(ap_var_for_const5);
    rcReceiver_OUT_r_m_axi_U->I_AWCACHE(ap_var_for_const6);
    rcReceiver_OUT_r_m_axi_U->I_AWQOS(ap_var_for_const6);
    rcReceiver_OUT_r_m_axi_U->I_AWPROT(ap_var_for_const4);
    rcReceiver_OUT_r_m_axi_U->I_AWUSER(ap_var_for_const3);
    rcReceiver_OUT_r_m_axi_U->I_AWBURST(ap_var_for_const5);
    rcReceiver_OUT_r_m_axi_U->I_AWREGION(ap_var_for_const6);
    rcReceiver_OUT_r_m_axi_U->I_WVALID(OUT_r_WVALID);
    rcReceiver_OUT_r_m_axi_U->I_WREADY(OUT_r_WREADY);
    rcReceiver_OUT_r_m_axi_U->I_WDATA(OUT_r_WDATA);
    rcReceiver_OUT_r_m_axi_U->I_WID(ap_var_for_const3);
    rcReceiver_OUT_r_m_axi_U->I_WUSER(ap_var_for_const3);
    rcReceiver_OUT_r_m_axi_U->I_WLAST(ap_var_for_const1);
    rcReceiver_OUT_r_m_axi_U->I_WSTRB(ap_var_for_const8);
    rcReceiver_OUT_r_m_axi_U->I_BVALID(OUT_r_BVALID);
    rcReceiver_OUT_r_m_axi_U->I_BREADY(OUT_r_BREADY);
    rcReceiver_OUT_r_m_axi_U->I_BRESP(OUT_r_BRESP);
    rcReceiver_OUT_r_m_axi_U->I_BID(OUT_r_BID);
    rcReceiver_OUT_r_m_axi_U->I_BUSER(OUT_r_BUSER);
    grp_scaleRange_fu_529 = new scaleRange("grp_scaleRange_fu_529");
    grp_scaleRange_fu_529->ap_clk(ap_clk);
    grp_scaleRange_fu_529->ap_rst(ap_rst_n_inv);
    grp_scaleRange_fu_529->x(grp_scaleRange_fu_529_x);
    grp_scaleRange_fu_529->destFrom_V(grp_scaleRange_fu_529_destFrom_V);
    grp_scaleRange_fu_529->ap_return(grp_scaleRange_fu_529_ap_return);
    grp_scaleRange_fu_529->ap_ce(grp_scaleRange_fu_529_ap_ce);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_OUT_r_AWVALID);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state14 );
    sensitive << ( ap_reg_ioackin_OUT_r_AWREADY );

    SC_METHOD(thread_OUT_r_BREADY);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );

    SC_METHOD(thread_OUT_r_WDATA);
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( ap_CS_iter0_fsm_state19 );
    sensitive << ( ap_CS_iter0_fsm_state20 );
    sensitive << ( p_Val2_4_fu_923_p1 );
    sensitive << ( p_Val2_5_fu_974_p1 );
    sensitive << ( p_Val2_6_fu_1025_p1 );
    sensitive << ( p_Val2_7_fu_1076_p1 );
    sensitive << ( p_Val2_2_cast_fu_1107_p1 );
    sensitive << ( p_Val2_3_cast_fu_1161_p1 );
    sensitive << ( ap_condition_1163 );

    SC_METHOD(thread_OUT_r_WVALID);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( ap_CS_iter0_fsm_state19 );
    sensitive << ( ap_CS_iter0_fsm_state20 );
    sensitive << ( ap_reg_ioackin_OUT_r_WREADY );

    SC_METHOD(thread_OUT_r_blk_n_AW);
    sensitive << ( m_axi_OUT_r_AWREADY );
    sensitive << ( ap_CS_iter0_fsm_state14 );

    SC_METHOD(thread_OUT_r_blk_n_B);
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( m_axi_OUT_r_BVALID );

    SC_METHOD(thread_OUT_r_blk_n_W);
    sensitive << ( m_axi_OUT_r_WREADY );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( ap_CS_iter0_fsm_state19 );
    sensitive << ( ap_CS_iter0_fsm_state20 );

    SC_METHOD(thread_SBUS_data_address0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter0_fsm_state2 );
    sensitive << ( ap_CS_iter0_fsm_state3 );
    sensitive << ( ap_CS_iter0_fsm_state4 );
    sensitive << ( ap_CS_iter0_fsm_state5 );
    sensitive << ( ap_CS_iter0_fsm_state6 );
    sensitive << ( ap_CS_iter0_fsm_state7 );
    sensitive << ( ap_CS_iter0_fsm_state8 );
    sensitive << ( ap_CS_iter0_fsm_state9 );
    sensitive << ( ap_CS_iter0_fsm_state10 );
    sensitive << ( ap_CS_iter0_fsm_state11 );
    sensitive << ( ap_CS_iter0_fsm_state12 );

    SC_METHOD(thread_SBUS_data_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state2 );
    sensitive << ( ap_CS_iter0_fsm_state3 );
    sensitive << ( ap_CS_iter0_fsm_state4 );
    sensitive << ( ap_CS_iter0_fsm_state5 );
    sensitive << ( ap_CS_iter0_fsm_state6 );
    sensitive << ( ap_CS_iter0_fsm_state7 );
    sensitive << ( ap_CS_iter0_fsm_state8 );
    sensitive << ( ap_CS_iter0_fsm_state9 );
    sensitive << ( ap_CS_iter0_fsm_state10 );
    sensitive << ( ap_CS_iter0_fsm_state11 );
    sensitive << ( ap_CS_iter0_fsm_state12 );

    SC_METHOD(thread_ap_CS_iter0_fsm_state1);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state10);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state11);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state12);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state13);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state14);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state15);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state16);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state17);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state18);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state19);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state2);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state20);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state21);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state22);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state23);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state3);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state4);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state5);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state6);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state7);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state8);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter0_fsm_state9);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter1_fsm_state0);
    sensitive << ( ap_CS_iter1_fsm );

    SC_METHOD(thread_ap_CS_iter1_fsm_state24);
    sensitive << ( ap_CS_iter1_fsm );

    SC_METHOD(thread_ap_CS_iter1_fsm_state25);
    sensitive << ( ap_CS_iter1_fsm );

    SC_METHOD(thread_ap_block_state10_pp0_stage9_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage10_iter0);

    SC_METHOD(thread_ap_block_state12_pp0_stage11_iter0);

    SC_METHOD(thread_ap_block_state13_pp0_stage12_iter0);

    SC_METHOD(thread_ap_block_state13_pp0_stage12_iter0_ignore_call11);

    SC_METHOD(thread_ap_block_state14_pp0_stage13_iter0);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );

    SC_METHOD(thread_ap_block_state14_pp0_stage13_iter0_ignore_call11);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );

    SC_METHOD(thread_ap_block_state15_pp0_stage14_iter0);

    SC_METHOD(thread_ap_block_state15_pp0_stage14_iter0_ignore_call20);

    SC_METHOD(thread_ap_block_state16_pp0_stage15_iter0);

    SC_METHOD(thread_ap_block_state16_pp0_stage15_iter0_ignore_call28);

    SC_METHOD(thread_ap_block_state17_pp0_stage16_iter0);

    SC_METHOD(thread_ap_block_state17_pp0_stage16_iter0_ignore_call36);

    SC_METHOD(thread_ap_block_state18_pp0_stage17_iter0);

    SC_METHOD(thread_ap_block_state18_pp0_stage17_iter0_ignore_call44);

    SC_METHOD(thread_ap_block_state19_pp0_stage18_iter0);

    SC_METHOD(thread_ap_block_state19_pp0_stage18_iter0_ignore_call50);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state20_pp0_stage19_iter0);

    SC_METHOD(thread_ap_block_state21_pp0_stage20_iter0);

    SC_METHOD(thread_ap_block_state22_pp0_stage21_iter0);

    SC_METHOD(thread_ap_block_state23_pp0_stage22_iter0);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter1_ignore_call11);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter1_ignore_call20);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter1_ignore_call28);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter1_ignore_call36);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter1_ignore_call44);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter1_ignore_call50);

    SC_METHOD(thread_ap_block_state25_pp0_stage1_iter1);
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_ap_block_state25_pp0_stage1_iter1_ignore_call11);
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_ap_block_state25_pp0_stage1_iter1_ignore_call20);
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_ap_block_state25_pp0_stage1_iter1_ignore_call28);
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_ap_block_state25_pp0_stage1_iter1_ignore_call36);
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_ap_block_state25_pp0_stage1_iter1_ignore_call44);
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_ap_block_state25_pp0_stage1_iter1_ignore_call50);
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_ap_block_state2_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage7_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage8_iter0);

    SC_METHOD(thread_ap_condition_1163);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_reg_ioackin_OUT_r_WREADY );

    SC_METHOD(thread_ap_condition_1168);
    sensitive << ( OUT_r_AWREADY );
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );

    SC_METHOD(thread_ap_condition_460);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state12 );

    SC_METHOD(thread_ap_condition_522);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_sig_ioackin_OUT_r_AWREADY );

    SC_METHOD(thread_ap_done);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm_state0 );

    SC_METHOD(thread_ap_phi_mux_p_Val2_s_phi_fu_474_p4);
    sensitive << ( channels_0 );
    sensitive << ( ap_CS_iter0_fsm_state12 );
    sensitive << ( or_cond_fu_574_p2 );
    sensitive << ( tmp_2_fu_582_p3 );
    sensitive << ( ap_phi_reg_pp0_iter0_p_Val2_s_reg_471 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_p_Val2_s_reg_471);

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_iter0_fsm_state23 );
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_OUT_r_AWREADY);
    sensitive << ( OUT_r_AWREADY );
    sensitive << ( ap_reg_ioackin_OUT_r_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_OUT_r_WREADY);
    sensitive << ( OUT_r_WREADY );
    sensitive << ( ap_reg_ioackin_OUT_r_WREADY );

    SC_METHOD(thread_grp_scaleRange_fu_529_ap_ce);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state14 );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( ap_CS_iter0_fsm_state19 );
    sensitive << ( ap_CS_iter0_fsm_state13 );
    sensitive << ( ap_sig_ioackin_OUT_r_AWREADY );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );

    SC_METHOD(thread_grp_scaleRange_fu_529_destFrom_V);
    sensitive << ( ap_CS_iter0_fsm_state14 );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( ap_CS_iter0_fsm_state13 );

    SC_METHOD(thread_grp_scaleRange_fu_529_x);
    sensitive << ( ap_CS_iter0_fsm_state14 );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( tmp_31_reg_1388 );
    sensitive << ( ap_CS_iter0_fsm_state13 );
    sensitive << ( tmp_152_1_reg_1402 );
    sensitive << ( tmp_152_2_reg_1423 );
    sensitive << ( tmp_152_3_reg_1444 );
    sensitive << ( tmp_148_4_reg_1465 );
    sensitive << ( tmp_150_5_reg_1486 );

    SC_METHOD(thread_icmp1_fu_1122_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state19 );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );
    sensitive << ( tmp_53_fu_1112_p4 );

    SC_METHOD(thread_icmp_fu_1090_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );
    sensitive << ( tmp_52_fu_1080_p4 );

    SC_METHOD(thread_or_cond_fu_574_p2);
    sensitive << ( tmp_reg_1224 );
    sensitive << ( tmp_9_fu_568_p2 );

    SC_METHOD(thread_p_Val2_2_cast_fu_1107_p1);
    sensitive << ( p_Val2_2_fu_1100_p3 );

    SC_METHOD(thread_p_Val2_2_fu_1100_p3);
    sensitive << ( icmp_reg_1501 );

    SC_METHOD(thread_p_Val2_3_cast_fu_1161_p1);
    sensitive << ( p_Val2_3_fu_1154_p3 );

    SC_METHOD(thread_p_Val2_3_fu_1154_p3);
    sensitive << ( tmp_37_reg_1521 );

    SC_METHOD(thread_p_Val2_4_fu_923_p1);
    sensitive << ( p_Val2_8_reg_1417 );

    SC_METHOD(thread_p_Val2_5_fu_974_p1);
    sensitive << ( p_Val2_9_reg_1438 );

    SC_METHOD(thread_p_Val2_6_fu_1025_p1);
    sensitive << ( p_Val2_s_10_reg_1459 );

    SC_METHOD(thread_p_Val2_7_fu_1076_p1);
    sensitive << ( p_Val2_1_reg_1480 );

    SC_METHOD(thread_p_channels_load_1_4_c_fu_990_p3);
    sensitive << ( tmp_138_4_fu_978_p2 );

    SC_METHOD(thread_p_channels_load_2_5_c_fu_1041_p3);
    sensitive << ( tmp_141_5_fu_1029_p2 );

    SC_METHOD(thread_p_channels_load_3_1_c_fu_841_p3);
    sensitive << ( tmp_143_1_fu_829_p2 );

    SC_METHOD(thread_p_channels_load_3_2_c_fu_888_p3);
    sensitive << ( tmp_143_2_fu_876_p2 );

    SC_METHOD(thread_p_channels_load_3_3_c_fu_939_p3);
    sensitive << ( tmp_143_3_fu_927_p2 );

    SC_METHOD(thread_p_channels_load_cast_fu_786_p3);
    sensitive << ( tmp_28_fu_774_p2 );

    SC_METHOD(thread_test_V_address0);
    sensitive << ( ap_CS_iter0_fsm_state23 );
    sensitive << ( ap_CS_iter0_fsm_state14 );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( ap_CS_iter0_fsm_state19 );
    sensitive << ( ap_CS_iter0_fsm_state20 );
    sensitive << ( ap_CS_iter0_fsm_state12 );
    sensitive << ( ap_CS_iter0_fsm_state13 );
    sensitive << ( ap_CS_iter0_fsm_state21 );
    sensitive << ( ap_CS_iter0_fsm_state22 );

    SC_METHOD(thread_test_V_ce0);
    sensitive << ( ap_CS_iter0_fsm_state23 );
    sensitive << ( ap_CS_iter1_fsm_state24 );
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state14 );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( ap_CS_iter0_fsm_state19 );
    sensitive << ( ap_CS_iter0_fsm_state20 );
    sensitive << ( ap_CS_iter0_fsm_state12 );
    sensitive << ( ap_CS_iter0_fsm_state13 );
    sensitive << ( ap_sig_ioackin_OUT_r_AWREADY );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );
    sensitive << ( ap_CS_iter0_fsm_state21 );
    sensitive << ( ap_CS_iter0_fsm_state22 );

    SC_METHOD(thread_test_V_d0);
    sensitive << ( ap_CS_iter0_fsm_state23 );
    sensitive << ( ap_CS_iter0_fsm_state14 );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( ap_CS_iter0_fsm_state19 );
    sensitive << ( ap_CS_iter0_fsm_state20 );
    sensitive << ( ap_CS_iter0_fsm_state12 );
    sensitive << ( tmp_46_cast_fu_816_p1 );
    sensitive << ( ap_CS_iter0_fsm_state13 );
    sensitive << ( tmp_48_cast_fu_871_p1 );
    sensitive << ( tmp_50_cast_fu_918_p1 );
    sensitive << ( tmp_52_cast_fu_969_p1 );
    sensitive << ( tmp_54_cast_fu_1020_p1 );
    sensitive << ( tmp_56_cast_fu_1071_p1 );
    sensitive << ( tmp_45_fu_1096_p1 );
    sensitive << ( tmp_46_fu_1150_p1 );
    sensitive << ( tmp_47_fu_1166_p1 );
    sensitive << ( tmp_48_fu_1170_p1 );
    sensitive << ( ap_CS_iter0_fsm_state21 );
    sensitive << ( tmp_49_fu_1174_p1 );
    sensitive << ( ap_CS_iter0_fsm_state22 );
    sensitive << ( tmp_50_fu_1178_p1 );

    SC_METHOD(thread_test_V_we0);
    sensitive << ( ap_CS_iter0_fsm_state23 );
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state14 );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( ap_CS_iter0_fsm_state19 );
    sensitive << ( ap_CS_iter0_fsm_state20 );
    sensitive << ( ap_CS_iter0_fsm_state12 );
    sensitive << ( ap_CS_iter0_fsm_state13 );
    sensitive << ( ap_sig_ioackin_OUT_r_AWREADY );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );
    sensitive << ( ap_CS_iter0_fsm_state21 );
    sensitive << ( ap_CS_iter0_fsm_state22 );

    SC_METHOD(thread_tmp_10_fu_605_p1);
    sensitive << ( SBUS_data_load_3_reg_1250 );

    SC_METHOD(thread_tmp_11_fu_653_p2);
    sensitive << ( tmp_1_fu_645_p3 );
    sensitive << ( tmp_5_fu_635_p3 );

    SC_METHOD(thread_tmp_12_fu_659_p3);
    sensitive << ( tmp_15_fu_642_p1 );
    sensitive << ( tmp_11_fu_653_p2 );

    SC_METHOD(thread_tmp_138_4_fu_978_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( p_Val2_13_reg_509 );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );

    SC_METHOD(thread_tmp_13_fu_673_p4);
    sensitive << ( SBUS_data_load_5_reg_1271 );

    SC_METHOD(thread_tmp_140_4_fu_984_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( p_Val2_13_reg_509 );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );

    SC_METHOD(thread_tmp_141_5_fu_1029_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( p_Val2_14_reg_519 );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );

    SC_METHOD(thread_tmp_143_1_fu_829_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state13 );
    sensitive << ( ap_phi_reg_pp0_iter0_p_Val2_10_reg_480 );

    SC_METHOD(thread_tmp_143_2_fu_876_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state14 );
    sensitive << ( p_Val2_11_reg_489 );
    sensitive << ( ap_sig_ioackin_OUT_r_AWREADY );

    SC_METHOD(thread_tmp_143_3_fu_927_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( p_Val2_12_reg_499 );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );

    SC_METHOD(thread_tmp_146_5_fu_1035_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( p_Val2_14_reg_519 );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );

    SC_METHOD(thread_tmp_147_1_fu_835_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state13 );
    sensitive << ( ap_phi_reg_pp0_iter0_p_Val2_10_reg_480 );

    SC_METHOD(thread_tmp_147_2_fu_882_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state14 );
    sensitive << ( p_Val2_11_reg_489 );
    sensitive << ( ap_sig_ioackin_OUT_r_AWREADY );

    SC_METHOD(thread_tmp_147_3_fu_933_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( p_Val2_12_reg_499 );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );

    SC_METHOD(thread_tmp_148_4_fu_1004_p3);
    sensitive << ( p_Val2_13_reg_509 );
    sensitive << ( tmp_35_fu_998_p2 );
    sensitive << ( p_channels_load_1_4_c_fu_990_p3 );

    SC_METHOD(thread_tmp_14_fu_685_p3);
    sensitive << ( tmp_18_fu_682_p1 );
    sensitive << ( tmp_13_fu_673_p4 );

    SC_METHOD(thread_tmp_150_5_fu_1055_p3);
    sensitive << ( p_Val2_14_reg_519 );
    sensitive << ( tmp_36_fu_1049_p2 );
    sensitive << ( p_channels_load_2_5_c_fu_1041_p3 );

    SC_METHOD(thread_tmp_152_1_fu_855_p3);
    sensitive << ( ap_phi_reg_pp0_iter0_p_Val2_10_reg_480 );
    sensitive << ( tmp_32_fu_849_p2 );
    sensitive << ( p_channels_load_3_1_c_fu_841_p3 );

    SC_METHOD(thread_tmp_152_2_fu_902_p3);
    sensitive << ( p_Val2_11_reg_489 );
    sensitive << ( tmp_33_fu_896_p2 );
    sensitive << ( p_channels_load_3_2_c_fu_888_p3 );

    SC_METHOD(thread_tmp_152_3_fu_953_p3);
    sensitive << ( p_Val2_12_reg_499 );
    sensitive << ( tmp_34_fu_947_p2 );
    sensitive << ( p_channels_load_3_3_c_fu_939_p3 );

    SC_METHOD(thread_tmp_15_fu_642_p1);
    sensitive << ( SBUS_data_load_5_reg_1271 );

    SC_METHOD(thread_tmp_16_fu_699_p4);
    sensitive << ( SBUS_data_load_6_reg_1282 );

    SC_METHOD(thread_tmp_17_fu_711_p3);
    sensitive << ( tmp_20_fu_708_p1 );
    sensitive << ( tmp_16_fu_699_p4 );

    SC_METHOD(thread_tmp_18_fu_682_p1);
    sensitive << ( SBUS_data_load_6_reg_1282 );

    SC_METHOD(thread_tmp_19_fu_732_p1);
    sensitive << ( tmp_23_fu_725_p3 );

    SC_METHOD(thread_tmp_1_fu_645_p3);
    sensitive << ( tmp_4_fu_631_p1 );

    SC_METHOD(thread_tmp_1_i_fu_1128_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state19 );
    sensitive << ( grp_scaleRange_fu_529_ap_return );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );

    SC_METHOD(thread_tmp_20_fu_708_p1);
    sensitive << ( SBUS_data_load_7_reg_1293 );

    SC_METHOD(thread_tmp_21_fu_736_p3);
    sensitive << ( SBUS_data_load_8_reg_1304 );

    SC_METHOD(thread_tmp_22_fu_746_p3);
    sensitive << ( tmp_19_fu_732_p1 );

    SC_METHOD(thread_tmp_23_fu_725_p3);
    sensitive << ( SBUS_data_load_7_reg_1293 );

    SC_METHOD(thread_tmp_24_fu_754_p2);
    sensitive << ( tmp_22_fu_746_p3 );
    sensitive << ( tmp_21_fu_736_p3 );

    SC_METHOD(thread_tmp_25_fu_760_p3);
    sensitive << ( tmp_27_fu_743_p1 );
    sensitive << ( tmp_24_fu_754_p2 );

    SC_METHOD(thread_tmp_26_fu_1202_p2);
    sensitive << ( lost );

    SC_METHOD(thread_tmp_27_fu_743_p1);
    sensitive << ( SBUS_data_load_9_reg_1314 );

    SC_METHOD(thread_tmp_28_fu_774_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state12 );
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_474_p4 );

    SC_METHOD(thread_tmp_29_fu_780_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state12 );
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_474_p4 );

    SC_METHOD(thread_tmp_2_fu_582_p3);
    sensitive << ( SBUS_data_load_1_reg_1229 );
    sensitive << ( tmp_3_fu_579_p1 );

    SC_METHOD(thread_tmp_30_fu_794_p2);
    sensitive << ( tmp_28_fu_774_p2 );
    sensitive << ( tmp_29_fu_780_p2 );

    SC_METHOD(thread_tmp_31_fu_800_p3);
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_474_p4 );
    sensitive << ( tmp_30_fu_794_p2 );
    sensitive << ( p_channels_load_cast_fu_786_p3 );

    SC_METHOD(thread_tmp_32_fu_849_p2);
    sensitive << ( tmp_143_1_fu_829_p2 );
    sensitive << ( tmp_147_1_fu_835_p2 );

    SC_METHOD(thread_tmp_33_fu_896_p2);
    sensitive << ( tmp_143_2_fu_876_p2 );
    sensitive << ( tmp_147_2_fu_882_p2 );

    SC_METHOD(thread_tmp_34_fu_947_p2);
    sensitive << ( tmp_143_3_fu_927_p2 );
    sensitive << ( tmp_147_3_fu_933_p2 );

    SC_METHOD(thread_tmp_35_fu_998_p2);
    sensitive << ( tmp_138_4_fu_978_p2 );
    sensitive << ( tmp_140_4_fu_984_p2 );

    SC_METHOD(thread_tmp_36_fu_1049_p2);
    sensitive << ( tmp_141_5_fu_1029_p2 );
    sensitive << ( tmp_146_5_fu_1035_p2 );

    SC_METHOD(thread_tmp_37_fu_1142_p3);
    sensitive << ( tmp_1_i_fu_1128_p2 );
    sensitive << ( tmp_38_cast_fu_1134_p3 );

    SC_METHOD(thread_tmp_38_cast_fu_1134_p3);
    sensitive << ( icmp1_fu_1122_p2 );

    SC_METHOD(thread_tmp_39_fu_808_p3);
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_474_p4 );

    SC_METHOD(thread_tmp_3_fu_579_p1);
    sensitive << ( SBUS_data_load_2_reg_1239 );

    SC_METHOD(thread_tmp_40_fu_863_p3);
    sensitive << ( ap_phi_reg_pp0_iter0_p_Val2_10_reg_480 );

    SC_METHOD(thread_tmp_41_fu_910_p3);
    sensitive << ( p_Val2_11_reg_489 );

    SC_METHOD(thread_tmp_42_fu_961_p3);
    sensitive << ( p_Val2_12_reg_499 );

    SC_METHOD(thread_tmp_43_fu_1012_p3);
    sensitive << ( p_Val2_13_reg_509 );

    SC_METHOD(thread_tmp_44_fu_1063_p3);
    sensitive << ( p_Val2_14_reg_519 );

    SC_METHOD(thread_tmp_45_fu_1096_p1);
    sensitive << ( p_Val2_8_reg_1417 );

    SC_METHOD(thread_tmp_46_cast_fu_816_p1);
    sensitive << ( tmp_39_fu_808_p3 );

    SC_METHOD(thread_tmp_46_fu_1150_p1);
    sensitive << ( p_Val2_9_reg_1438 );

    SC_METHOD(thread_tmp_47_fu_1166_p1);
    sensitive << ( p_Val2_s_10_reg_1459 );

    SC_METHOD(thread_tmp_48_cast_fu_871_p1);
    sensitive << ( tmp_40_fu_863_p3 );

    SC_METHOD(thread_tmp_48_fu_1170_p1);
    sensitive << ( p_Val2_1_reg_1480 );

    SC_METHOD(thread_tmp_49_fu_1174_p1);
    sensitive << ( p_Val2_2_reg_1516 );

    SC_METHOD(thread_tmp_4_fu_631_p1);
    sensitive << ( tmp_8_fu_622_p4 );

    SC_METHOD(thread_tmp_50_cast_fu_918_p1);
    sensitive << ( tmp_41_fu_910_p3 );

    SC_METHOD(thread_tmp_50_fu_1178_p1);
    sensitive << ( p_Val2_3_reg_1536 );

    SC_METHOD(thread_tmp_52_cast_fu_969_p1);
    sensitive << ( tmp_42_fu_961_p3 );

    SC_METHOD(thread_tmp_52_fu_1080_p4);
    sensitive << ( grp_scaleRange_fu_529_ap_return );

    SC_METHOD(thread_tmp_53_fu_1112_p4);
    sensitive << ( grp_scaleRange_fu_529_ap_return );

    SC_METHOD(thread_tmp_54_cast_fu_1020_p1);
    sensitive << ( tmp_43_fu_1012_p3 );

    SC_METHOD(thread_tmp_56_cast_fu_1071_p1);
    sensitive << ( tmp_44_fu_1063_p3 );

    SC_METHOD(thread_tmp_5_fu_635_p3);
    sensitive << ( SBUS_data_load_4_reg_1261 );

    SC_METHOD(thread_tmp_6_fu_608_p3);
    sensitive << ( tmp_10_fu_605_p1 );
    sensitive << ( tmp_7_fu_596_p4 );

    SC_METHOD(thread_tmp_7_fu_596_p4);
    sensitive << ( SBUS_data_load_2_reg_1239 );

    SC_METHOD(thread_tmp_8_fu_622_p4);
    sensitive << ( SBUS_data_load_3_reg_1250 );

    SC_METHOD(thread_tmp_9_fu_568_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( SBUS_data_q0 );
    sensitive << ( ap_CS_iter0_fsm_state12 );

    SC_METHOD(thread_tmp_fu_537_p2);
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( SBUS_data_q0 );
    sensitive << ( ap_CS_iter0_fsm_state2 );

    SC_METHOD(thread_tmp_s_fu_1186_p2);
    sensitive << ( errors );

    SC_METHOD(thread_ap_NS_iter0_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );
    sensitive << ( ap_CS_iter0_fsm_state14 );
    sensitive << ( ap_CS_iter0_fsm_state15 );
    sensitive << ( ap_CS_iter0_fsm_state16 );
    sensitive << ( ap_CS_iter0_fsm_state17 );
    sensitive << ( ap_CS_iter0_fsm_state18 );
    sensitive << ( ap_CS_iter0_fsm_state19 );
    sensitive << ( ap_CS_iter0_fsm_state20 );
    sensitive << ( ap_CS_iter0_fsm_state2 );
    sensitive << ( ap_CS_iter0_fsm_state3 );
    sensitive << ( ap_CS_iter0_fsm_state4 );
    sensitive << ( ap_CS_iter0_fsm_state5 );
    sensitive << ( ap_CS_iter0_fsm_state6 );
    sensitive << ( ap_CS_iter0_fsm_state7 );
    sensitive << ( ap_CS_iter0_fsm_state8 );
    sensitive << ( ap_CS_iter0_fsm_state9 );
    sensitive << ( ap_CS_iter0_fsm_state10 );
    sensitive << ( ap_CS_iter0_fsm_state11 );
    sensitive << ( ap_CS_iter0_fsm_state12 );
    sensitive << ( ap_CS_iter0_fsm_state13 );
    sensitive << ( ap_sig_ioackin_OUT_r_AWREADY );
    sensitive << ( ap_sig_ioackin_OUT_r_WREADY );
    sensitive << ( ap_CS_iter0_fsm_state21 );
    sensitive << ( ap_CS_iter0_fsm_state22 );

    SC_METHOD(thread_ap_NS_iter1_fsm);
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter0_fsm_state23 );
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_CS_iter1_fsm_state25 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_iter0_fsm = "00000000000000000000001";
    ap_CS_iter1_fsm = "001";
    channels_0 = "00000000000";
    channels_1 = "00000000000";
    channels_2 = "00000000000";
    channels_3 = "00000000000";
    channels_4 = "00000000000";
    channels_5 = "00000000000";
    lost = "00000000000000000000000000000000";
    errors = "00000000000000000000000000000000";
    ap_reg_ioackin_OUT_r_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_OUT_r_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "rcReceiver_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_OUT_r_AWVALID, "(port)m_axi_OUT_r_AWVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_AWREADY, "(port)m_axi_OUT_r_AWREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_AWADDR, "(port)m_axi_OUT_r_AWADDR");
    sc_trace(mVcdFile, m_axi_OUT_r_AWID, "(port)m_axi_OUT_r_AWID");
    sc_trace(mVcdFile, m_axi_OUT_r_AWLEN, "(port)m_axi_OUT_r_AWLEN");
    sc_trace(mVcdFile, m_axi_OUT_r_AWSIZE, "(port)m_axi_OUT_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_OUT_r_AWBURST, "(port)m_axi_OUT_r_AWBURST");
    sc_trace(mVcdFile, m_axi_OUT_r_AWLOCK, "(port)m_axi_OUT_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_OUT_r_AWCACHE, "(port)m_axi_OUT_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_OUT_r_AWPROT, "(port)m_axi_OUT_r_AWPROT");
    sc_trace(mVcdFile, m_axi_OUT_r_AWQOS, "(port)m_axi_OUT_r_AWQOS");
    sc_trace(mVcdFile, m_axi_OUT_r_AWREGION, "(port)m_axi_OUT_r_AWREGION");
    sc_trace(mVcdFile, m_axi_OUT_r_AWUSER, "(port)m_axi_OUT_r_AWUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_WVALID, "(port)m_axi_OUT_r_WVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_WREADY, "(port)m_axi_OUT_r_WREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_WDATA, "(port)m_axi_OUT_r_WDATA");
    sc_trace(mVcdFile, m_axi_OUT_r_WSTRB, "(port)m_axi_OUT_r_WSTRB");
    sc_trace(mVcdFile, m_axi_OUT_r_WLAST, "(port)m_axi_OUT_r_WLAST");
    sc_trace(mVcdFile, m_axi_OUT_r_WID, "(port)m_axi_OUT_r_WID");
    sc_trace(mVcdFile, m_axi_OUT_r_WUSER, "(port)m_axi_OUT_r_WUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_ARVALID, "(port)m_axi_OUT_r_ARVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_ARREADY, "(port)m_axi_OUT_r_ARREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_ARADDR, "(port)m_axi_OUT_r_ARADDR");
    sc_trace(mVcdFile, m_axi_OUT_r_ARID, "(port)m_axi_OUT_r_ARID");
    sc_trace(mVcdFile, m_axi_OUT_r_ARLEN, "(port)m_axi_OUT_r_ARLEN");
    sc_trace(mVcdFile, m_axi_OUT_r_ARSIZE, "(port)m_axi_OUT_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_OUT_r_ARBURST, "(port)m_axi_OUT_r_ARBURST");
    sc_trace(mVcdFile, m_axi_OUT_r_ARLOCK, "(port)m_axi_OUT_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_OUT_r_ARCACHE, "(port)m_axi_OUT_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_OUT_r_ARPROT, "(port)m_axi_OUT_r_ARPROT");
    sc_trace(mVcdFile, m_axi_OUT_r_ARQOS, "(port)m_axi_OUT_r_ARQOS");
    sc_trace(mVcdFile, m_axi_OUT_r_ARREGION, "(port)m_axi_OUT_r_ARREGION");
    sc_trace(mVcdFile, m_axi_OUT_r_ARUSER, "(port)m_axi_OUT_r_ARUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_RVALID, "(port)m_axi_OUT_r_RVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_RREADY, "(port)m_axi_OUT_r_RREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_RDATA, "(port)m_axi_OUT_r_RDATA");
    sc_trace(mVcdFile, m_axi_OUT_r_RLAST, "(port)m_axi_OUT_r_RLAST");
    sc_trace(mVcdFile, m_axi_OUT_r_RID, "(port)m_axi_OUT_r_RID");
    sc_trace(mVcdFile, m_axi_OUT_r_RUSER, "(port)m_axi_OUT_r_RUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_RRESP, "(port)m_axi_OUT_r_RRESP");
    sc_trace(mVcdFile, m_axi_OUT_r_BVALID, "(port)m_axi_OUT_r_BVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_BREADY, "(port)m_axi_OUT_r_BREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_BRESP, "(port)m_axi_OUT_r_BRESP");
    sc_trace(mVcdFile, m_axi_OUT_r_BID, "(port)m_axi_OUT_r_BID");
    sc_trace(mVcdFile, m_axi_OUT_r_BUSER, "(port)m_axi_OUT_r_BUSER");
    sc_trace(mVcdFile, s_axi_CTRL_AWVALID, "(port)s_axi_CTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_AWREADY, "(port)s_axi_CTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_AWADDR, "(port)s_axi_CTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_WVALID, "(port)s_axi_CTRL_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_WREADY, "(port)s_axi_CTRL_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_WDATA, "(port)s_axi_CTRL_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_WSTRB, "(port)s_axi_CTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_ARVALID, "(port)s_axi_CTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_ARREADY, "(port)s_axi_CTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_ARADDR, "(port)s_axi_CTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_RVALID, "(port)s_axi_CTRL_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_RREADY, "(port)s_axi_CTRL_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_RDATA, "(port)s_axi_CTRL_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_RRESP, "(port)s_axi_CTRL_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BVALID, "(port)s_axi_CTRL_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BREADY, "(port)s_axi_CTRL_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BRESP, "(port)s_axi_CTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, s_axi_TEST_AWVALID, "(port)s_axi_TEST_AWVALID");
    sc_trace(mVcdFile, s_axi_TEST_AWREADY, "(port)s_axi_TEST_AWREADY");
    sc_trace(mVcdFile, s_axi_TEST_AWADDR, "(port)s_axi_TEST_AWADDR");
    sc_trace(mVcdFile, s_axi_TEST_WVALID, "(port)s_axi_TEST_WVALID");
    sc_trace(mVcdFile, s_axi_TEST_WREADY, "(port)s_axi_TEST_WREADY");
    sc_trace(mVcdFile, s_axi_TEST_WDATA, "(port)s_axi_TEST_WDATA");
    sc_trace(mVcdFile, s_axi_TEST_WSTRB, "(port)s_axi_TEST_WSTRB");
    sc_trace(mVcdFile, s_axi_TEST_ARVALID, "(port)s_axi_TEST_ARVALID");
    sc_trace(mVcdFile, s_axi_TEST_ARREADY, "(port)s_axi_TEST_ARREADY");
    sc_trace(mVcdFile, s_axi_TEST_ARADDR, "(port)s_axi_TEST_ARADDR");
    sc_trace(mVcdFile, s_axi_TEST_RVALID, "(port)s_axi_TEST_RVALID");
    sc_trace(mVcdFile, s_axi_TEST_RREADY, "(port)s_axi_TEST_RREADY");
    sc_trace(mVcdFile, s_axi_TEST_RDATA, "(port)s_axi_TEST_RDATA");
    sc_trace(mVcdFile, s_axi_TEST_RRESP, "(port)s_axi_TEST_RRESP");
    sc_trace(mVcdFile, s_axi_TEST_BVALID, "(port)s_axi_TEST_BVALID");
    sc_trace(mVcdFile, s_axi_TEST_BREADY, "(port)s_axi_TEST_BREADY");
    sc_trace(mVcdFile, s_axi_TEST_BRESP, "(port)s_axi_TEST_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_iter0_fsm, "ap_CS_iter0_fsm");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state1, "ap_CS_iter0_fsm_state1");
    sc_trace(mVcdFile, ap_CS_iter1_fsm, "ap_CS_iter1_fsm");
    sc_trace(mVcdFile, ap_CS_iter1_fsm_state0, "ap_CS_iter1_fsm_state0");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state23, "ap_CS_iter0_fsm_state23");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage22_iter0, "ap_block_state23_pp0_stage22_iter0");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter1, "ap_block_state24_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_CS_iter1_fsm_state24, "ap_CS_iter1_fsm_state24");
    sc_trace(mVcdFile, OUT_r_AWVALID, "OUT_r_AWVALID");
    sc_trace(mVcdFile, OUT_r_AWREADY, "OUT_r_AWREADY");
    sc_trace(mVcdFile, OUT_r_WVALID, "OUT_r_WVALID");
    sc_trace(mVcdFile, OUT_r_WREADY, "OUT_r_WREADY");
    sc_trace(mVcdFile, OUT_r_WDATA, "OUT_r_WDATA");
    sc_trace(mVcdFile, OUT_r_ARREADY, "OUT_r_ARREADY");
    sc_trace(mVcdFile, OUT_r_RVALID, "OUT_r_RVALID");
    sc_trace(mVcdFile, OUT_r_RDATA, "OUT_r_RDATA");
    sc_trace(mVcdFile, OUT_r_RLAST, "OUT_r_RLAST");
    sc_trace(mVcdFile, OUT_r_RID, "OUT_r_RID");
    sc_trace(mVcdFile, OUT_r_RUSER, "OUT_r_RUSER");
    sc_trace(mVcdFile, OUT_r_RRESP, "OUT_r_RRESP");
    sc_trace(mVcdFile, OUT_r_BVALID, "OUT_r_BVALID");
    sc_trace(mVcdFile, OUT_r_BREADY, "OUT_r_BREADY");
    sc_trace(mVcdFile, OUT_r_BRESP, "OUT_r_BRESP");
    sc_trace(mVcdFile, OUT_r_BID, "OUT_r_BID");
    sc_trace(mVcdFile, OUT_r_BUSER, "OUT_r_BUSER");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage1_iter1, "ap_block_state25_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_CS_iter1_fsm_state25, "ap_CS_iter1_fsm_state25");
    sc_trace(mVcdFile, SBUS_data_address0, "SBUS_data_address0");
    sc_trace(mVcdFile, SBUS_data_ce0, "SBUS_data_ce0");
    sc_trace(mVcdFile, SBUS_data_q0, "SBUS_data_q0");
    sc_trace(mVcdFile, test_V_address0, "test_V_address0");
    sc_trace(mVcdFile, test_V_ce0, "test_V_ce0");
    sc_trace(mVcdFile, test_V_we0, "test_V_we0");
    sc_trace(mVcdFile, test_V_d0, "test_V_d0");
    sc_trace(mVcdFile, channels_0, "channels_0");
    sc_trace(mVcdFile, channels_1, "channels_1");
    sc_trace(mVcdFile, channels_2, "channels_2");
    sc_trace(mVcdFile, channels_3, "channels_3");
    sc_trace(mVcdFile, channels_4, "channels_4");
    sc_trace(mVcdFile, channels_5, "channels_5");
    sc_trace(mVcdFile, lost, "lost");
    sc_trace(mVcdFile, errors, "errors");
    sc_trace(mVcdFile, OUT_r_blk_n_AW, "OUT_r_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state14, "ap_CS_iter0_fsm_state14");
    sc_trace(mVcdFile, OUT_r_blk_n_W, "OUT_r_blk_n_W");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state15, "ap_CS_iter0_fsm_state15");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state16, "ap_CS_iter0_fsm_state16");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state17, "ap_CS_iter0_fsm_state17");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state18, "ap_CS_iter0_fsm_state18");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state19, "ap_CS_iter0_fsm_state19");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state20, "ap_CS_iter0_fsm_state20");
    sc_trace(mVcdFile, OUT_r_blk_n_B, "OUT_r_blk_n_B");
    sc_trace(mVcdFile, p_Val2_11_reg_489, "p_Val2_11_reg_489");
    sc_trace(mVcdFile, p_Val2_12_reg_499, "p_Val2_12_reg_499");
    sc_trace(mVcdFile, p_Val2_13_reg_509, "p_Val2_13_reg_509");
    sc_trace(mVcdFile, p_Val2_14_reg_519, "p_Val2_14_reg_519");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state2, "ap_CS_iter0_fsm_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage1_iter0, "ap_block_state2_pp0_stage1_iter0");
    sc_trace(mVcdFile, tmp_fu_537_p2, "tmp_fu_537_p2");
    sc_trace(mVcdFile, tmp_reg_1224, "tmp_reg_1224");
    sc_trace(mVcdFile, SBUS_data_load_1_reg_1229, "SBUS_data_load_1_reg_1229");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state3, "ap_CS_iter0_fsm_state3");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage2_iter0, "ap_block_state3_pp0_stage2_iter0");
    sc_trace(mVcdFile, SBUS_data_load_2_reg_1239, "SBUS_data_load_2_reg_1239");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state4, "ap_CS_iter0_fsm_state4");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage3_iter0, "ap_block_state4_pp0_stage3_iter0");
    sc_trace(mVcdFile, SBUS_data_load_3_reg_1250, "SBUS_data_load_3_reg_1250");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state5, "ap_CS_iter0_fsm_state5");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage4_iter0, "ap_block_state5_pp0_stage4_iter0");
    sc_trace(mVcdFile, SBUS_data_load_4_reg_1261, "SBUS_data_load_4_reg_1261");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state6, "ap_CS_iter0_fsm_state6");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage5_iter0, "ap_block_state6_pp0_stage5_iter0");
    sc_trace(mVcdFile, SBUS_data_load_5_reg_1271, "SBUS_data_load_5_reg_1271");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state7, "ap_CS_iter0_fsm_state7");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage6_iter0, "ap_block_state7_pp0_stage6_iter0");
    sc_trace(mVcdFile, SBUS_data_load_6_reg_1282, "SBUS_data_load_6_reg_1282");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state8, "ap_CS_iter0_fsm_state8");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage7_iter0, "ap_block_state8_pp0_stage7_iter0");
    sc_trace(mVcdFile, SBUS_data_load_7_reg_1293, "SBUS_data_load_7_reg_1293");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state9, "ap_CS_iter0_fsm_state9");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage8_iter0, "ap_block_state9_pp0_stage8_iter0");
    sc_trace(mVcdFile, SBUS_data_load_8_reg_1304, "SBUS_data_load_8_reg_1304");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state10, "ap_CS_iter0_fsm_state10");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage9_iter0, "ap_block_state10_pp0_stage9_iter0");
    sc_trace(mVcdFile, SBUS_data_load_9_reg_1314, "SBUS_data_load_9_reg_1314");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state11, "ap_CS_iter0_fsm_state11");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage10_iter0, "ap_block_state11_pp0_stage10_iter0");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state12, "ap_CS_iter0_fsm_state12");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage11_iter0, "ap_block_state12_pp0_stage11_iter0");
    sc_trace(mVcdFile, or_cond_fu_574_p2, "or_cond_fu_574_p2");
    sc_trace(mVcdFile, or_cond_reg_1359, "or_cond_reg_1359");
    sc_trace(mVcdFile, or_cond_reg_1359_pp0_iter0_reg, "or_cond_reg_1359_pp0_iter0_reg");
    sc_trace(mVcdFile, tmp_6_fu_608_p3, "tmp_6_fu_608_p3");
    sc_trace(mVcdFile, tmp_12_fu_659_p3, "tmp_12_fu_659_p3");
    sc_trace(mVcdFile, tmp_14_fu_685_p3, "tmp_14_fu_685_p3");
    sc_trace(mVcdFile, tmp_17_fu_711_p3, "tmp_17_fu_711_p3");
    sc_trace(mVcdFile, tmp_25_fu_760_p3, "tmp_25_fu_760_p3");
    sc_trace(mVcdFile, tmp_31_fu_800_p3, "tmp_31_fu_800_p3");
    sc_trace(mVcdFile, tmp_31_reg_1388, "tmp_31_reg_1388");
    sc_trace(mVcdFile, tmp_46_cast_fu_816_p1, "tmp_46_cast_fu_816_p1");
    sc_trace(mVcdFile, tmp_38_reg_1398, "tmp_38_reg_1398");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state13, "ap_CS_iter0_fsm_state13");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage12_iter0, "ap_block_state13_pp0_stage12_iter0");
    sc_trace(mVcdFile, tmp_38_reg_1398_pp0_iter0_reg, "tmp_38_reg_1398_pp0_iter0_reg");
    sc_trace(mVcdFile, tmp_152_1_fu_855_p3, "tmp_152_1_fu_855_p3");
    sc_trace(mVcdFile, tmp_152_1_reg_1402, "tmp_152_1_reg_1402");
    sc_trace(mVcdFile, tmp_48_cast_fu_871_p1, "tmp_48_cast_fu_871_p1");
    sc_trace(mVcdFile, grp_scaleRange_fu_529_ap_return, "grp_scaleRange_fu_529_ap_return");
    sc_trace(mVcdFile, p_Val2_8_reg_1417, "p_Val2_8_reg_1417");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage13_iter0, "ap_block_state14_pp0_stage13_iter0");
    sc_trace(mVcdFile, ap_sig_ioackin_OUT_r_AWREADY, "ap_sig_ioackin_OUT_r_AWREADY");
    sc_trace(mVcdFile, tmp_152_2_fu_902_p3, "tmp_152_2_fu_902_p3");
    sc_trace(mVcdFile, tmp_152_2_reg_1423, "tmp_152_2_reg_1423");
    sc_trace(mVcdFile, tmp_50_cast_fu_918_p1, "tmp_50_cast_fu_918_p1");
    sc_trace(mVcdFile, p_Val2_9_reg_1438, "p_Val2_9_reg_1438");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage14_iter0, "ap_block_state15_pp0_stage14_iter0");
    sc_trace(mVcdFile, ap_sig_ioackin_OUT_r_WREADY, "ap_sig_ioackin_OUT_r_WREADY");
    sc_trace(mVcdFile, tmp_152_3_fu_953_p3, "tmp_152_3_fu_953_p3");
    sc_trace(mVcdFile, tmp_152_3_reg_1444, "tmp_152_3_reg_1444");
    sc_trace(mVcdFile, tmp_52_cast_fu_969_p1, "tmp_52_cast_fu_969_p1");
    sc_trace(mVcdFile, p_Val2_s_10_reg_1459, "p_Val2_s_10_reg_1459");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage15_iter0, "ap_block_state16_pp0_stage15_iter0");
    sc_trace(mVcdFile, tmp_148_4_fu_1004_p3, "tmp_148_4_fu_1004_p3");
    sc_trace(mVcdFile, tmp_148_4_reg_1465, "tmp_148_4_reg_1465");
    sc_trace(mVcdFile, tmp_54_cast_fu_1020_p1, "tmp_54_cast_fu_1020_p1");
    sc_trace(mVcdFile, p_Val2_1_reg_1480, "p_Val2_1_reg_1480");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage16_iter0, "ap_block_state17_pp0_stage16_iter0");
    sc_trace(mVcdFile, tmp_150_5_fu_1055_p3, "tmp_150_5_fu_1055_p3");
    sc_trace(mVcdFile, tmp_150_5_reg_1486, "tmp_150_5_reg_1486");
    sc_trace(mVcdFile, tmp_56_cast_fu_1071_p1, "tmp_56_cast_fu_1071_p1");
    sc_trace(mVcdFile, icmp_fu_1090_p2, "icmp_fu_1090_p2");
    sc_trace(mVcdFile, icmp_reg_1501, "icmp_reg_1501");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage17_iter0, "ap_block_state18_pp0_stage17_iter0");
    sc_trace(mVcdFile, tmp_45_fu_1096_p1, "tmp_45_fu_1096_p1");
    sc_trace(mVcdFile, p_Val2_2_fu_1100_p3, "p_Val2_2_fu_1100_p3");
    sc_trace(mVcdFile, p_Val2_2_reg_1516, "p_Val2_2_reg_1516");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage18_iter0, "ap_block_state19_pp0_stage18_iter0");
    sc_trace(mVcdFile, tmp_37_fu_1142_p3, "tmp_37_fu_1142_p3");
    sc_trace(mVcdFile, tmp_37_reg_1521, "tmp_37_reg_1521");
    sc_trace(mVcdFile, tmp_46_fu_1150_p1, "tmp_46_fu_1150_p1");
    sc_trace(mVcdFile, p_Val2_3_fu_1154_p3, "p_Val2_3_fu_1154_p3");
    sc_trace(mVcdFile, p_Val2_3_reg_1536, "p_Val2_3_reg_1536");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage19_iter0, "ap_block_state20_pp0_stage19_iter0");
    sc_trace(mVcdFile, tmp_47_fu_1166_p1, "tmp_47_fu_1166_p1");
    sc_trace(mVcdFile, tmp_48_fu_1170_p1, "tmp_48_fu_1170_p1");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state21, "ap_CS_iter0_fsm_state21");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage20_iter0, "ap_block_state21_pp0_stage20_iter0");
    sc_trace(mVcdFile, tmp_49_fu_1174_p1, "tmp_49_fu_1174_p1");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state22, "ap_CS_iter0_fsm_state22");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage21_iter0, "ap_block_state22_pp0_stage21_iter0");
    sc_trace(mVcdFile, tmp_50_fu_1178_p1, "tmp_50_fu_1178_p1");
    sc_trace(mVcdFile, grp_scaleRange_fu_529_x, "grp_scaleRange_fu_529_x");
    sc_trace(mVcdFile, grp_scaleRange_fu_529_destFrom_V, "grp_scaleRange_fu_529_destFrom_V");
    sc_trace(mVcdFile, grp_scaleRange_fu_529_ap_ce, "grp_scaleRange_fu_529_ap_ce");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage12_iter0_ignore_call11, "ap_block_state13_pp0_stage12_iter0_ignore_call11");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter1_ignore_call11, "ap_block_state24_pp0_stage0_iter1_ignore_call11");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage1_iter1_ignore_call11, "ap_block_state25_pp0_stage1_iter1_ignore_call11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage13_iter0_ignore_call11, "ap_block_state14_pp0_stage13_iter0_ignore_call11");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage14_iter0_ignore_call20, "ap_block_state15_pp0_stage14_iter0_ignore_call20");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter1_ignore_call20, "ap_block_state24_pp0_stage0_iter1_ignore_call20");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage1_iter1_ignore_call20, "ap_block_state25_pp0_stage1_iter1_ignore_call20");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage15_iter0_ignore_call28, "ap_block_state16_pp0_stage15_iter0_ignore_call28");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter1_ignore_call28, "ap_block_state24_pp0_stage0_iter1_ignore_call28");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage1_iter1_ignore_call28, "ap_block_state25_pp0_stage1_iter1_ignore_call28");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage16_iter0_ignore_call36, "ap_block_state17_pp0_stage16_iter0_ignore_call36");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter1_ignore_call36, "ap_block_state24_pp0_stage0_iter1_ignore_call36");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage1_iter1_ignore_call36, "ap_block_state25_pp0_stage1_iter1_ignore_call36");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage17_iter0_ignore_call44, "ap_block_state18_pp0_stage17_iter0_ignore_call44");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter1_ignore_call44, "ap_block_state24_pp0_stage0_iter1_ignore_call44");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage1_iter1_ignore_call44, "ap_block_state25_pp0_stage1_iter1_ignore_call44");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage18_iter0_ignore_call50, "ap_block_state19_pp0_stage18_iter0_ignore_call50");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter1_ignore_call50, "ap_block_state24_pp0_stage0_iter1_ignore_call50");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage1_iter1_ignore_call50, "ap_block_state25_pp0_stage1_iter1_ignore_call50");
    sc_trace(mVcdFile, ap_phi_mux_p_Val2_s_phi_fu_474_p4, "ap_phi_mux_p_Val2_s_phi_fu_474_p4");
    sc_trace(mVcdFile, tmp_2_fu_582_p3, "tmp_2_fu_582_p3");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_Val2_s_reg_471, "ap_phi_reg_pp0_iter0_p_Val2_s_reg_471");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_Val2_10_reg_480, "ap_phi_reg_pp0_iter0_p_Val2_10_reg_480");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_Val2_11_reg_489, "ap_phi_reg_pp0_iter0_p_Val2_11_reg_489");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_Val2_12_reg_499, "ap_phi_reg_pp0_iter0_p_Val2_12_reg_499");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_Val2_13_reg_509, "ap_phi_reg_pp0_iter0_p_Val2_13_reg_509");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_Val2_14_reg_519, "ap_phi_reg_pp0_iter0_p_Val2_14_reg_519");
    sc_trace(mVcdFile, ap_reg_ioackin_OUT_r_AWREADY, "ap_reg_ioackin_OUT_r_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_OUT_r_WREADY, "ap_reg_ioackin_OUT_r_WREADY");
    sc_trace(mVcdFile, p_Val2_4_fu_923_p1, "p_Val2_4_fu_923_p1");
    sc_trace(mVcdFile, p_Val2_5_fu_974_p1, "p_Val2_5_fu_974_p1");
    sc_trace(mVcdFile, p_Val2_6_fu_1025_p1, "p_Val2_6_fu_1025_p1");
    sc_trace(mVcdFile, p_Val2_7_fu_1076_p1, "p_Val2_7_fu_1076_p1");
    sc_trace(mVcdFile, p_Val2_2_cast_fu_1107_p1, "p_Val2_2_cast_fu_1107_p1");
    sc_trace(mVcdFile, p_Val2_3_cast_fu_1161_p1, "p_Val2_3_cast_fu_1161_p1");
    sc_trace(mVcdFile, tmp_26_fu_1202_p2, "tmp_26_fu_1202_p2");
    sc_trace(mVcdFile, tmp_s_fu_1186_p2, "tmp_s_fu_1186_p2");
    sc_trace(mVcdFile, tmp_9_fu_568_p2, "tmp_9_fu_568_p2");
    sc_trace(mVcdFile, tmp_3_fu_579_p1, "tmp_3_fu_579_p1");
    sc_trace(mVcdFile, tmp_10_fu_605_p1, "tmp_10_fu_605_p1");
    sc_trace(mVcdFile, tmp_7_fu_596_p4, "tmp_7_fu_596_p4");
    sc_trace(mVcdFile, tmp_8_fu_622_p4, "tmp_8_fu_622_p4");
    sc_trace(mVcdFile, tmp_4_fu_631_p1, "tmp_4_fu_631_p1");
    sc_trace(mVcdFile, tmp_1_fu_645_p3, "tmp_1_fu_645_p3");
    sc_trace(mVcdFile, tmp_5_fu_635_p3, "tmp_5_fu_635_p3");
    sc_trace(mVcdFile, tmp_15_fu_642_p1, "tmp_15_fu_642_p1");
    sc_trace(mVcdFile, tmp_11_fu_653_p2, "tmp_11_fu_653_p2");
    sc_trace(mVcdFile, tmp_18_fu_682_p1, "tmp_18_fu_682_p1");
    sc_trace(mVcdFile, tmp_13_fu_673_p4, "tmp_13_fu_673_p4");
    sc_trace(mVcdFile, tmp_20_fu_708_p1, "tmp_20_fu_708_p1");
    sc_trace(mVcdFile, tmp_16_fu_699_p4, "tmp_16_fu_699_p4");
    sc_trace(mVcdFile, tmp_23_fu_725_p3, "tmp_23_fu_725_p3");
    sc_trace(mVcdFile, tmp_19_fu_732_p1, "tmp_19_fu_732_p1");
    sc_trace(mVcdFile, tmp_22_fu_746_p3, "tmp_22_fu_746_p3");
    sc_trace(mVcdFile, tmp_21_fu_736_p3, "tmp_21_fu_736_p3");
    sc_trace(mVcdFile, tmp_27_fu_743_p1, "tmp_27_fu_743_p1");
    sc_trace(mVcdFile, tmp_24_fu_754_p2, "tmp_24_fu_754_p2");
    sc_trace(mVcdFile, tmp_28_fu_774_p2, "tmp_28_fu_774_p2");
    sc_trace(mVcdFile, tmp_29_fu_780_p2, "tmp_29_fu_780_p2");
    sc_trace(mVcdFile, tmp_30_fu_794_p2, "tmp_30_fu_794_p2");
    sc_trace(mVcdFile, p_channels_load_cast_fu_786_p3, "p_channels_load_cast_fu_786_p3");
    sc_trace(mVcdFile, tmp_39_fu_808_p3, "tmp_39_fu_808_p3");
    sc_trace(mVcdFile, tmp_143_1_fu_829_p2, "tmp_143_1_fu_829_p2");
    sc_trace(mVcdFile, tmp_147_1_fu_835_p2, "tmp_147_1_fu_835_p2");
    sc_trace(mVcdFile, tmp_32_fu_849_p2, "tmp_32_fu_849_p2");
    sc_trace(mVcdFile, p_channels_load_3_1_c_fu_841_p3, "p_channels_load_3_1_c_fu_841_p3");
    sc_trace(mVcdFile, tmp_40_fu_863_p3, "tmp_40_fu_863_p3");
    sc_trace(mVcdFile, tmp_143_2_fu_876_p2, "tmp_143_2_fu_876_p2");
    sc_trace(mVcdFile, tmp_147_2_fu_882_p2, "tmp_147_2_fu_882_p2");
    sc_trace(mVcdFile, tmp_33_fu_896_p2, "tmp_33_fu_896_p2");
    sc_trace(mVcdFile, p_channels_load_3_2_c_fu_888_p3, "p_channels_load_3_2_c_fu_888_p3");
    sc_trace(mVcdFile, tmp_41_fu_910_p3, "tmp_41_fu_910_p3");
    sc_trace(mVcdFile, tmp_143_3_fu_927_p2, "tmp_143_3_fu_927_p2");
    sc_trace(mVcdFile, tmp_147_3_fu_933_p2, "tmp_147_3_fu_933_p2");
    sc_trace(mVcdFile, tmp_34_fu_947_p2, "tmp_34_fu_947_p2");
    sc_trace(mVcdFile, p_channels_load_3_3_c_fu_939_p3, "p_channels_load_3_3_c_fu_939_p3");
    sc_trace(mVcdFile, tmp_42_fu_961_p3, "tmp_42_fu_961_p3");
    sc_trace(mVcdFile, tmp_138_4_fu_978_p2, "tmp_138_4_fu_978_p2");
    sc_trace(mVcdFile, tmp_140_4_fu_984_p2, "tmp_140_4_fu_984_p2");
    sc_trace(mVcdFile, tmp_35_fu_998_p2, "tmp_35_fu_998_p2");
    sc_trace(mVcdFile, p_channels_load_1_4_c_fu_990_p3, "p_channels_load_1_4_c_fu_990_p3");
    sc_trace(mVcdFile, tmp_43_fu_1012_p3, "tmp_43_fu_1012_p3");
    sc_trace(mVcdFile, tmp_141_5_fu_1029_p2, "tmp_141_5_fu_1029_p2");
    sc_trace(mVcdFile, tmp_146_5_fu_1035_p2, "tmp_146_5_fu_1035_p2");
    sc_trace(mVcdFile, tmp_36_fu_1049_p2, "tmp_36_fu_1049_p2");
    sc_trace(mVcdFile, p_channels_load_2_5_c_fu_1041_p3, "p_channels_load_2_5_c_fu_1041_p3");
    sc_trace(mVcdFile, tmp_44_fu_1063_p3, "tmp_44_fu_1063_p3");
    sc_trace(mVcdFile, tmp_52_fu_1080_p4, "tmp_52_fu_1080_p4");
    sc_trace(mVcdFile, tmp_53_fu_1112_p4, "tmp_53_fu_1112_p4");
    sc_trace(mVcdFile, icmp1_fu_1122_p2, "icmp1_fu_1122_p2");
    sc_trace(mVcdFile, tmp_1_i_fu_1128_p2, "tmp_1_i_fu_1128_p2");
    sc_trace(mVcdFile, tmp_38_cast_fu_1134_p3, "tmp_38_cast_fu_1134_p3");
    sc_trace(mVcdFile, ap_NS_iter0_fsm, "ap_NS_iter0_fsm");
    sc_trace(mVcdFile, ap_NS_iter1_fsm, "ap_NS_iter1_fsm");
    sc_trace(mVcdFile, ap_condition_1163, "ap_condition_1163");
    sc_trace(mVcdFile, ap_condition_460, "ap_condition_460");
    sc_trace(mVcdFile, ap_condition_1168, "ap_condition_1168");
    sc_trace(mVcdFile, ap_condition_522, "ap_condition_522");
#endif

    }
    mHdltvinHandle.open("rcReceiver.hdltvin.dat");
    mHdltvoutHandle.open("rcReceiver.hdltvout.dat");
}

rcReceiver::~rcReceiver() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete rcReceiver_CTRL_s_axi_U;
    delete rcReceiver_TEST_s_axi_U;
    delete rcReceiver_OUT_r_m_axi_U;
    delete grp_scaleRange_fu_529;
}

void rcReceiver::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void rcReceiver::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void rcReceiver::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void rcReceiver::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_6;
}

void rcReceiver::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void rcReceiver::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv3_0;
}

void rcReceiver::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv2_0;
}

void rcReceiver::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv4_0;
}

void rcReceiver::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv2_3;
}

void rcReceiver::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter0_fsm = ap_ST_iter0_fsm_state1;
    } else {
        ap_CS_iter0_fsm = ap_NS_iter0_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter1_fsm = ap_ST_iter1_fsm_state0;
    } else {
        ap_CS_iter1_fsm = ap_NS_iter1_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_460.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_0)) {
            ap_phi_reg_pp0_iter0_p_Val2_10_reg_480 = channels_1.read();
        } else if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter0_p_Val2_10_reg_480 = tmp_6_fu_608_p3.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_460.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_0)) {
            ap_phi_reg_pp0_iter0_p_Val2_11_reg_489 = channels_2.read();
        } else if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter0_p_Val2_11_reg_489 = tmp_12_fu_659_p3.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_460.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_0)) {
            ap_phi_reg_pp0_iter0_p_Val2_12_reg_499 = channels_3.read();
        } else if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter0_p_Val2_12_reg_499 = tmp_14_fu_685_p3.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_460.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_0)) {
            ap_phi_reg_pp0_iter0_p_Val2_13_reg_509 = channels_4.read();
        } else if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter0_p_Val2_13_reg_509 = tmp_17_fu_711_p3.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_460.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_0)) {
            ap_phi_reg_pp0_iter0_p_Val2_14_reg_519 = channels_5.read();
        } else if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter0_p_Val2_14_reg_519 = tmp_25_fu_760_p3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_OUT_r_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read())) {
            if (esl_seteq<1,1,1>(ap_condition_522.read(), ap_const_boolean_1)) {
                ap_reg_ioackin_OUT_r_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_condition_1168.read(), ap_const_boolean_1)) {
                ap_reg_ioackin_OUT_r_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0;
    } else {
        if (((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read())) || 
             (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read())) || 
             (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read())) || 
             (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read())) || 
             (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read())) || 
             (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state20.read())))) {
            ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_0;
        } else if (((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_WREADY.read())) || 
                    (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_WREADY.read())) || 
                    (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_WREADY.read())) || 
                    (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_WREADY.read())) || 
                    (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_WREADY.read())) || 
                    (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state20.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_WREADY.read())))) {
            ap_reg_ioackin_OUT_r_WREADY = ap_const_logic_1;
        }
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state3.read()))) {
        SBUS_data_load_1_reg_1229 = SBUS_data_q0.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state4.read()))) {
        SBUS_data_load_2_reg_1239 = SBUS_data_q0.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state5.read()))) {
        SBUS_data_load_3_reg_1250 = SBUS_data_q0.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state6.read()))) {
        SBUS_data_load_4_reg_1261 = SBUS_data_q0.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state7.read()))) {
        SBUS_data_load_5_reg_1271 = SBUS_data_q0.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state8.read()))) {
        SBUS_data_load_6_reg_1282 = SBUS_data_q0.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state9.read()))) {
        SBUS_data_load_7_reg_1293 = SBUS_data_q0.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state10.read()))) {
        SBUS_data_load_8_reg_1304 = SBUS_data_q0.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state11.read()))) {
        SBUS_data_load_9_reg_1314 = SBUS_data_q0.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state12.read()) && esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_1))) {
        channels_0 = tmp_2_fu_582_p3.read();
        channels_1 = tmp_6_fu_608_p3.read();
        channels_2 = tmp_12_fu_659_p3.read();
        channels_3 = tmp_14_fu_685_p3.read();
        channels_4 = tmp_17_fu_711_p3.read();
        channels_5 = tmp_25_fu_760_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(or_cond_reg_1359_pp0_iter0_reg.read(), ap_const_lv1_0))) {
        errors = tmp_s_fu_1186_p2.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read()))) {
        icmp_reg_1501 = icmp_fu_1090_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(or_cond_reg_1359_pp0_iter0_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_1398_pp0_iter0_reg.read()))) {
        lost = tmp_26_fu_1202_p2.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state12.read()))) {
        or_cond_reg_1359 = or_cond_fu_574_p2.read();
        tmp_31_reg_1388 = tmp_31_fu_800_p3.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state23.read()))) {
        or_cond_reg_1359_pp0_iter0_reg = or_cond_reg_1359.read();
        tmp_38_reg_1398_pp0_iter0_reg = tmp_38_reg_1398.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state13.read()))) {
        p_Val2_11_reg_489 = ap_phi_reg_pp0_iter0_p_Val2_11_reg_489.read();
        p_Val2_12_reg_499 = ap_phi_reg_pp0_iter0_p_Val2_12_reg_499.read();
        p_Val2_13_reg_509 = ap_phi_reg_pp0_iter0_p_Val2_13_reg_509.read();
        p_Val2_14_reg_519 = ap_phi_reg_pp0_iter0_p_Val2_14_reg_519.read();
        tmp_152_1_reg_1402 = tmp_152_1_fu_855_p3.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read()))) {
        p_Val2_1_reg_1480 = grp_scaleRange_fu_529_ap_return.read();
        tmp_150_5_reg_1486 = tmp_150_5_fu_1055_p3.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read()))) {
        p_Val2_2_reg_1516 = p_Val2_2_fu_1100_p3.read();
        tmp_37_reg_1521 = tmp_37_fu_1142_p3.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state20.read()))) {
        p_Val2_3_reg_1536 = p_Val2_3_fu_1154_p3.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_AWREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read()))) {
        p_Val2_8_reg_1417 = grp_scaleRange_fu_529_ap_return.read();
        tmp_152_2_reg_1423 = tmp_152_2_fu_902_p3.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read()))) {
        p_Val2_9_reg_1438 = grp_scaleRange_fu_529_ap_return.read();
        tmp_152_3_reg_1444 = tmp_152_3_fu_953_p3.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read()))) {
        p_Val2_s_10_reg_1459 = grp_scaleRange_fu_529_ap_return.read();
        tmp_148_4_reg_1465 = tmp_148_4_fu_1004_p3.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state13.read()) && esl_seteq<1,1,1>(or_cond_reg_1359.read(), ap_const_lv1_1))) {
        tmp_38_reg_1398 = SBUS_data_q0.read().range(2, 2);
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state2.read()))) {
        tmp_reg_1224 = tmp_fu_537_p2.read();
    }
}

void rcReceiver::thread_OUT_r_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUT_r_AWREADY.read()))) {
        OUT_r_AWVALID = ap_const_logic_1;
    } else {
        OUT_r_AWVALID = ap_const_logic_0;
    }
}

void rcReceiver::thread_OUT_r_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read()))) {
        OUT_r_BREADY = ap_const_logic_1;
    } else {
        OUT_r_BREADY = ap_const_logic_0;
    }
}

void rcReceiver::thread_OUT_r_WDATA() {
    if (esl_seteq<1,1,1>(ap_condition_1163.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state20.read())) {
            OUT_r_WDATA = p_Val2_3_cast_fu_1161_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read())) {
            OUT_r_WDATA = p_Val2_2_cast_fu_1107_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read())) {
            OUT_r_WDATA = p_Val2_7_fu_1076_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read())) {
            OUT_r_WDATA = p_Val2_6_fu_1025_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read())) {
            OUT_r_WDATA = p_Val2_5_fu_974_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read())) {
            OUT_r_WDATA = p_Val2_4_fu_923_p1.read();
        } else {
            OUT_r_WDATA = "XXXXXXXXXXXXXXXX";
        }
    } else {
        OUT_r_WDATA = "XXXXXXXXXXXXXXXX";
    }
}

void rcReceiver::thread_OUT_r_WVALID() {
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUT_r_WREADY.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUT_r_WREADY.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUT_r_WREADY.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUT_r_WREADY.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUT_r_WREADY.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state20.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUT_r_WREADY.read())))) {
        OUT_r_WVALID = ap_const_logic_1;
    } else {
        OUT_r_WVALID = ap_const_logic_0;
    }
}

void rcReceiver::thread_OUT_r_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read())) {
        OUT_r_blk_n_AW = m_axi_OUT_r_AWREADY.read();
    } else {
        OUT_r_blk_n_AW = ap_const_logic_1;
    }
}

void rcReceiver::thread_OUT_r_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) {
        OUT_r_blk_n_B = m_axi_OUT_r_BVALID.read();
    } else {
        OUT_r_blk_n_B = ap_const_logic_1;
    }
}

void rcReceiver::thread_OUT_r_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state20.read()))) {
        OUT_r_blk_n_W = m_axi_OUT_r_WREADY.read();
    } else {
        OUT_r_blk_n_W = ap_const_logic_1;
    }
}

void rcReceiver::thread_SBUS_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state12.read())) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state11.read())) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state10.read())) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state9.read())) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state8.read())) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state7.read())) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state6.read())) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state5.read())) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state4.read())) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state3.read())) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state2.read())) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()))) {
        SBUS_data_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        SBUS_data_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void rcReceiver::thread_SBUS_data_ce0() {
    if (((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state2.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state3.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state4.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state5.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state6.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state7.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state8.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state9.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state10.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state11.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state12.read())))) {
        SBUS_data_ce0 = ap_const_logic_1;
    } else {
        SBUS_data_ce0 = ap_const_logic_0;
    }
}

void rcReceiver::thread_ap_CS_iter0_fsm_state1() {
    ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm.read()[0];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state10() {
    ap_CS_iter0_fsm_state10 = ap_CS_iter0_fsm.read()[9];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state11() {
    ap_CS_iter0_fsm_state11 = ap_CS_iter0_fsm.read()[10];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state12() {
    ap_CS_iter0_fsm_state12 = ap_CS_iter0_fsm.read()[11];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state13() {
    ap_CS_iter0_fsm_state13 = ap_CS_iter0_fsm.read()[12];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state14() {
    ap_CS_iter0_fsm_state14 = ap_CS_iter0_fsm.read()[13];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state15() {
    ap_CS_iter0_fsm_state15 = ap_CS_iter0_fsm.read()[14];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state16() {
    ap_CS_iter0_fsm_state16 = ap_CS_iter0_fsm.read()[15];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state17() {
    ap_CS_iter0_fsm_state17 = ap_CS_iter0_fsm.read()[16];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state18() {
    ap_CS_iter0_fsm_state18 = ap_CS_iter0_fsm.read()[17];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state19() {
    ap_CS_iter0_fsm_state19 = ap_CS_iter0_fsm.read()[18];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state2() {
    ap_CS_iter0_fsm_state2 = ap_CS_iter0_fsm.read()[1];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state20() {
    ap_CS_iter0_fsm_state20 = ap_CS_iter0_fsm.read()[19];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state21() {
    ap_CS_iter0_fsm_state21 = ap_CS_iter0_fsm.read()[20];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state22() {
    ap_CS_iter0_fsm_state22 = ap_CS_iter0_fsm.read()[21];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state23() {
    ap_CS_iter0_fsm_state23 = ap_CS_iter0_fsm.read()[22];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state3() {
    ap_CS_iter0_fsm_state3 = ap_CS_iter0_fsm.read()[2];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state4() {
    ap_CS_iter0_fsm_state4 = ap_CS_iter0_fsm.read()[3];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state5() {
    ap_CS_iter0_fsm_state5 = ap_CS_iter0_fsm.read()[4];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state6() {
    ap_CS_iter0_fsm_state6 = ap_CS_iter0_fsm.read()[5];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state7() {
    ap_CS_iter0_fsm_state7 = ap_CS_iter0_fsm.read()[6];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state8() {
    ap_CS_iter0_fsm_state8 = ap_CS_iter0_fsm.read()[7];
}

void rcReceiver::thread_ap_CS_iter0_fsm_state9() {
    ap_CS_iter0_fsm_state9 = ap_CS_iter0_fsm.read()[8];
}

void rcReceiver::thread_ap_CS_iter1_fsm_state0() {
    ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm.read()[0];
}

void rcReceiver::thread_ap_CS_iter1_fsm_state24() {
    ap_CS_iter1_fsm_state24 = ap_CS_iter1_fsm.read()[1];
}

void rcReceiver::thread_ap_CS_iter1_fsm_state25() {
    ap_CS_iter1_fsm_state25 = ap_CS_iter1_fsm.read()[2];
}

void rcReceiver::thread_ap_block_state10_pp0_stage9_iter0() {
    ap_block_state10_pp0_stage9_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state11_pp0_stage10_iter0() {
    ap_block_state11_pp0_stage10_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state12_pp0_stage11_iter0() {
    ap_block_state12_pp0_stage11_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state13_pp0_stage12_iter0() {
    ap_block_state13_pp0_stage12_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state13_pp0_stage12_iter0_ignore_call11() {
    ap_block_state13_pp0_stage12_iter0_ignore_call11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state14_pp0_stage13_iter0() {
    ap_block_state14_pp0_stage13_iter0 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read()));
}

void rcReceiver::thread_ap_block_state14_pp0_stage13_iter0_ignore_call11() {
    ap_block_state14_pp0_stage13_iter0_ignore_call11 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read()));
}

void rcReceiver::thread_ap_block_state15_pp0_stage14_iter0() {
    ap_block_state15_pp0_stage14_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state15_pp0_stage14_iter0_ignore_call20() {
    ap_block_state15_pp0_stage14_iter0_ignore_call20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state16_pp0_stage15_iter0() {
    ap_block_state16_pp0_stage15_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state16_pp0_stage15_iter0_ignore_call28() {
    ap_block_state16_pp0_stage15_iter0_ignore_call28 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state17_pp0_stage16_iter0() {
    ap_block_state17_pp0_stage16_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state17_pp0_stage16_iter0_ignore_call36() {
    ap_block_state17_pp0_stage16_iter0_ignore_call36 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state18_pp0_stage17_iter0() {
    ap_block_state18_pp0_stage17_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state18_pp0_stage17_iter0_ignore_call44() {
    ap_block_state18_pp0_stage17_iter0_ignore_call44 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state19_pp0_stage18_iter0() {
    ap_block_state19_pp0_stage18_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state19_pp0_stage18_iter0_ignore_call50() {
    ap_block_state19_pp0_stage18_iter0_ignore_call50 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0);
}

void rcReceiver::thread_ap_block_state20_pp0_stage19_iter0() {
    ap_block_state20_pp0_stage19_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state21_pp0_stage20_iter0() {
    ap_block_state21_pp0_stage20_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state22_pp0_stage21_iter0() {
    ap_block_state22_pp0_stage21_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state23_pp0_stage22_iter0() {
    ap_block_state23_pp0_stage22_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state24_pp0_stage0_iter1() {
    ap_block_state24_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state24_pp0_stage0_iter1_ignore_call11() {
    ap_block_state24_pp0_stage0_iter1_ignore_call11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state24_pp0_stage0_iter1_ignore_call20() {
    ap_block_state24_pp0_stage0_iter1_ignore_call20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state24_pp0_stage0_iter1_ignore_call28() {
    ap_block_state24_pp0_stage0_iter1_ignore_call28 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state24_pp0_stage0_iter1_ignore_call36() {
    ap_block_state24_pp0_stage0_iter1_ignore_call36 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state24_pp0_stage0_iter1_ignore_call44() {
    ap_block_state24_pp0_stage0_iter1_ignore_call44 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state24_pp0_stage0_iter1_ignore_call50() {
    ap_block_state24_pp0_stage0_iter1_ignore_call50 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state25_pp0_stage1_iter1() {
    ap_block_state25_pp0_stage1_iter1 = esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read());
}

void rcReceiver::thread_ap_block_state25_pp0_stage1_iter1_ignore_call11() {
    ap_block_state25_pp0_stage1_iter1_ignore_call11 = esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read());
}

void rcReceiver::thread_ap_block_state25_pp0_stage1_iter1_ignore_call20() {
    ap_block_state25_pp0_stage1_iter1_ignore_call20 = esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read());
}

void rcReceiver::thread_ap_block_state25_pp0_stage1_iter1_ignore_call28() {
    ap_block_state25_pp0_stage1_iter1_ignore_call28 = esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read());
}

void rcReceiver::thread_ap_block_state25_pp0_stage1_iter1_ignore_call36() {
    ap_block_state25_pp0_stage1_iter1_ignore_call36 = esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read());
}

void rcReceiver::thread_ap_block_state25_pp0_stage1_iter1_ignore_call44() {
    ap_block_state25_pp0_stage1_iter1_ignore_call44 = esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read());
}

void rcReceiver::thread_ap_block_state25_pp0_stage1_iter1_ignore_call50() {
    ap_block_state25_pp0_stage1_iter1_ignore_call50 = esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read());
}

void rcReceiver::thread_ap_block_state2_pp0_stage1_iter0() {
    ap_block_state2_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state3_pp0_stage2_iter0() {
    ap_block_state3_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state4_pp0_stage3_iter0() {
    ap_block_state4_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state5_pp0_stage4_iter0() {
    ap_block_state5_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state6_pp0_stage5_iter0() {
    ap_block_state6_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state7_pp0_stage6_iter0() {
    ap_block_state7_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state8_pp0_stage7_iter0() {
    ap_block_state8_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_block_state9_pp0_stage8_iter0() {
    ap_block_state9_pp0_stage8_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rcReceiver::thread_ap_condition_1163() {
    ap_condition_1163 = (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUT_r_WREADY.read()));
}

void rcReceiver::thread_ap_condition_1168() {
    ap_condition_1168 = (esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_AWREADY.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read()))));
}

void rcReceiver::thread_ap_condition_460() {
    ap_condition_460 = (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state12.read()));
}

void rcReceiver::thread_ap_condition_522() {
    ap_condition_522 = !(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_AWREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())));
}

void rcReceiver::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void rcReceiver::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void rcReceiver::thread_ap_phi_mux_p_Val2_s_phi_fu_474_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state12.read())) {
        if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_0)) {
            ap_phi_mux_p_Val2_s_phi_fu_474_p4 = channels_0.read();
        } else if (esl_seteq<1,1,1>(or_cond_fu_574_p2.read(), ap_const_lv1_1)) {
            ap_phi_mux_p_Val2_s_phi_fu_474_p4 = tmp_2_fu_582_p3.read();
        } else {
            ap_phi_mux_p_Val2_s_phi_fu_474_p4 = ap_phi_reg_pp0_iter0_p_Val2_s_reg_471.read();
        }
    } else {
        ap_phi_mux_p_Val2_s_phi_fu_474_p4 = ap_phi_reg_pp0_iter0_p_Val2_s_reg_471.read();
    }
}

void rcReceiver::thread_ap_phi_reg_pp0_iter0_p_Val2_s_reg_471() {
    ap_phi_reg_pp0_iter0_p_Val2_s_reg_471 =  (sc_lv<11>) ("XXXXXXXXXXX");
}

void rcReceiver::thread_ap_ready() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state23.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void rcReceiver::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void rcReceiver::thread_ap_sig_ioackin_OUT_r_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUT_r_AWREADY.read())) {
        ap_sig_ioackin_OUT_r_AWREADY = OUT_r_AWREADY.read();
    } else {
        ap_sig_ioackin_OUT_r_AWREADY = ap_const_logic_1;
    }
}

void rcReceiver::thread_ap_sig_ioackin_OUT_r_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUT_r_WREADY.read())) {
        ap_sig_ioackin_OUT_r_WREADY = OUT_r_WREADY.read();
    } else {
        ap_sig_ioackin_OUT_r_WREADY = ap_const_logic_1;
    }
}

void rcReceiver::thread_grp_scaleRange_fu_529_ap_ce() {
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state13.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_AWREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read())))) {
        grp_scaleRange_fu_529_ap_ce = ap_const_logic_1;
    } else {
        grp_scaleRange_fu_529_ap_ce = ap_const_logic_0;
    }
}

void rcReceiver::thread_grp_scaleRange_fu_529_destFrom_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read()))) {
        grp_scaleRange_fu_529_destFrom_V = ap_const_lv15_6000;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state13.read()))) {
        grp_scaleRange_fu_529_destFrom_V = ap_const_lv15_0;
    } else {
        grp_scaleRange_fu_529_destFrom_V =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void rcReceiver::thread_grp_scaleRange_fu_529_x() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read())) {
        grp_scaleRange_fu_529_x = tmp_150_5_reg_1486.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read())) {
        grp_scaleRange_fu_529_x = tmp_148_4_reg_1465.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read())) {
        grp_scaleRange_fu_529_x = tmp_152_3_reg_1444.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read())) {
        grp_scaleRange_fu_529_x = tmp_152_2_reg_1423.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read())) {
        grp_scaleRange_fu_529_x = tmp_152_1_reg_1402.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state13.read())) {
        grp_scaleRange_fu_529_x = tmp_31_reg_1388.read();
    } else {
        grp_scaleRange_fu_529_x =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void rcReceiver::thread_icmp1_fu_1122_p2() {
    icmp1_fu_1122_p2 = (!tmp_53_fu_1112_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<1>(): (sc_bigint<4>(tmp_53_fu_1112_p4.read()) < sc_bigint<4>(ap_const_lv4_1));
}

void rcReceiver::thread_icmp_fu_1090_p2() {
    icmp_fu_1090_p2 = (!tmp_52_fu_1080_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): (sc_bigint<3>(tmp_52_fu_1080_p4.read()) > sc_bigint<3>(ap_const_lv3_0));
}

void rcReceiver::thread_or_cond_fu_574_p2() {
    or_cond_fu_574_p2 = (tmp_reg_1224.read() & tmp_9_fu_568_p2.read());
}

void rcReceiver::thread_p_Val2_2_cast_fu_1107_p1() {
    p_Val2_2_cast_fu_1107_p1 = esl_zext<16,14>(p_Val2_2_fu_1100_p3.read());
}

void rcReceiver::thread_p_Val2_2_fu_1100_p3() {
    p_Val2_2_fu_1100_p3 = esl_concat<1,13>(icmp_reg_1501.read(), ap_const_lv13_0);
}

void rcReceiver::thread_p_Val2_3_cast_fu_1161_p1() {
    p_Val2_3_cast_fu_1161_p1 = esl_zext<16,15>(p_Val2_3_fu_1154_p3.read());
}

void rcReceiver::thread_p_Val2_3_fu_1154_p3() {
    p_Val2_3_fu_1154_p3 = esl_concat<2,13>(tmp_37_reg_1521.read(), ap_const_lv13_0);
}

void rcReceiver::thread_p_Val2_4_fu_923_p1() {
    p_Val2_4_fu_923_p1 = esl_sext<16,15>(p_Val2_8_reg_1417.read());
}

void rcReceiver::thread_p_Val2_5_fu_974_p1() {
    p_Val2_5_fu_974_p1 = esl_sext<16,15>(p_Val2_9_reg_1438.read());
}

void rcReceiver::thread_p_Val2_6_fu_1025_p1() {
    p_Val2_6_fu_1025_p1 = esl_sext<16,15>(p_Val2_s_10_reg_1459.read());
}

void rcReceiver::thread_p_Val2_7_fu_1076_p1() {
    p_Val2_7_fu_1076_p1 = esl_sext<16,15>(p_Val2_1_reg_1480.read());
}

void rcReceiver::thread_p_channels_load_1_4_c_fu_990_p3() {
    p_channels_load_1_4_c_fu_990_p3 = (!tmp_138_4_fu_978_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_138_4_fu_978_p2.read()[0].to_bool())? ap_const_lv11_C8: ap_const_lv11_708);
}

void rcReceiver::thread_p_channels_load_2_5_c_fu_1041_p3() {
    p_channels_load_2_5_c_fu_1041_p3 = (!tmp_141_5_fu_1029_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_141_5_fu_1029_p2.read()[0].to_bool())? ap_const_lv11_C8: ap_const_lv11_708);
}

void rcReceiver::thread_p_channels_load_3_1_c_fu_841_p3() {
    p_channels_load_3_1_c_fu_841_p3 = (!tmp_143_1_fu_829_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_143_1_fu_829_p2.read()[0].to_bool())? ap_const_lv11_C8: ap_const_lv11_708);
}

void rcReceiver::thread_p_channels_load_3_2_c_fu_888_p3() {
    p_channels_load_3_2_c_fu_888_p3 = (!tmp_143_2_fu_876_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_143_2_fu_876_p2.read()[0].to_bool())? ap_const_lv11_C8: ap_const_lv11_708);
}

void rcReceiver::thread_p_channels_load_3_3_c_fu_939_p3() {
    p_channels_load_3_3_c_fu_939_p3 = (!tmp_143_3_fu_927_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_143_3_fu_927_p2.read()[0].to_bool())? ap_const_lv11_C8: ap_const_lv11_708);
}

void rcReceiver::thread_p_channels_load_cast_fu_786_p3() {
    p_channels_load_cast_fu_786_p3 = (!tmp_28_fu_774_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_28_fu_774_p2.read()[0].to_bool())? ap_const_lv11_C8: ap_const_lv11_708);
}

void rcReceiver::thread_test_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state23.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state22.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state21.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state20.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state13.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state12.read())) {
        test_V_address0 =  (sc_lv<12>) (ap_const_lv64_0);
    } else {
        test_V_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void rcReceiver::thread_test_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state24.read()) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state23.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state12.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state13.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_AWREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state20.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state21.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state22.read())))) {
        test_V_ce0 = ap_const_logic_1;
    } else {
        test_V_ce0 = ap_const_logic_0;
    }
}

void rcReceiver::thread_test_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state23.read())) {
        test_V_d0 = tmp_50_fu_1178_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state22.read())) {
        test_V_d0 = tmp_49_fu_1174_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state21.read())) {
        test_V_d0 = tmp_48_fu_1170_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state20.read())) {
        test_V_d0 = tmp_47_fu_1166_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read())) {
        test_V_d0 = tmp_46_fu_1150_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read())) {
        test_V_d0 = tmp_45_fu_1096_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read())) {
        test_V_d0 = tmp_56_cast_fu_1071_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read())) {
        test_V_d0 = tmp_54_cast_fu_1020_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read())) {
        test_V_d0 = tmp_52_cast_fu_969_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read())) {
        test_V_d0 = tmp_50_cast_fu_918_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state13.read())) {
        test_V_d0 = tmp_48_cast_fu_871_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state12.read())) {
        test_V_d0 = tmp_46_cast_fu_816_p1.read();
    } else {
        test_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void rcReceiver::thread_test_V_we0() {
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state23.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state12.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state13.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_AWREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read())) || 
         (!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state20.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state21.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state22.read())))) {
        test_V_we0 = ap_const_logic_1;
    } else {
        test_V_we0 = ap_const_logic_0;
    }
}

void rcReceiver::thread_tmp_10_fu_605_p1() {
    tmp_10_fu_605_p1 = SBUS_data_load_3_reg_1250.read().range(6-1, 0);
}

void rcReceiver::thread_tmp_11_fu_653_p2() {
    tmp_11_fu_653_p2 = (tmp_1_fu_645_p3.read() | tmp_5_fu_635_p3.read());
}

void rcReceiver::thread_tmp_12_fu_659_p3() {
    tmp_12_fu_659_p3 = esl_concat<1,10>(tmp_15_fu_642_p1.read(), tmp_11_fu_653_p2.read());
}

void rcReceiver::thread_tmp_138_4_fu_978_p2() {
    tmp_138_4_fu_978_p2 = (!p_Val2_13_reg_509.read().is_01() || !ap_const_lv11_C8.is_01())? sc_lv<1>(): (sc_biguint<11>(p_Val2_13_reg_509.read()) < sc_biguint<11>(ap_const_lv11_C8));
}

void rcReceiver::thread_tmp_13_fu_673_p4() {
    tmp_13_fu_673_p4 = SBUS_data_load_5_reg_1271.read().range(7, 1);
}

void rcReceiver::thread_tmp_140_4_fu_984_p2() {
    tmp_140_4_fu_984_p2 = (!p_Val2_13_reg_509.read().is_01() || !ap_const_lv11_708.is_01())? sc_lv<1>(): (sc_biguint<11>(p_Val2_13_reg_509.read()) > sc_biguint<11>(ap_const_lv11_708));
}

void rcReceiver::thread_tmp_141_5_fu_1029_p2() {
    tmp_141_5_fu_1029_p2 = (!p_Val2_14_reg_519.read().is_01() || !ap_const_lv11_C8.is_01())? sc_lv<1>(): (sc_biguint<11>(p_Val2_14_reg_519.read()) < sc_biguint<11>(ap_const_lv11_C8));
}

void rcReceiver::thread_tmp_143_1_fu_829_p2() {
    tmp_143_1_fu_829_p2 = (!ap_phi_reg_pp0_iter0_p_Val2_10_reg_480.read().is_01() || !ap_const_lv11_C8.is_01())? sc_lv<1>(): (sc_biguint<11>(ap_phi_reg_pp0_iter0_p_Val2_10_reg_480.read()) < sc_biguint<11>(ap_const_lv11_C8));
}

void rcReceiver::thread_tmp_143_2_fu_876_p2() {
    tmp_143_2_fu_876_p2 = (!p_Val2_11_reg_489.read().is_01() || !ap_const_lv11_C8.is_01())? sc_lv<1>(): (sc_biguint<11>(p_Val2_11_reg_489.read()) < sc_biguint<11>(ap_const_lv11_C8));
}

void rcReceiver::thread_tmp_143_3_fu_927_p2() {
    tmp_143_3_fu_927_p2 = (!p_Val2_12_reg_499.read().is_01() || !ap_const_lv11_C8.is_01())? sc_lv<1>(): (sc_biguint<11>(p_Val2_12_reg_499.read()) < sc_biguint<11>(ap_const_lv11_C8));
}

void rcReceiver::thread_tmp_146_5_fu_1035_p2() {
    tmp_146_5_fu_1035_p2 = (!p_Val2_14_reg_519.read().is_01() || !ap_const_lv11_708.is_01())? sc_lv<1>(): (sc_biguint<11>(p_Val2_14_reg_519.read()) > sc_biguint<11>(ap_const_lv11_708));
}

void rcReceiver::thread_tmp_147_1_fu_835_p2() {
    tmp_147_1_fu_835_p2 = (!ap_phi_reg_pp0_iter0_p_Val2_10_reg_480.read().is_01() || !ap_const_lv11_708.is_01())? sc_lv<1>(): (sc_biguint<11>(ap_phi_reg_pp0_iter0_p_Val2_10_reg_480.read()) > sc_biguint<11>(ap_const_lv11_708));
}

void rcReceiver::thread_tmp_147_2_fu_882_p2() {
    tmp_147_2_fu_882_p2 = (!p_Val2_11_reg_489.read().is_01() || !ap_const_lv11_708.is_01())? sc_lv<1>(): (sc_biguint<11>(p_Val2_11_reg_489.read()) > sc_biguint<11>(ap_const_lv11_708));
}

void rcReceiver::thread_tmp_147_3_fu_933_p2() {
    tmp_147_3_fu_933_p2 = (!p_Val2_12_reg_499.read().is_01() || !ap_const_lv11_708.is_01())? sc_lv<1>(): (sc_biguint<11>(p_Val2_12_reg_499.read()) > sc_biguint<11>(ap_const_lv11_708));
}

void rcReceiver::thread_tmp_148_4_fu_1004_p3() {
    tmp_148_4_fu_1004_p3 = (!tmp_35_fu_998_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_35_fu_998_p2.read()[0].to_bool())? p_channels_load_1_4_c_fu_990_p3.read(): p_Val2_13_reg_509.read());
}

void rcReceiver::thread_tmp_14_fu_685_p3() {
    tmp_14_fu_685_p3 = esl_concat<4,7>(tmp_18_fu_682_p1.read(), tmp_13_fu_673_p4.read());
}

void rcReceiver::thread_tmp_150_5_fu_1055_p3() {
    tmp_150_5_fu_1055_p3 = (!tmp_36_fu_1049_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_36_fu_1049_p2.read()[0].to_bool())? p_channels_load_2_5_c_fu_1041_p3.read(): p_Val2_14_reg_519.read());
}

void rcReceiver::thread_tmp_152_1_fu_855_p3() {
    tmp_152_1_fu_855_p3 = (!tmp_32_fu_849_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_32_fu_849_p2.read()[0].to_bool())? p_channels_load_3_1_c_fu_841_p3.read(): ap_phi_reg_pp0_iter0_p_Val2_10_reg_480.read());
}

void rcReceiver::thread_tmp_152_2_fu_902_p3() {
    tmp_152_2_fu_902_p3 = (!tmp_33_fu_896_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_33_fu_896_p2.read()[0].to_bool())? p_channels_load_3_2_c_fu_888_p3.read(): p_Val2_11_reg_489.read());
}

void rcReceiver::thread_tmp_152_3_fu_953_p3() {
    tmp_152_3_fu_953_p3 = (!tmp_34_fu_947_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_34_fu_947_p2.read()[0].to_bool())? p_channels_load_3_3_c_fu_939_p3.read(): p_Val2_12_reg_499.read());
}

void rcReceiver::thread_tmp_15_fu_642_p1() {
    tmp_15_fu_642_p1 = SBUS_data_load_5_reg_1271.read().range(1-1, 0);
}

void rcReceiver::thread_tmp_16_fu_699_p4() {
    tmp_16_fu_699_p4 = SBUS_data_load_6_reg_1282.read().range(7, 4);
}

void rcReceiver::thread_tmp_17_fu_711_p3() {
    tmp_17_fu_711_p3 = esl_concat<7,4>(tmp_20_fu_708_p1.read(), tmp_16_fu_699_p4.read());
}

void rcReceiver::thread_tmp_18_fu_682_p1() {
    tmp_18_fu_682_p1 = SBUS_data_load_6_reg_1282.read().range(4-1, 0);
}

void rcReceiver::thread_tmp_19_fu_732_p1() {
    tmp_19_fu_732_p1 = esl_zext<8,1>(tmp_23_fu_725_p3.read());
}

void rcReceiver::thread_tmp_1_fu_645_p3() {
    tmp_1_fu_645_p3 = esl_concat<2,8>(ap_const_lv2_0, tmp_4_fu_631_p1.read());
}

void rcReceiver::thread_tmp_1_i_fu_1128_p2() {
    tmp_1_i_fu_1128_p2 = (!grp_scaleRange_fu_529_ap_return.read().is_01() || !ap_const_lv15_1800.is_01())? sc_lv<1>(): (sc_bigint<15>(grp_scaleRange_fu_529_ap_return.read()) < sc_bigint<15>(ap_const_lv15_1800));
}

void rcReceiver::thread_tmp_20_fu_708_p1() {
    tmp_20_fu_708_p1 = SBUS_data_load_7_reg_1293.read().range(7-1, 0);
}

void rcReceiver::thread_tmp_21_fu_736_p3() {
    tmp_21_fu_736_p3 = esl_concat<8,1>(SBUS_data_load_8_reg_1304.read(), ap_const_lv1_0);
}

void rcReceiver::thread_tmp_22_fu_746_p3() {
    tmp_22_fu_746_p3 = esl_concat<1,8>(ap_const_lv1_0, tmp_19_fu_732_p1.read());
}

void rcReceiver::thread_tmp_23_fu_725_p3() {
    tmp_23_fu_725_p3 = SBUS_data_load_7_reg_1293.read().range(7, 7);
}

void rcReceiver::thread_tmp_24_fu_754_p2() {
    tmp_24_fu_754_p2 = (tmp_22_fu_746_p3.read() | tmp_21_fu_736_p3.read());
}

void rcReceiver::thread_tmp_25_fu_760_p3() {
    tmp_25_fu_760_p3 = esl_concat<2,9>(tmp_27_fu_743_p1.read(), tmp_24_fu_754_p2.read());
}

void rcReceiver::thread_tmp_26_fu_1202_p2() {
    tmp_26_fu_1202_p2 = (!lost.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(lost.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void rcReceiver::thread_tmp_27_fu_743_p1() {
    tmp_27_fu_743_p1 = SBUS_data_load_9_reg_1314.read().range(2-1, 0);
}

void rcReceiver::thread_tmp_28_fu_774_p2() {
    tmp_28_fu_774_p2 = (!ap_phi_mux_p_Val2_s_phi_fu_474_p4.read().is_01() || !ap_const_lv11_C8.is_01())? sc_lv<1>(): (sc_biguint<11>(ap_phi_mux_p_Val2_s_phi_fu_474_p4.read()) < sc_biguint<11>(ap_const_lv11_C8));
}

void rcReceiver::thread_tmp_29_fu_780_p2() {
    tmp_29_fu_780_p2 = (!ap_phi_mux_p_Val2_s_phi_fu_474_p4.read().is_01() || !ap_const_lv11_708.is_01())? sc_lv<1>(): (sc_biguint<11>(ap_phi_mux_p_Val2_s_phi_fu_474_p4.read()) > sc_biguint<11>(ap_const_lv11_708));
}

void rcReceiver::thread_tmp_2_fu_582_p3() {
    tmp_2_fu_582_p3 = esl_concat<3,8>(tmp_3_fu_579_p1.read(), SBUS_data_load_1_reg_1229.read());
}

void rcReceiver::thread_tmp_30_fu_794_p2() {
    tmp_30_fu_794_p2 = (tmp_28_fu_774_p2.read() | tmp_29_fu_780_p2.read());
}

void rcReceiver::thread_tmp_31_fu_800_p3() {
    tmp_31_fu_800_p3 = (!tmp_30_fu_794_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_30_fu_794_p2.read()[0].to_bool())? p_channels_load_cast_fu_786_p3.read(): ap_phi_mux_p_Val2_s_phi_fu_474_p4.read());
}

void rcReceiver::thread_tmp_32_fu_849_p2() {
    tmp_32_fu_849_p2 = (tmp_143_1_fu_829_p2.read() | tmp_147_1_fu_835_p2.read());
}

void rcReceiver::thread_tmp_33_fu_896_p2() {
    tmp_33_fu_896_p2 = (tmp_143_2_fu_876_p2.read() | tmp_147_2_fu_882_p2.read());
}

void rcReceiver::thread_tmp_34_fu_947_p2() {
    tmp_34_fu_947_p2 = (tmp_143_3_fu_927_p2.read() | tmp_147_3_fu_933_p2.read());
}

void rcReceiver::thread_tmp_35_fu_998_p2() {
    tmp_35_fu_998_p2 = (tmp_138_4_fu_978_p2.read() | tmp_140_4_fu_984_p2.read());
}

void rcReceiver::thread_tmp_36_fu_1049_p2() {
    tmp_36_fu_1049_p2 = (tmp_141_5_fu_1029_p2.read() | tmp_146_5_fu_1035_p2.read());
}

void rcReceiver::thread_tmp_37_fu_1142_p3() {
    tmp_37_fu_1142_p3 = (!tmp_1_i_fu_1128_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_1_i_fu_1128_p2.read()[0].to_bool())? tmp_38_cast_fu_1134_p3.read(): ap_const_lv2_2);
}

void rcReceiver::thread_tmp_38_cast_fu_1134_p3() {
    tmp_38_cast_fu_1134_p3 = (!icmp1_fu_1122_p2.read()[0].is_01())? sc_lv<2>(): ((icmp1_fu_1122_p2.read()[0].to_bool())? ap_const_lv2_0: ap_const_lv2_1);
}

void rcReceiver::thread_tmp_39_fu_808_p3() {
    tmp_39_fu_808_p3 = esl_concat<11,13>(ap_phi_mux_p_Val2_s_phi_fu_474_p4.read(), ap_const_lv13_0);
}

void rcReceiver::thread_tmp_3_fu_579_p1() {
    tmp_3_fu_579_p1 = SBUS_data_load_2_reg_1239.read().range(3-1, 0);
}

void rcReceiver::thread_tmp_40_fu_863_p3() {
    tmp_40_fu_863_p3 = esl_concat<11,13>(ap_phi_reg_pp0_iter0_p_Val2_10_reg_480.read(), ap_const_lv13_0);
}

void rcReceiver::thread_tmp_41_fu_910_p3() {
    tmp_41_fu_910_p3 = esl_concat<11,13>(p_Val2_11_reg_489.read(), ap_const_lv13_0);
}

void rcReceiver::thread_tmp_42_fu_961_p3() {
    tmp_42_fu_961_p3 = esl_concat<11,13>(p_Val2_12_reg_499.read(), ap_const_lv13_0);
}

void rcReceiver::thread_tmp_43_fu_1012_p3() {
    tmp_43_fu_1012_p3 = esl_concat<11,13>(p_Val2_13_reg_509.read(), ap_const_lv13_0);
}

void rcReceiver::thread_tmp_44_fu_1063_p3() {
    tmp_44_fu_1063_p3 = esl_concat<11,13>(p_Val2_14_reg_519.read(), ap_const_lv13_0);
}

void rcReceiver::thread_tmp_45_fu_1096_p1() {
    tmp_45_fu_1096_p1 = esl_sext<32,15>(p_Val2_8_reg_1417.read());
}

void rcReceiver::thread_tmp_46_cast_fu_816_p1() {
    tmp_46_cast_fu_816_p1 = esl_zext<32,24>(tmp_39_fu_808_p3.read());
}

void rcReceiver::thread_tmp_46_fu_1150_p1() {
    tmp_46_fu_1150_p1 = esl_sext<32,15>(p_Val2_9_reg_1438.read());
}

void rcReceiver::thread_tmp_47_fu_1166_p1() {
    tmp_47_fu_1166_p1 = esl_sext<32,15>(p_Val2_s_10_reg_1459.read());
}

void rcReceiver::thread_tmp_48_cast_fu_871_p1() {
    tmp_48_cast_fu_871_p1 = esl_zext<32,24>(tmp_40_fu_863_p3.read());
}

void rcReceiver::thread_tmp_48_fu_1170_p1() {
    tmp_48_fu_1170_p1 = esl_sext<32,15>(p_Val2_1_reg_1480.read());
}

void rcReceiver::thread_tmp_49_fu_1174_p1() {
    tmp_49_fu_1174_p1 = esl_zext<32,14>(p_Val2_2_reg_1516.read());
}

void rcReceiver::thread_tmp_4_fu_631_p1() {
    tmp_4_fu_631_p1 = esl_zext<8,2>(tmp_8_fu_622_p4.read());
}

void rcReceiver::thread_tmp_50_cast_fu_918_p1() {
    tmp_50_cast_fu_918_p1 = esl_zext<32,24>(tmp_41_fu_910_p3.read());
}

void rcReceiver::thread_tmp_50_fu_1178_p1() {
    tmp_50_fu_1178_p1 = esl_zext<32,15>(p_Val2_3_reg_1536.read());
}

void rcReceiver::thread_tmp_52_cast_fu_969_p1() {
    tmp_52_cast_fu_969_p1 = esl_zext<32,24>(tmp_42_fu_961_p3.read());
}

void rcReceiver::thread_tmp_52_fu_1080_p4() {
    tmp_52_fu_1080_p4 = grp_scaleRange_fu_529_ap_return.read().range(14, 12);
}

void rcReceiver::thread_tmp_53_fu_1112_p4() {
    tmp_53_fu_1112_p4 = grp_scaleRange_fu_529_ap_return.read().range(14, 11);
}

void rcReceiver::thread_tmp_54_cast_fu_1020_p1() {
    tmp_54_cast_fu_1020_p1 = esl_zext<32,24>(tmp_43_fu_1012_p3.read());
}

void rcReceiver::thread_tmp_56_cast_fu_1071_p1() {
    tmp_56_cast_fu_1071_p1 = esl_zext<32,24>(tmp_44_fu_1063_p3.read());
}

void rcReceiver::thread_tmp_5_fu_635_p3() {
    tmp_5_fu_635_p3 = esl_concat<8,2>(SBUS_data_load_4_reg_1261.read(), ap_const_lv2_0);
}

void rcReceiver::thread_tmp_6_fu_608_p3() {
    tmp_6_fu_608_p3 = esl_concat<6,5>(tmp_10_fu_605_p1.read(), tmp_7_fu_596_p4.read());
}

void rcReceiver::thread_tmp_7_fu_596_p4() {
    tmp_7_fu_596_p4 = SBUS_data_load_2_reg_1239.read().range(7, 3);
}

void rcReceiver::thread_tmp_8_fu_622_p4() {
    tmp_8_fu_622_p4 = SBUS_data_load_3_reg_1250.read().range(7, 6);
}

void rcReceiver::thread_tmp_9_fu_568_p2() {
    tmp_9_fu_568_p2 = (!SBUS_data_q0.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(SBUS_data_q0.read() == ap_const_lv8_0);
}

void rcReceiver::thread_tmp_fu_537_p2() {
    tmp_fu_537_p2 = (!SBUS_data_q0.read().is_01() || !ap_const_lv8_F.is_01())? sc_lv<1>(): sc_lv<1>(SBUS_data_q0.read() == ap_const_lv8_F);
}

void rcReceiver::thread_tmp_s_fu_1186_p2() {
    tmp_s_fu_1186_p2 = (!errors.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(errors.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void rcReceiver::thread_ap_NS_iter0_fsm() {
    switch (ap_CS_iter0_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state2.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state3.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            }
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state4.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            }
            break;
        case 16 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state5.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            }
            break;
        case 32 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state6.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            }
            break;
        case 64 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state7.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            }
            break;
        case 128 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state8.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            }
            break;
        case 256 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state9.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            }
            break;
        case 512 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state10.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            }
            break;
        case 1024 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state11.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            }
            break;
        case 2048 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state12.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            }
            break;
        case 4096 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state13.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            }
            break;
        case 8192 : 
            if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_AWREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state14.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            }
            break;
        case 16384 : 
            if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state15.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            }
            break;
        case 32768 : 
            if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state16.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            }
            break;
        case 65536 : 
            if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state17.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            }
            break;
        case 131072 : 
            if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state18.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state19;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            }
            break;
        case 262144 : 
            if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state19.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state20;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state19;
            }
            break;
        case 524288 : 
            if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_OUT_r_WREADY.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state20.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state21;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state20;
            }
            break;
        case 1048576 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state21.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state22;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state21;
            }
            break;
        case 2097152 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state22.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state23;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state22;
            }
            break;
        case 4194304 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read()))) {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            } else {
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state23;
            }
            break;
        default : 
            ap_NS_iter0_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void rcReceiver::thread_ap_NS_iter1_fsm() {
    switch (ap_CS_iter1_fsm.read().to_uint64()) {
        case 2 : 
            ap_NS_iter1_fsm = ap_ST_iter1_fsm_state25;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read()))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state24;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_CS_iter0_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_logic_1, OUT_r_BVALID.read()))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state25;
            }
            break;
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_BVALID.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state25.read())) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state23.read()))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state24;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter1_fsm =  (sc_lv<3>) ("XXX");
            break;
    }
}

void rcReceiver::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_OUT_r_AWVALID\" :  \"" << m_axi_OUT_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_AWREADY\" :  \"" << m_axi_OUT_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWADDR\" :  \"" << m_axi_OUT_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWID\" :  \"" << m_axi_OUT_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWLEN\" :  \"" << m_axi_OUT_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWSIZE\" :  \"" << m_axi_OUT_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWBURST\" :  \"" << m_axi_OUT_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWLOCK\" :  \"" << m_axi_OUT_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWCACHE\" :  \"" << m_axi_OUT_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWPROT\" :  \"" << m_axi_OUT_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWQOS\" :  \"" << m_axi_OUT_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWREGION\" :  \"" << m_axi_OUT_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWUSER\" :  \"" << m_axi_OUT_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WVALID\" :  \"" << m_axi_OUT_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_WREADY\" :  \"" << m_axi_OUT_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WDATA\" :  \"" << m_axi_OUT_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WSTRB\" :  \"" << m_axi_OUT_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WLAST\" :  \"" << m_axi_OUT_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WID\" :  \"" << m_axi_OUT_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WUSER\" :  \"" << m_axi_OUT_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARVALID\" :  \"" << m_axi_OUT_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_ARREADY\" :  \"" << m_axi_OUT_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARADDR\" :  \"" << m_axi_OUT_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARID\" :  \"" << m_axi_OUT_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARLEN\" :  \"" << m_axi_OUT_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARSIZE\" :  \"" << m_axi_OUT_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARBURST\" :  \"" << m_axi_OUT_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARLOCK\" :  \"" << m_axi_OUT_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARCACHE\" :  \"" << m_axi_OUT_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARPROT\" :  \"" << m_axi_OUT_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARQOS\" :  \"" << m_axi_OUT_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARREGION\" :  \"" << m_axi_OUT_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARUSER\" :  \"" << m_axi_OUT_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RVALID\" :  \"" << m_axi_OUT_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_RREADY\" :  \"" << m_axi_OUT_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RDATA\" :  \"" << m_axi_OUT_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RLAST\" :  \"" << m_axi_OUT_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RID\" :  \"" << m_axi_OUT_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RUSER\" :  \"" << m_axi_OUT_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RRESP\" :  \"" << m_axi_OUT_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BVALID\" :  \"" << m_axi_OUT_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_BREADY\" :  \"" << m_axi_OUT_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BRESP\" :  \"" << m_axi_OUT_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BID\" :  \"" << m_axi_OUT_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BUSER\" :  \"" << m_axi_OUT_r_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWVALID\" :  \"" << s_axi_CTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_AWREADY\" :  \"" << s_axi_CTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWADDR\" :  \"" << s_axi_CTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WVALID\" :  \"" << s_axi_CTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_WREADY\" :  \"" << s_axi_CTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WDATA\" :  \"" << s_axi_CTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WSTRB\" :  \"" << s_axi_CTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARVALID\" :  \"" << s_axi_CTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_ARREADY\" :  \"" << s_axi_CTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARADDR\" :  \"" << s_axi_CTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RVALID\" :  \"" << s_axi_CTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_RREADY\" :  \"" << s_axi_CTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RDATA\" :  \"" << s_axi_CTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RRESP\" :  \"" << s_axi_CTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BVALID\" :  \"" << s_axi_CTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BREADY\" :  \"" << s_axi_CTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BRESP\" :  \"" << s_axi_CTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_AWVALID\" :  \"" << s_axi_TEST_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_AWREADY\" :  \"" << s_axi_TEST_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_AWADDR\" :  \"" << s_axi_TEST_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_WVALID\" :  \"" << s_axi_TEST_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_WREADY\" :  \"" << s_axi_TEST_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_WDATA\" :  \"" << s_axi_TEST_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_WSTRB\" :  \"" << s_axi_TEST_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_ARVALID\" :  \"" << s_axi_TEST_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_ARREADY\" :  \"" << s_axi_TEST_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_ARADDR\" :  \"" << s_axi_TEST_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_RVALID\" :  \"" << s_axi_TEST_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_RREADY\" :  \"" << s_axi_TEST_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_RDATA\" :  \"" << s_axi_TEST_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_RRESP\" :  \"" << s_axi_TEST_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_BVALID\" :  \"" << s_axi_TEST_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_TEST_BREADY\" :  \"" << s_axi_TEST_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_TEST_BRESP\" :  \"" << s_axi_TEST_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

