// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rcReceiver,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=22,HLS_SYN_TPT=12,HLS_SYN_MEM=4,HLS_SYN_DSP=51,HLS_SYN_FF=2308,HLS_SYN_LUT=3040,HLS_VERSION=2018_2}" *)

module rcReceiver (
        ap_clk,
        ap_rst_n,
        m_axi_OUT_r_AWVALID,
        m_axi_OUT_r_AWREADY,
        m_axi_OUT_r_AWADDR,
        m_axi_OUT_r_AWID,
        m_axi_OUT_r_AWLEN,
        m_axi_OUT_r_AWSIZE,
        m_axi_OUT_r_AWBURST,
        m_axi_OUT_r_AWLOCK,
        m_axi_OUT_r_AWCACHE,
        m_axi_OUT_r_AWPROT,
        m_axi_OUT_r_AWQOS,
        m_axi_OUT_r_AWREGION,
        m_axi_OUT_r_AWUSER,
        m_axi_OUT_r_WVALID,
        m_axi_OUT_r_WREADY,
        m_axi_OUT_r_WDATA,
        m_axi_OUT_r_WSTRB,
        m_axi_OUT_r_WLAST,
        m_axi_OUT_r_WID,
        m_axi_OUT_r_WUSER,
        m_axi_OUT_r_ARVALID,
        m_axi_OUT_r_ARREADY,
        m_axi_OUT_r_ARADDR,
        m_axi_OUT_r_ARID,
        m_axi_OUT_r_ARLEN,
        m_axi_OUT_r_ARSIZE,
        m_axi_OUT_r_ARBURST,
        m_axi_OUT_r_ARLOCK,
        m_axi_OUT_r_ARCACHE,
        m_axi_OUT_r_ARPROT,
        m_axi_OUT_r_ARQOS,
        m_axi_OUT_r_ARREGION,
        m_axi_OUT_r_ARUSER,
        m_axi_OUT_r_RVALID,
        m_axi_OUT_r_RREADY,
        m_axi_OUT_r_RDATA,
        m_axi_OUT_r_RLAST,
        m_axi_OUT_r_RID,
        m_axi_OUT_r_RUSER,
        m_axi_OUT_r_RRESP,
        m_axi_OUT_r_BVALID,
        m_axi_OUT_r_BREADY,
        m_axi_OUT_r_BRESP,
        m_axi_OUT_r_BID,
        m_axi_OUT_r_BUSER,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_iter0_fsm_state1 = 12'd1;
parameter    ap_ST_iter0_fsm_state2 = 12'd2;
parameter    ap_ST_iter0_fsm_state3 = 12'd4;
parameter    ap_ST_iter0_fsm_state4 = 12'd8;
parameter    ap_ST_iter0_fsm_state5 = 12'd16;
parameter    ap_ST_iter0_fsm_state6 = 12'd32;
parameter    ap_ST_iter0_fsm_state7 = 12'd64;
parameter    ap_ST_iter0_fsm_state8 = 12'd128;
parameter    ap_ST_iter0_fsm_state9 = 12'd256;
parameter    ap_ST_iter0_fsm_state10 = 12'd512;
parameter    ap_ST_iter0_fsm_state11 = 12'd1024;
parameter    ap_ST_iter0_fsm_state12 = 12'd2048;
parameter    ap_ST_iter1_fsm_state13 = 12'd2;
parameter    ap_ST_iter1_fsm_state14 = 12'd4;
parameter    ap_ST_iter1_fsm_state15 = 12'd8;
parameter    ap_ST_iter1_fsm_state16 = 12'd16;
parameter    ap_ST_iter1_fsm_state17 = 12'd32;
parameter    ap_ST_iter1_fsm_state18 = 12'd64;
parameter    ap_ST_iter1_fsm_state19 = 12'd128;
parameter    ap_ST_iter1_fsm_state20 = 12'd256;
parameter    ap_ST_iter1_fsm_state21 = 12'd512;
parameter    ap_ST_iter1_fsm_state22 = 12'd1024;
parameter    ap_ST_iter1_fsm_state23 = 12'd2048;
parameter    ap_ST_iter1_fsm_state0 = 12'd1;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_OUT_R_ID_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_OUT_R_DATA_WIDTH = 32;
parameter    C_M_AXI_OUT_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_TARGET_ADDR = 0;
parameter    C_M_AXI_OUT_R_USER_VALUE = 0;
parameter    C_M_AXI_OUT_R_PROT_VALUE = 0;
parameter    C_M_AXI_OUT_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUT_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_OUT_r_AWVALID;
input   m_axi_OUT_r_AWREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_AWADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_AWID;
output  [7:0] m_axi_OUT_r_AWLEN;
output  [2:0] m_axi_OUT_r_AWSIZE;
output  [1:0] m_axi_OUT_r_AWBURST;
output  [1:0] m_axi_OUT_r_AWLOCK;
output  [3:0] m_axi_OUT_r_AWCACHE;
output  [2:0] m_axi_OUT_r_AWPROT;
output  [3:0] m_axi_OUT_r_AWQOS;
output  [3:0] m_axi_OUT_r_AWREGION;
output  [C_M_AXI_OUT_R_AWUSER_WIDTH - 1:0] m_axi_OUT_r_AWUSER;
output   m_axi_OUT_r_WVALID;
input   m_axi_OUT_r_WREADY;
output  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_WDATA;
output  [C_M_AXI_OUT_R_WSTRB_WIDTH - 1:0] m_axi_OUT_r_WSTRB;
output   m_axi_OUT_r_WLAST;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_WID;
output  [C_M_AXI_OUT_R_WUSER_WIDTH - 1:0] m_axi_OUT_r_WUSER;
output   m_axi_OUT_r_ARVALID;
input   m_axi_OUT_r_ARREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_ARADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_ARID;
output  [7:0] m_axi_OUT_r_ARLEN;
output  [2:0] m_axi_OUT_r_ARSIZE;
output  [1:0] m_axi_OUT_r_ARBURST;
output  [1:0] m_axi_OUT_r_ARLOCK;
output  [3:0] m_axi_OUT_r_ARCACHE;
output  [2:0] m_axi_OUT_r_ARPROT;
output  [3:0] m_axi_OUT_r_ARQOS;
output  [3:0] m_axi_OUT_r_ARREGION;
output  [C_M_AXI_OUT_R_ARUSER_WIDTH - 1:0] m_axi_OUT_r_ARUSER;
input   m_axi_OUT_r_RVALID;
output   m_axi_OUT_r_RREADY;
input  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_RDATA;
input   m_axi_OUT_r_RLAST;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_RID;
input  [C_M_AXI_OUT_R_RUSER_WIDTH - 1:0] m_axi_OUT_r_RUSER;
input  [1:0] m_axi_OUT_r_RRESP;
input   m_axi_OUT_r_BVALID;
output   m_axi_OUT_r_BREADY;
input  [1:0] m_axi_OUT_r_BRESP;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_BID;
input  [C_M_AXI_OUT_R_BUSER_WIDTH - 1:0] m_axi_OUT_r_BUSER;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
reg   [11:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [11:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg    ap_ready;
wire    ap_CS_iter0_fsm_state12;
reg    OUT_r_AWVALID;
wire    OUT_r_AWREADY;
reg    OUT_r_WVALID;
wire    OUT_r_WREADY;
reg   [15:0] OUT_r_WDATA;
wire    OUT_r_ARREADY;
wire    OUT_r_RVALID;
wire   [15:0] OUT_r_RDATA;
wire    OUT_r_RLAST;
wire   [0:0] OUT_r_RID;
wire   [0:0] OUT_r_RUSER;
wire   [1:0] OUT_r_RRESP;
wire    OUT_r_BVALID;
reg    OUT_r_BREADY;
wire   [1:0] OUT_r_BRESP;
wire   [0:0] OUT_r_BID;
wire   [0:0] OUT_r_BUSER;
wire    ap_block_state12_pp0_stage11_iter0;
reg    ap_sig_ioackin_OUT_r_WREADY;
wire    ap_block_state13_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state13;
wire    ap_block_state14_pp0_stage1_iter1;
wire    ap_CS_iter1_fsm_state14;
wire    ap_block_state15_pp0_stage2_iter1;
wire    ap_CS_iter1_fsm_state15;
wire    ap_block_state16_pp0_stage3_iter1;
wire    ap_CS_iter1_fsm_state16;
wire    ap_block_state17_pp0_stage4_iter1;
wire    ap_CS_iter1_fsm_state17;
wire    ap_block_state18_pp0_stage5_iter1;
wire    ap_CS_iter1_fsm_state18;
wire    ap_block_state19_pp0_stage6_iter1;
wire    ap_block_state20_pp0_stage7_iter1;
wire    ap_block_state21_pp0_stage8_iter1;
wire    ap_block_state22_pp0_stage9_iter1;
reg    ap_block_state23_pp0_stage10_iter1;
wire    ap_CS_iter1_fsm_state23;
reg   [4:0] SBUS_data_address0;
reg    SBUS_data_ce0;
wire   [7:0] SBUS_data_q0;
reg   [10:0] channels_0;
reg   [10:0] channels_1;
reg   [10:0] channels_2;
reg   [10:0] channels_3;
reg   [10:0] channels_4;
reg   [10:0] channels_5;
reg   [31:0] lost;
reg   [31:0] errors;
reg    OUT_r_blk_n_AW;
wire    ap_CS_iter0_fsm_state11;
reg    OUT_r_blk_n_W;
reg    OUT_r_blk_n_B;
reg   [7:0] reg_396;
wire    ap_CS_iter0_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_CS_iter0_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_sig_ioackin_OUT_r_AWREADY;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_CS_iter0_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire   [0:0] tmp_fu_400_p2;
reg   [0:0] tmp_reg_1660;
reg   [7:0] SBUS_data_load_2_reg_1670;
wire    ap_CS_iter0_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
reg   [7:0] SBUS_data_load_3_reg_1681;
wire    ap_CS_iter0_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_CS_iter0_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
wire   [0:0] or_cond_fu_412_p2;
reg   [0:0] or_cond_reg_1697;
reg   [0:0] or_cond_reg_1697_pp0_iter0_reg;
reg   [1:0] tmp_8_reg_1701;
wire   [24:0] r_V_fu_519_p2;
reg   [24:0] r_V_reg_1711;
wire   [24:0] r_V_1_fu_575_p2;
reg   [24:0] r_V_1_reg_1716;
wire    ap_CS_iter0_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
reg   [6:0] tmp_14_reg_1726;
reg   [24:0] tmp_33_reg_1731;
reg   [0:0] tmp_34_reg_1736;
reg   [25:0] tmp_45_reg_1742;
reg   [0:0] tmp_48_reg_1747;
wire    ap_CS_iter0_fsm_state9;
wire    ap_block_state9_pp0_stage8_iter0;
reg   [3:0] tmp_17_reg_1758;
wire   [76:0] mul1_fu_734_p2;
reg   [76:0] mul1_reg_1763;
reg   [14:0] tmp_36_reg_1768;
wire   [24:0] r_V_2_fu_817_p2;
reg   [24:0] r_V_2_reg_1778;
wire    ap_CS_iter0_fsm_state10;
wire    ap_block_state10_pp0_stage9_iter0;
reg   [0:0] tmp_20_reg_1788;
wire  signed [14:0] p_v_v_fu_863_p3;
reg  signed [14:0] p_v_v_reg_1793;
wire   [78:0] grp_fu_761_p2;
reg   [78:0] mul2_reg_1799;
reg   [15:0] tmp_50_reg_1804;
reg   [25:0] tmp_53_reg_1810;
reg   [0:0] tmp_54_reg_1815;
reg   [0:0] tmp_54_reg_1815_pp0_iter0_reg;
wire   [24:0] r_V_3_fu_960_p2;
reg   [24:0] r_V_3_reg_1821;
wire   [15:0] tmp_40_fu_978_p3;
reg   [15:0] tmp_40_reg_1831;
wire   [15:0] p_Val2_8_i_fu_1018_p2;
reg   [15:0] p_Val2_8_i_reg_1836;
reg   [15:0] p_Val2_8_i_reg_1836_pp0_iter0_reg;
reg   [25:0] tmp_59_reg_1846;
reg   [0:0] tmp_60_reg_1851;
reg   [0:0] tmp_60_reg_1851_pp0_iter0_reg;
wire   [24:0] r_V_4_fu_1122_p2;
reg   [24:0] r_V_4_reg_1857;
wire   [78:0] grp_fu_1035_p2;
reg   [78:0] mul4_reg_1867;
reg   [15:0] tmp_56_reg_1872;
reg   [24:0] tmp_65_reg_1883;
reg   [0:0] tmp_66_reg_1888;
reg   [0:0] tmp_27_reg_1894;
wire   [15:0] p_Val2_8_i1_fu_1270_p2;
reg   [15:0] p_Val2_8_i1_reg_1898;
wire   [78:0] grp_fu_1192_p2;
reg   [78:0] mul5_reg_1903;
reg   [15:0] tmp_62_reg_1908;
wire   [76:0] mul3_fu_1297_p2;
reg   [76:0] mul3_reg_1914;
wire   [24:0] r_V_5_fu_1353_p2;
reg   [24:0] r_V_5_reg_1921;
wire   [15:0] p_Val2_8_i2_fu_1392_p2;
reg   [15:0] p_Val2_8_i2_reg_1926;
reg   [24:0] tmp_70_reg_1931;
reg   [0:0] tmp_71_reg_1936;
wire   [0:0] icmp_fu_1492_p2;
reg   [0:0] icmp_reg_1942;
wire   [76:0] mul_fu_1509_p2;
reg   [76:0] mul_reg_1947;
reg   [14:0] tmp_73_reg_1952;
wire   [14:0] tmp_74_fu_1552_p3;
reg   [14:0] tmp_74_reg_1958;
wire   [0:0] icmp1_fu_1580_p2;
reg   [0:0] icmp1_reg_1963;
wire   [1:0] tmp_79_fu_1598_p3;
reg   [1:0] tmp_79_reg_1968;
reg    ap_reg_ioackin_OUT_r_AWREADY;
reg    ap_reg_ioackin_OUT_r_WREADY;
wire   [15:0] tmp_44_cast_fu_1565_p1;
wire   [15:0] tmp_46_cast_fu_1613_p1;
wire   [10:0] tmp_2_fu_420_p3;
wire   [10:0] tmp_6_fu_446_p3;
wire   [10:0] tmp_13_fu_610_p3;
wire   [10:0] tmp_16_fu_700_p3;
wire   [10:0] tmp_19_fu_827_p3;
wire   [10:0] tmp_26_fu_1157_p3;
wire   [31:0] tmp_28_fu_1638_p2;
wire   [31:0] tmp_s_fu_1622_p2;
wire   [0:0] tmp_9_fu_406_p2;
wire   [2:0] tmp_1_fu_417_p1;
wire   [5:0] tmp_3_fu_443_p1;
wire   [4:0] tmp_7_fu_434_p4;
wire   [0:0] tmp_29_fu_473_p2;
wire   [0:0] tmp_30_fu_479_p2;
wire   [0:0] tmp_31_fu_485_p2;
wire   [10:0] tmp_32_cast_fu_491_p3;
wire   [10:0] tmp_32_fu_499_p3;
wire   [23:0] p_Val2_s_fu_507_p3;
wire   [24:0] tmp_9_i_cast_fu_515_p1;
wire   [0:0] tmp_117_1_fu_529_p2;
wire   [0:0] tmp_120_1_fu_535_p2;
wire   [0:0] tmp_37_fu_541_p2;
wire   [10:0] tmp_48_cast_fu_547_p3;
wire   [10:0] tmp_42_fu_555_p3;
wire   [23:0] p_Val2_2_fu_563_p3;
wire   [24:0] tmp_9_i1_cast_fu_571_p1;
wire   [7:0] tmp_4_fu_581_p1;
wire   [9:0] tmp_11_fu_596_p3;
wire   [9:0] tmp_5_fu_584_p3;
wire   [0:0] tmp_10_fu_592_p1;
wire   [9:0] tmp_12_fu_604_p2;
wire  signed [32:0] r_V_cast_fu_634_p1;
wire   [32:0] p_Val2_1_fu_641_p0;
wire   [44:0] p_Val2_1_fu_641_p2;
wire  signed [32:0] r_V_1_cast_fu_665_p1;
wire   [32:0] p_Val2_3_fu_672_p0;
wire   [44:0] p_Val2_3_fu_672_p2;
wire   [3:0] tmp_15_fu_696_p1;
wire   [37:0] tmp_2_i_fu_723_p3;
wire  signed [37:0] mul1_fu_734_p0;
wire  signed [38:0] tmp_2_i1_fu_750_p3;
wire   [40:0] grp_fu_761_p1;
wire   [0:0] tmp_117_2_fu_771_p2;
wire   [0:0] tmp_120_2_fu_777_p2;
wire   [0:0] tmp_39_fu_783_p2;
wire   [10:0] tmp_58_cast_fu_789_p3;
wire   [10:0] tmp_52_fu_797_p3;
wire   [23:0] p_Val2_4_fu_805_p3;
wire   [24:0] tmp_9_i2_cast_fu_813_p1;
wire   [6:0] tmp_18_fu_823_p1;
wire   [76:0] neg_mul1_fu_848_p2;
wire   [14:0] tmp_35_fu_853_p4;
wire  signed [32:0] r_V_2_cast_fu_879_p1;
wire   [32:0] p_Val2_5_fu_886_p0;
wire   [44:0] p_Val2_5_fu_886_p2;
wire   [0:0] tmp_117_3_fu_914_p2;
wire   [0:0] tmp_120_3_fu_920_p2;
wire   [0:0] tmp_41_fu_926_p2;
wire   [10:0] tmp_67_cast_fu_932_p3;
wire   [10:0] tmp_58_fu_940_p3;
wire   [23:0] p_Val2_6_fu_948_p3;
wire   [24:0] tmp_9_i3_cast_fu_956_p1;
wire  signed [15:0] trunc1_fu_966_p1;
wire   [15:0] neg_ti1_fu_969_p2;
wire  signed [15:0] tmp_38_fu_975_p1;
wire   [78:0] neg_mul2_fu_985_p2;
wire   [15:0] tmp_49_fu_990_p4;
wire   [15:0] p_v1_v_fu_1000_p3;
wire   [15:0] neg_ti2_fu_1006_p2;
wire   [15:0] tmp_51_fu_1012_p3;
wire  signed [38:0] tmp_2_i2_fu_1024_p3;
wire   [40:0] grp_fu_1035_p1;
wire  signed [32:0] r_V_3_cast_fu_1041_p1;
wire   [32:0] p_Val2_7_fu_1048_p0;
wire   [44:0] p_Val2_7_fu_1048_p2;
wire   [0:0] tmp_119_4_fu_1076_p2;
wire   [0:0] tmp_121_4_fu_1082_p2;
wire   [0:0] tmp_43_fu_1088_p2;
wire   [10:0] tmp_77_cast_fu_1094_p3;
wire   [10:0] tmp_64_fu_1102_p3;
wire   [23:0] p_Val2_8_fu_1110_p3;
wire   [24:0] tmp_9_i4_cast_fu_1118_p1;
wire   [7:0] tmp_21_fu_1128_p1;
wire   [8:0] tmp_24_fu_1143_p3;
wire   [8:0] tmp_22_fu_1131_p3;
wire   [1:0] tmp_23_fu_1139_p1;
wire   [8:0] tmp_25_fu_1151_p2;
wire  signed [38:0] tmp_2_i3_fu_1181_p3;
wire   [40:0] grp_fu_1192_p1;
wire  signed [32:0] r_V_4_cast_fu_1198_p1;
wire   [32:0] p_Val2_9_fu_1205_p0;
wire   [44:0] p_Val2_9_fu_1205_p2;
wire   [78:0] neg_mul3_fu_1237_p2;
wire   [15:0] tmp_55_fu_1242_p4;
wire   [15:0] p_v2_v_fu_1252_p3;
wire   [15:0] neg_ti3_fu_1258_p2;
wire   [15:0] tmp_57_fu_1264_p3;
wire   [37:0] tmp_2_i4_fu_1286_p3;
wire  signed [37:0] mul3_fu_1297_p0;
wire   [0:0] tmp_119_5_fu_1307_p2;
wire   [0:0] tmp_121_5_fu_1313_p2;
wire   [0:0] tmp_47_fu_1319_p2;
wire   [10:0] tmp_87_cast_fu_1325_p3;
wire   [10:0] tmp_69_fu_1333_p3;
wire   [23:0] p_Val2_10_fu_1341_p3;
wire   [24:0] tmp_9_i5_cast_fu_1349_p1;
wire   [78:0] neg_mul5_fu_1359_p2;
wire   [15:0] tmp_61_fu_1364_p4;
wire   [15:0] p_v3_v_fu_1374_p3;
wire   [15:0] neg_ti4_fu_1380_p2;
wire   [15:0] tmp_63_fu_1386_p3;
wire   [76:0] neg_mul4_fu_1398_p2;
wire   [14:0] tmp_67_fu_1403_p4;
wire   [14:0] tmp_68_fu_1413_p4;
wire   [14:0] p_v4_v_fu_1422_p3;
wire  signed [32:0] r_V_5_cast_fu_1435_p1;
wire   [32:0] p_Val2_11_fu_1442_p0;
wire   [44:0] p_Val2_11_fu_1442_p2;
wire   [14:0] neg_ti9_fu_1429_p2;
wire   [2:0] tmp_75_fu_1466_p4;
wire   [2:0] tmp_76_fu_1476_p4;
wire   [2:0] tmp_77_fu_1485_p3;
wire   [37:0] tmp_2_i5_fu_1498_p3;
wire  signed [37:0] mul_fu_1509_p0;
wire   [76:0] neg_mul_fu_1525_p2;
wire   [14:0] tmp_72_fu_1530_p4;
wire   [14:0] p_v5_v_fu_1540_p3;
wire   [14:0] neg_ti_fu_1546_p2;
wire   [13:0] tmp_44_fu_1558_p3;
wire   [3:0] tmp_78_fu_1570_p4;
wire   [0:0] tmp_1_i6_fu_1586_p2;
wire   [1:0] tmp_96_cast_fu_1591_p3;
wire   [14:0] tmp_46_fu_1606_p3;
reg    grp_fu_761_ce;
reg    grp_fu_1035_ce;
reg    grp_fu_1192_ce;
reg   [11:0] ap_NS_iter0_fsm;
reg   [11:0] ap_NS_iter1_fsm;
wire   [44:0] p_Val2_11_fu_1442_p00;
wire   [44:0] p_Val2_1_fu_641_p00;
wire   [44:0] p_Val2_3_fu_672_p00;
wire   [44:0] p_Val2_5_fu_886_p00;
wire   [44:0] p_Val2_7_fu_1048_p00;
wire   [44:0] p_Val2_9_fu_1205_p00;
reg    ap_condition_591;
reg    ap_condition_1430;
reg    ap_condition_354;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 12'd1;
#0 ap_CS_iter1_fsm = 12'd1;
#0 channels_0 = 11'd0;
#0 channels_1 = 11'd0;
#0 channels_2 = 11'd0;
#0 channels_3 = 11'd0;
#0 channels_4 = 11'd0;
#0 channels_5 = 11'd0;
#0 lost = 32'd0;
#0 errors = 32'd0;
#0 ap_reg_ioackin_OUT_r_AWREADY = 1'b0;
#0 ap_reg_ioackin_OUT_r_WREADY = 1'b0;
end

rcReceiver_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
rcReceiver_CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .SBUS_data_address0(SBUS_data_address0),
    .SBUS_data_ce0(SBUS_data_ce0),
    .SBUS_data_q0(SBUS_data_q0)
);

rcReceiver_OUT_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUT_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUT_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUT_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUT_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUT_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUT_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUT_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUT_R_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_OUT_R_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_OUT_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUT_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUT_R_CACHE_VALUE ))
rcReceiver_OUT_r_m_axi_U(
    .AWVALID(m_axi_OUT_r_AWVALID),
    .AWREADY(m_axi_OUT_r_AWREADY),
    .AWADDR(m_axi_OUT_r_AWADDR),
    .AWID(m_axi_OUT_r_AWID),
    .AWLEN(m_axi_OUT_r_AWLEN),
    .AWSIZE(m_axi_OUT_r_AWSIZE),
    .AWBURST(m_axi_OUT_r_AWBURST),
    .AWLOCK(m_axi_OUT_r_AWLOCK),
    .AWCACHE(m_axi_OUT_r_AWCACHE),
    .AWPROT(m_axi_OUT_r_AWPROT),
    .AWQOS(m_axi_OUT_r_AWQOS),
    .AWREGION(m_axi_OUT_r_AWREGION),
    .AWUSER(m_axi_OUT_r_AWUSER),
    .WVALID(m_axi_OUT_r_WVALID),
    .WREADY(m_axi_OUT_r_WREADY),
    .WDATA(m_axi_OUT_r_WDATA),
    .WSTRB(m_axi_OUT_r_WSTRB),
    .WLAST(m_axi_OUT_r_WLAST),
    .WID(m_axi_OUT_r_WID),
    .WUSER(m_axi_OUT_r_WUSER),
    .ARVALID(m_axi_OUT_r_ARVALID),
    .ARREADY(m_axi_OUT_r_ARREADY),
    .ARADDR(m_axi_OUT_r_ARADDR),
    .ARID(m_axi_OUT_r_ARID),
    .ARLEN(m_axi_OUT_r_ARLEN),
    .ARSIZE(m_axi_OUT_r_ARSIZE),
    .ARBURST(m_axi_OUT_r_ARBURST),
    .ARLOCK(m_axi_OUT_r_ARLOCK),
    .ARCACHE(m_axi_OUT_r_ARCACHE),
    .ARPROT(m_axi_OUT_r_ARPROT),
    .ARQOS(m_axi_OUT_r_ARQOS),
    .ARREGION(m_axi_OUT_r_ARREGION),
    .ARUSER(m_axi_OUT_r_ARUSER),
    .RVALID(m_axi_OUT_r_RVALID),
    .RREADY(m_axi_OUT_r_RREADY),
    .RDATA(m_axi_OUT_r_RDATA),
    .RLAST(m_axi_OUT_r_RLAST),
    .RID(m_axi_OUT_r_RID),
    .RUSER(m_axi_OUT_r_RUSER),
    .RRESP(m_axi_OUT_r_RRESP),
    .BVALID(m_axi_OUT_r_BVALID),
    .BREADY(m_axi_OUT_r_BREADY),
    .BRESP(m_axi_OUT_r_BRESP),
    .BID(m_axi_OUT_r_BID),
    .BUSER(m_axi_OUT_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(OUT_r_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(OUT_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(OUT_r_RDATA),
    .I_RID(OUT_r_RID),
    .I_RUSER(OUT_r_RUSER),
    .I_RRESP(OUT_r_RRESP),
    .I_RLAST(OUT_r_RLAST),
    .I_AWVALID(OUT_r_AWVALID),
    .I_AWREADY(OUT_r_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd6),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(OUT_r_WVALID),
    .I_WREADY(OUT_r_WREADY),
    .I_WDATA(OUT_r_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(OUT_r_BVALID),
    .I_BREADY(OUT_r_BREADY),
    .I_BRESP(OUT_r_BRESP),
    .I_BID(OUT_r_BID),
    .I_BUSER(OUT_r_BUSER)
);

rcReceiver_mul_39bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 39 ),
    .din1_WIDTH( 41 ),
    .dout_WIDTH( 79 ))
rcReceiver_mul_39bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_2_i1_fu_750_p3),
    .din1(grp_fu_761_p1),
    .ce(grp_fu_761_ce),
    .dout(grp_fu_761_p2)
);

rcReceiver_mul_39bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 39 ),
    .din1_WIDTH( 41 ),
    .dout_WIDTH( 79 ))
rcReceiver_mul_39bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_2_i2_fu_1024_p3),
    .din1(grp_fu_1035_p1),
    .ce(grp_fu_1035_ce),
    .dout(grp_fu_1035_p2)
);

rcReceiver_mul_39bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 39 ),
    .din1_WIDTH( 41 ),
    .dout_WIDTH( 79 ))
rcReceiver_mul_39bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_2_i3_fu_1181_p3),
    .din1(grp_fu_1192_p1),
    .ce(grp_fu_1192_ce),
    .dout(grp_fu_1192_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_OUT_r_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_iter0_fsm_state11)) begin
            if ((1'b1 == ap_condition_354)) begin
                ap_reg_ioackin_OUT_r_AWREADY <= 1'b0;
            end else if ((1'b1 == ap_condition_1430)) begin
                ap_reg_ioackin_OUT_r_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_OUT_r_WREADY <= 1'b0;
    end else begin
        if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state12)) | ((1'b1 == ap_CS_iter1_fsm_state18) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1)) | ((1'b1 == ap_CS_iter1_fsm_state16) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1)) | ((1'b1 == ap_CS_iter1_fsm_state15) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1)) | ((1'b1 == ap_CS_iter1_fsm_state14) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1)) | ((1'b1 == ap_CS_iter1_fsm_state13) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1)))) begin
            ap_reg_ioackin_OUT_r_WREADY <= 1'b0;
        end else if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state12)) | ((1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter1_fsm_state13)))) begin
            ap_reg_ioackin_OUT_r_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        SBUS_data_load_2_reg_1670 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        SBUS_data_load_3_reg_1681 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (or_cond_fu_412_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        channels_0 <= tmp_2_fu_420_p3;
        channels_1 <= tmp_6_fu_446_p3;
        tmp_8_reg_1701 <= {{SBUS_data_load_3_reg_1681[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (or_cond_reg_1697 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        channels_2 <= tmp_13_fu_610_p3;
        tmp_14_reg_1726 <= {{SBUS_data_q0[7:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (or_cond_reg_1697 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
        channels_3 <= tmp_16_fu_700_p3;
        tmp_17_reg_1758 <= {{SBUS_data_q0[7:4]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (or_cond_reg_1697 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
        channels_4 <= tmp_19_fu_827_p3;
        tmp_20_reg_1788 <= SBUS_data_q0[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (or_cond_reg_1697 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
        channels_5 <= tmp_26_fu_1157_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1697_pp0_iter0_reg == 1'd0) & (1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID))) begin
        errors <= tmp_s_fu_1622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_iter1_fsm_state16) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1))) begin
        icmp1_reg_1963 <= icmp1_fu_1580_p2;
        tmp_74_reg_1958 <= tmp_74_fu_1552_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_iter1_fsm_state14) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1))) begin
        icmp_reg_1942 <= icmp_fu_1492_p2;
        p_Val2_8_i2_reg_1926 <= p_Val2_8_i2_fu_1392_p2;
        tmp_70_reg_1931 <= {{p_Val2_11_fu_1442_p2[37:13]}};
        tmp_71_reg_1936 <= p_Val2_11_fu_1442_p2[32'd37];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_27_reg_1894 == 1'd1) & (or_cond_reg_1697_pp0_iter0_reg == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID))) begin
        lost <= tmp_28_fu_1638_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
        mul1_reg_1763[76 : 13] <= mul1_fu_734_p2[76 : 13];
        r_V_2_reg_1778[24 : 13] <= r_V_2_fu_817_p2[24 : 13];
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
        mul2_reg_1799 <= grp_fu_761_p2;
        p_v_v_reg_1793 <= p_v_v_fu_863_p3;
        r_V_3_reg_1821[24 : 13] <= r_V_3_fu_960_p2[24 : 13];
        tmp_50_reg_1804 <= {{grp_fu_761_p2[78:63]}};
        tmp_53_reg_1810 <= {{p_Val2_5_fu_886_p2[38:13]}};
        tmp_54_reg_1815 <= p_Val2_5_fu_886_p2[32'd38];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_iter1_fsm_state13) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1))) begin
        mul3_reg_1914[76 : 13] <= mul3_fu_1297_p2[76 : 13];
        mul5_reg_1903 <= grp_fu_1192_p2;
        p_Val2_8_i1_reg_1898 <= p_Val2_8_i1_fu_1270_p2;
        r_V_5_reg_1921[24 : 13] <= r_V_5_fu_1353_p2[24 : 13];
        tmp_62_reg_1908 <= {{grp_fu_1192_p2[78:63]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
        mul4_reg_1867 <= grp_fu_1035_p2;
        or_cond_reg_1697_pp0_iter0_reg <= or_cond_reg_1697;
        p_Val2_8_i_reg_1836_pp0_iter0_reg <= p_Val2_8_i_reg_1836;
        tmp_54_reg_1815_pp0_iter0_reg <= tmp_54_reg_1815;
        tmp_56_reg_1872 <= {{grp_fu_1035_p2[78:63]}};
        tmp_60_reg_1851_pp0_iter0_reg <= tmp_60_reg_1851;
        tmp_65_reg_1883 <= {{p_Val2_9_fu_1205_p2[37:13]}};
        tmp_66_reg_1888 <= p_Val2_9_fu_1205_p2[32'd37];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_iter1_fsm_state15) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1))) begin
        mul_reg_1947[76 : 13] <= mul_fu_1509_p2[76 : 13];
        tmp_73_reg_1952 <= {{mul_fu_1509_p2[76:62]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        or_cond_reg_1697 <= or_cond_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
        p_Val2_8_i_reg_1836 <= p_Val2_8_i_fu_1018_p2;
        r_V_4_reg_1857[24 : 13] <= r_V_4_fu_1122_p2[24 : 13];
        tmp_40_reg_1831 <= tmp_40_fu_978_p3;
        tmp_59_reg_1846 <= {{p_Val2_7_fu_1048_p2[38:13]}};
        tmp_60_reg_1851 <= p_Val2_7_fu_1048_p2[32'd38];
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
        r_V_1_reg_1716[24 : 13] <= r_V_1_fu_575_p2[24 : 13];
        r_V_reg_1711[24 : 13] <= r_V_fu_519_p2[24 : 13];
    end
end

always @ (posedge ap_clk) begin
    if (((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state7)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state11)))) begin
        reg_396 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1697_pp0_iter0_reg == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state13) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1))) begin
        tmp_27_reg_1894 <= SBUS_data_q0[32'd2];
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        tmp_33_reg_1731 <= {{p_Val2_1_fu_641_p2[37:13]}};
        tmp_34_reg_1736 <= p_Val2_1_fu_641_p2[32'd37];
        tmp_45_reg_1742 <= {{p_Val2_3_fu_672_p2[38:13]}};
        tmp_48_reg_1747 <= p_Val2_3_fu_672_p2[32'd38];
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (tmp_34_reg_1736 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
        tmp_36_reg_1768 <= {{mul1_fu_734_p2[76:62]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_iter1_fsm_state17)) begin
        tmp_79_reg_1968 <= tmp_79_fu_1598_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        tmp_reg_1660 <= tmp_fu_400_p2;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23))) & (ap_reg_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
        OUT_r_AWVALID = 1'b1;
    end else begin
        OUT_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID))) begin
        OUT_r_BREADY = 1'b1;
    end else begin
        OUT_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_OUT_r_WREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_iter1_fsm_state18)) begin
            OUT_r_WDATA = tmp_46_cast_fu_1613_p1;
        end else if ((1'b1 == ap_CS_iter1_fsm_state16)) begin
            OUT_r_WDATA = tmp_44_cast_fu_1565_p1;
        end else if ((1'b1 == ap_CS_iter1_fsm_state15)) begin
            OUT_r_WDATA = p_Val2_8_i2_reg_1926;
        end else if ((1'b1 == ap_CS_iter1_fsm_state14)) begin
            OUT_r_WDATA = p_Val2_8_i1_reg_1898;
        end else if ((1'b1 == ap_CS_iter1_fsm_state13)) begin
            OUT_r_WDATA = p_Val2_8_i_reg_1836_pp0_iter0_reg;
        end else if ((1'b1 == ap_condition_591)) begin
            OUT_r_WDATA = tmp_40_reg_1831;
        end else begin
            OUT_r_WDATA = 'bx;
        end
    end else begin
        OUT_r_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state12)) | ((ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13)))) begin
        OUT_r_WVALID = 1'b1;
    end else begin
        OUT_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state11)) begin
        OUT_r_blk_n_AW = m_axi_OUT_r_AWREADY;
    end else begin
        OUT_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter1_fsm_state23)) begin
        OUT_r_blk_n_B = m_axi_OUT_r_BVALID;
    end else begin
        OUT_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state12) | (1'b1 == ap_CS_iter1_fsm_state18) | (1'b1 == ap_CS_iter1_fsm_state16) | (1'b1 == ap_CS_iter1_fsm_state15) | (1'b1 == ap_CS_iter1_fsm_state14) | (1'b1 == ap_CS_iter1_fsm_state13))) begin
        OUT_r_blk_n_W = m_axi_OUT_r_WREADY;
    end else begin
        OUT_r_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state12)) begin
        SBUS_data_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_iter0_fsm_state11)) begin
        SBUS_data_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_iter0_fsm_state10)) begin
        SBUS_data_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_iter0_fsm_state9)) begin
        SBUS_data_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_iter0_fsm_state8)) begin
        SBUS_data_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_iter0_fsm_state7)) begin
        SBUS_data_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        SBUS_data_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        SBUS_data_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        SBUS_data_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_iter0_fsm_state3)) begin
        SBUS_data_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_iter0_fsm_state2)) begin
        SBUS_data_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        SBUS_data_address0 = 64'd0;
    end else begin
        SBUS_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state12)) | (~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state9)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state8)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state7)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state11)))) begin
        SBUS_data_ce0 = 1'b1;
    end else begin
        SBUS_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_OUT_r_AWREADY == 1'b0)) begin
        ap_sig_ioackin_OUT_r_AWREADY = OUT_r_AWREADY;
    end else begin
        ap_sig_ioackin_OUT_r_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_OUT_r_WREADY == 1'b0)) begin
        ap_sig_ioackin_OUT_r_WREADY = OUT_r_WREADY;
    end else begin
        ap_sig_ioackin_OUT_r_WREADY = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state12)) | (~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state11)))) begin
        grp_fu_1035_ce = 1'b1;
    end else begin
        grp_fu_1035_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state12)) | ((1'b1 == ap_CS_iter1_fsm_state13) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1)))) begin
        grp_fu_1192_ce = 1'b1;
    end else begin
        grp_fu_1192_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state9)))) begin
        grp_fu_761_ce = 1'b1;
    end else begin
        grp_fu_761_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end
        end
        ap_ST_iter0_fsm_state2 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end
        end
        ap_ST_iter0_fsm_state3 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end
        end
        ap_ST_iter0_fsm_state4 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end
        end
        ap_ST_iter0_fsm_state5 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end
        end
        ap_ST_iter0_fsm_state6 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end
        end
        ap_ST_iter0_fsm_state7 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end
        end
        ap_ST_iter0_fsm_state8 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end
        end
        ap_ST_iter0_fsm_state9 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end
        end
        ap_ST_iter0_fsm_state10 : begin
            if ((~(((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end
        end
        ap_ST_iter0_fsm_state11 : begin
            if ((~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end
        end
        ap_ST_iter0_fsm_state12 : begin
            if (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13)))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state13 : begin
            if (((1'b1 == ap_CS_iter1_fsm_state13) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state14;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state13;
            end
        end
        ap_ST_iter1_fsm_state14 : begin
            if (((1'b1 == ap_CS_iter1_fsm_state14) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state15;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state14;
            end
        end
        ap_ST_iter1_fsm_state15 : begin
            if (((1'b1 == ap_CS_iter1_fsm_state15) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state16;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state15;
            end
        end
        ap_ST_iter1_fsm_state16 : begin
            if (((1'b1 == ap_CS_iter1_fsm_state16) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state17;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state16;
            end
        end
        ap_ST_iter1_fsm_state17 : begin
            ap_NS_iter1_fsm = ap_ST_iter1_fsm_state18;
        end
        ap_ST_iter1_fsm_state18 : begin
            if (((1'b1 == ap_CS_iter1_fsm_state18) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state19;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state18;
            end
        end
        ap_ST_iter1_fsm_state19 : begin
            ap_NS_iter1_fsm = ap_ST_iter1_fsm_state20;
        end
        ap_ST_iter1_fsm_state20 : begin
            ap_NS_iter1_fsm = ap_ST_iter1_fsm_state21;
        end
        ap_ST_iter1_fsm_state21 : begin
            ap_NS_iter1_fsm = ap_ST_iter1_fsm_state22;
        end
        ap_ST_iter1_fsm_state22 : begin
            ap_NS_iter1_fsm = ap_ST_iter1_fsm_state23;
        end
        ap_ST_iter1_fsm_state23 : begin
            if (((1'b1 == ap_CS_iter0_fsm_state12) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1) & (1'b1 == OUT_r_BVALID))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state13;
            end else if (((1'b1 == OUT_r_BVALID) & ((1'b0 == ap_CS_iter0_fsm_state12) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state12))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state23;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13))) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state13;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter0_fsm_state10 = ap_CS_iter0_fsm[32'd9];

assign ap_CS_iter0_fsm_state11 = ap_CS_iter0_fsm[32'd10];

assign ap_CS_iter0_fsm_state12 = ap_CS_iter0_fsm[32'd11];

assign ap_CS_iter0_fsm_state2 = ap_CS_iter0_fsm[32'd1];

assign ap_CS_iter0_fsm_state3 = ap_CS_iter0_fsm[32'd2];

assign ap_CS_iter0_fsm_state4 = ap_CS_iter0_fsm[32'd3];

assign ap_CS_iter0_fsm_state5 = ap_CS_iter0_fsm[32'd4];

assign ap_CS_iter0_fsm_state6 = ap_CS_iter0_fsm[32'd5];

assign ap_CS_iter0_fsm_state7 = ap_CS_iter0_fsm[32'd6];

assign ap_CS_iter0_fsm_state8 = ap_CS_iter0_fsm[32'd7];

assign ap_CS_iter0_fsm_state9 = ap_CS_iter0_fsm[32'd8];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state13 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter1_fsm_state14 = ap_CS_iter1_fsm[32'd2];

assign ap_CS_iter1_fsm_state15 = ap_CS_iter1_fsm[32'd3];

assign ap_CS_iter1_fsm_state16 = ap_CS_iter1_fsm[32'd4];

assign ap_CS_iter1_fsm_state17 = ap_CS_iter1_fsm[32'd5];

assign ap_CS_iter1_fsm_state18 = ap_CS_iter1_fsm[32'd6];

assign ap_CS_iter1_fsm_state23 = ap_CS_iter1_fsm[32'd11];

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID));
end

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp0_stage10_iter1 = (1'b0 == OUT_r_BVALID);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1430 = (~(((1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23))) & (1'b1 == OUT_r_AWREADY));
end

always @ (*) begin
    ap_condition_354 = ~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state23) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state18)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state16)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state15)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state14)) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state13)));
end

always @ (*) begin
    ap_condition_591 = (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state23)) & (1'b1 == ap_CS_iter0_fsm_state12));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_1035_p1 = 79'd703687441777;

assign grp_fu_1192_p1 = 79'd703687441777;

assign grp_fu_761_p1 = 79'd703687441777;

assign icmp1_fu_1580_p2 = (($signed(tmp_78_fu_1570_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_fu_1492_p2 = (($signed(tmp_77_fu_1485_p3) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign mul1_fu_734_p0 = tmp_2_i_fu_723_p3;

assign mul1_fu_734_p2 = ($signed(mul1_fu_734_p0) * $signed(77'h51EB851EB9));

assign mul3_fu_1297_p0 = tmp_2_i4_fu_1286_p3;

assign mul3_fu_1297_p2 = ($signed(mul3_fu_1297_p0) * $signed(77'h51EB851EB9));

assign mul_fu_1509_p0 = tmp_2_i5_fu_1498_p3;

assign mul_fu_1509_p2 = ($signed(mul_fu_1509_p0) * $signed(77'h51EB851EB9));

assign neg_mul1_fu_848_p2 = (77'd0 - mul1_reg_1763);

assign neg_mul2_fu_985_p2 = (79'd0 - mul2_reg_1799);

assign neg_mul3_fu_1237_p2 = (79'd0 - mul4_reg_1867);

assign neg_mul4_fu_1398_p2 = (77'd0 - mul3_reg_1914);

assign neg_mul5_fu_1359_p2 = (79'd0 - mul5_reg_1903);

assign neg_mul_fu_1525_p2 = (77'd0 - mul_reg_1947);

assign neg_ti1_fu_969_p2 = ($signed(16'd0) - $signed(trunc1_fu_966_p1));

assign neg_ti2_fu_1006_p2 = (16'd0 - p_v1_v_fu_1000_p3);

assign neg_ti3_fu_1258_p2 = (16'd0 - p_v2_v_fu_1252_p3);

assign neg_ti4_fu_1380_p2 = (16'd0 - p_v3_v_fu_1374_p3);

assign neg_ti9_fu_1429_p2 = (15'd0 - p_v4_v_fu_1422_p3);

assign neg_ti_fu_1546_p2 = (15'd0 - p_v5_v_fu_1540_p3);

assign or_cond_fu_412_p2 = (tmp_reg_1660 & tmp_9_fu_406_p2);

assign p_Val2_10_fu_1341_p3 = {{tmp_69_fu_1333_p3}, {13'd0}};

assign p_Val2_11_fu_1442_p0 = p_Val2_11_fu_1442_p00;

assign p_Val2_11_fu_1442_p00 = $unsigned(r_V_5_cast_fu_1435_p1);

assign p_Val2_11_fu_1442_p2 = (p_Val2_11_fu_1442_p0 * $signed('h1FF7));

assign p_Val2_1_fu_641_p0 = p_Val2_1_fu_641_p00;

assign p_Val2_1_fu_641_p00 = $unsigned(r_V_cast_fu_634_p1);

assign p_Val2_1_fu_641_p2 = (p_Val2_1_fu_641_p0 * $signed('h1FF7));

assign p_Val2_2_fu_563_p3 = {{tmp_42_fu_555_p3}, {13'd0}};

assign p_Val2_3_fu_672_p0 = p_Val2_3_fu_672_p00;

assign p_Val2_3_fu_672_p00 = $unsigned(r_V_1_cast_fu_665_p1);

assign p_Val2_3_fu_672_p2 = (p_Val2_3_fu_672_p0 * $signed('h3FF7));

assign p_Val2_4_fu_805_p3 = {{tmp_52_fu_797_p3}, {13'd0}};

assign p_Val2_5_fu_886_p0 = p_Val2_5_fu_886_p00;

assign p_Val2_5_fu_886_p00 = $unsigned(r_V_2_cast_fu_879_p1);

assign p_Val2_5_fu_886_p2 = (p_Val2_5_fu_886_p0 * $signed('h3FF7));

assign p_Val2_6_fu_948_p3 = {{tmp_58_fu_940_p3}, {13'd0}};

assign p_Val2_7_fu_1048_p0 = p_Val2_7_fu_1048_p00;

assign p_Val2_7_fu_1048_p00 = $unsigned(r_V_3_cast_fu_1041_p1);

assign p_Val2_7_fu_1048_p2 = (p_Val2_7_fu_1048_p0 * $signed('h3FF7));

assign p_Val2_8_fu_1110_p3 = {{tmp_64_fu_1102_p3}, {13'd0}};

assign p_Val2_8_i1_fu_1270_p2 = ($signed(tmp_57_fu_1264_p3) + $signed(16'd57344));

assign p_Val2_8_i2_fu_1392_p2 = ($signed(tmp_63_fu_1386_p3) + $signed(16'd57344));

assign p_Val2_8_i_fu_1018_p2 = ($signed(tmp_51_fu_1012_p3) + $signed(16'd57344));

assign p_Val2_9_fu_1205_p0 = p_Val2_9_fu_1205_p00;

assign p_Val2_9_fu_1205_p00 = $unsigned(r_V_4_cast_fu_1198_p1);

assign p_Val2_9_fu_1205_p2 = (p_Val2_9_fu_1205_p0 * $signed('h1FF7));

assign p_Val2_s_fu_507_p3 = {{tmp_32_fu_499_p3}, {13'd0}};

assign p_v1_v_fu_1000_p3 = ((tmp_48_reg_1747[0:0] === 1'b1) ? tmp_49_fu_990_p4 : tmp_50_reg_1804);

assign p_v2_v_fu_1252_p3 = ((tmp_54_reg_1815_pp0_iter0_reg[0:0] === 1'b1) ? tmp_55_fu_1242_p4 : tmp_56_reg_1872);

assign p_v3_v_fu_1374_p3 = ((tmp_60_reg_1851_pp0_iter0_reg[0:0] === 1'b1) ? tmp_61_fu_1364_p4 : tmp_62_reg_1908);

assign p_v4_v_fu_1422_p3 = ((tmp_66_reg_1888[0:0] === 1'b1) ? tmp_67_fu_1403_p4 : tmp_68_fu_1413_p4);

assign p_v5_v_fu_1540_p3 = ((tmp_71_reg_1936[0:0] === 1'b1) ? tmp_72_fu_1530_p4 : tmp_73_reg_1952);

assign p_v_v_fu_863_p3 = ((tmp_34_reg_1736[0:0] === 1'b1) ? tmp_35_fu_853_p4 : tmp_36_reg_1768);

assign r_V_1_cast_fu_665_p1 = $signed(r_V_1_reg_1716);

assign r_V_1_fu_575_p2 = ($signed(tmp_9_i1_cast_fu_571_p1) + $signed(25'd31916032));

assign r_V_2_cast_fu_879_p1 = $signed(r_V_2_reg_1778);

assign r_V_2_fu_817_p2 = ($signed(tmp_9_i2_cast_fu_813_p1) + $signed(25'd31916032));

assign r_V_3_cast_fu_1041_p1 = $signed(r_V_3_reg_1821);

assign r_V_3_fu_960_p2 = ($signed(tmp_9_i3_cast_fu_956_p1) + $signed(25'd31916032));

assign r_V_4_cast_fu_1198_p1 = $signed(r_V_4_reg_1857);

assign r_V_4_fu_1122_p2 = ($signed(tmp_9_i4_cast_fu_1118_p1) + $signed(25'd31916032));

assign r_V_5_cast_fu_1435_p1 = $signed(r_V_5_reg_1921);

assign r_V_5_fu_1353_p2 = ($signed(tmp_9_i5_cast_fu_1349_p1) + $signed(25'd31916032));

assign r_V_cast_fu_634_p1 = $signed(r_V_reg_1711);

assign r_V_fu_519_p2 = ($signed(tmp_9_i_cast_fu_515_p1) + $signed(25'd31916032));

assign tmp_10_fu_592_p1 = SBUS_data_q0[0:0];

assign tmp_117_1_fu_529_p2 = ((channels_1 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_117_2_fu_771_p2 = ((channels_2 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_117_3_fu_914_p2 = ((channels_3 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_119_4_fu_1076_p2 = ((channels_4 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_119_5_fu_1307_p2 = ((channels_5 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_11_fu_596_p3 = {{2'd0}, {tmp_4_fu_581_p1}};

assign tmp_120_1_fu_535_p2 = ((channels_1 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_120_2_fu_777_p2 = ((channels_2 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_120_3_fu_920_p2 = ((channels_3 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_121_4_fu_1082_p2 = ((channels_4 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_121_5_fu_1313_p2 = ((channels_5 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_12_fu_604_p2 = (tmp_5_fu_584_p3 | tmp_11_fu_596_p3);

assign tmp_13_fu_610_p3 = {{tmp_10_fu_592_p1}, {tmp_12_fu_604_p2}};

assign tmp_15_fu_696_p1 = SBUS_data_q0[3:0];

assign tmp_16_fu_700_p3 = {{tmp_15_fu_696_p1}, {tmp_14_reg_1726}};

assign tmp_18_fu_823_p1 = SBUS_data_q0[6:0];

assign tmp_19_fu_827_p3 = {{tmp_18_fu_823_p1}, {tmp_17_reg_1758}};

assign tmp_1_fu_417_p1 = SBUS_data_load_2_reg_1670[2:0];

assign tmp_1_i6_fu_1586_p2 = (($signed(tmp_74_reg_1958) < $signed(15'd6144)) ? 1'b1 : 1'b0);

assign tmp_21_fu_1128_p1 = tmp_20_reg_1788;

assign tmp_22_fu_1131_p3 = {{reg_396}, {1'd0}};

assign tmp_23_fu_1139_p1 = SBUS_data_q0[1:0];

assign tmp_24_fu_1143_p3 = {{1'd0}, {tmp_21_fu_1128_p1}};

assign tmp_25_fu_1151_p2 = (tmp_24_fu_1143_p3 | tmp_22_fu_1131_p3);

assign tmp_26_fu_1157_p3 = {{tmp_23_fu_1139_p1}, {tmp_25_fu_1151_p2}};

assign tmp_28_fu_1638_p2 = (lost + 32'd1);

assign tmp_29_fu_473_p2 = ((channels_0 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_2_fu_420_p3 = {{tmp_1_fu_417_p1}, {reg_396}};

assign tmp_2_i1_fu_750_p3 = {{tmp_45_reg_1742}, {13'd0}};

assign tmp_2_i2_fu_1024_p3 = {{tmp_53_reg_1810}, {13'd0}};

assign tmp_2_i3_fu_1181_p3 = {{tmp_59_reg_1846}, {13'd0}};

assign tmp_2_i4_fu_1286_p3 = {{tmp_65_reg_1883}, {13'd0}};

assign tmp_2_i5_fu_1498_p3 = {{tmp_70_reg_1931}, {13'd0}};

assign tmp_2_i_fu_723_p3 = {{tmp_33_reg_1731}, {13'd0}};

assign tmp_30_fu_479_p2 = ((channels_0 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_31_fu_485_p2 = (tmp_30_fu_479_p2 | tmp_29_fu_473_p2);

assign tmp_32_cast_fu_491_p3 = ((tmp_29_fu_473_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign tmp_32_fu_499_p3 = ((tmp_31_fu_485_p2[0:0] === 1'b1) ? tmp_32_cast_fu_491_p3 : channels_0);

assign tmp_35_fu_853_p4 = {{neg_mul1_fu_848_p2[76:62]}};

assign tmp_37_fu_541_p2 = (tmp_120_1_fu_535_p2 | tmp_117_1_fu_529_p2);

assign tmp_38_fu_975_p1 = p_v_v_reg_1793;

assign tmp_39_fu_783_p2 = (tmp_120_2_fu_777_p2 | tmp_117_2_fu_771_p2);

assign tmp_3_fu_443_p1 = SBUS_data_load_3_reg_1681[5:0];

assign tmp_40_fu_978_p3 = ((tmp_34_reg_1736[0:0] === 1'b1) ? neg_ti1_fu_969_p2 : tmp_38_fu_975_p1);

assign tmp_41_fu_926_p2 = (tmp_120_3_fu_920_p2 | tmp_117_3_fu_914_p2);

assign tmp_42_fu_555_p3 = ((tmp_37_fu_541_p2[0:0] === 1'b1) ? tmp_48_cast_fu_547_p3 : channels_1);

assign tmp_43_fu_1088_p2 = (tmp_121_4_fu_1082_p2 | tmp_119_4_fu_1076_p2);

assign tmp_44_cast_fu_1565_p1 = tmp_44_fu_1558_p3;

assign tmp_44_fu_1558_p3 = {{icmp_reg_1942}, {13'd0}};

assign tmp_46_cast_fu_1613_p1 = tmp_46_fu_1606_p3;

assign tmp_46_fu_1606_p3 = {{tmp_79_reg_1968}, {13'd0}};

assign tmp_47_fu_1319_p2 = (tmp_121_5_fu_1313_p2 | tmp_119_5_fu_1307_p2);

assign tmp_48_cast_fu_547_p3 = ((tmp_117_1_fu_529_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign tmp_49_fu_990_p4 = {{neg_mul2_fu_985_p2[78:63]}};

assign tmp_4_fu_581_p1 = tmp_8_reg_1701;

assign tmp_51_fu_1012_p3 = ((tmp_48_reg_1747[0:0] === 1'b1) ? neg_ti2_fu_1006_p2 : tmp_50_reg_1804);

assign tmp_52_fu_797_p3 = ((tmp_39_fu_783_p2[0:0] === 1'b1) ? tmp_58_cast_fu_789_p3 : channels_2);

assign tmp_55_fu_1242_p4 = {{neg_mul3_fu_1237_p2[78:63]}};

assign tmp_57_fu_1264_p3 = ((tmp_54_reg_1815_pp0_iter0_reg[0:0] === 1'b1) ? neg_ti3_fu_1258_p2 : tmp_56_reg_1872);

assign tmp_58_cast_fu_789_p3 = ((tmp_117_2_fu_771_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign tmp_58_fu_940_p3 = ((tmp_41_fu_926_p2[0:0] === 1'b1) ? tmp_67_cast_fu_932_p3 : channels_3);

assign tmp_5_fu_584_p3 = {{reg_396}, {2'd0}};

assign tmp_61_fu_1364_p4 = {{neg_mul5_fu_1359_p2[78:63]}};

assign tmp_63_fu_1386_p3 = ((tmp_60_reg_1851_pp0_iter0_reg[0:0] === 1'b1) ? neg_ti4_fu_1380_p2 : tmp_62_reg_1908);

assign tmp_64_fu_1102_p3 = ((tmp_43_fu_1088_p2[0:0] === 1'b1) ? tmp_77_cast_fu_1094_p3 : channels_4);

assign tmp_67_cast_fu_932_p3 = ((tmp_117_3_fu_914_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign tmp_67_fu_1403_p4 = {{neg_mul4_fu_1398_p2[76:62]}};

assign tmp_68_fu_1413_p4 = {{mul3_reg_1914[76:62]}};

assign tmp_69_fu_1333_p3 = ((tmp_47_fu_1319_p2[0:0] === 1'b1) ? tmp_87_cast_fu_1325_p3 : channels_5);

assign tmp_6_fu_446_p3 = {{tmp_3_fu_443_p1}, {tmp_7_fu_434_p4}};

assign tmp_72_fu_1530_p4 = {{neg_mul_fu_1525_p2[76:62]}};

assign tmp_74_fu_1552_p3 = ((tmp_71_reg_1936[0:0] === 1'b1) ? neg_ti_fu_1546_p2 : tmp_73_reg_1952);

assign tmp_75_fu_1466_p4 = {{neg_ti9_fu_1429_p2[14:12]}};

assign tmp_76_fu_1476_p4 = {{mul3_reg_1914[76:74]}};

assign tmp_77_cast_fu_1094_p3 = ((tmp_119_4_fu_1076_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign tmp_77_fu_1485_p3 = ((tmp_66_reg_1888[0:0] === 1'b1) ? tmp_75_fu_1466_p4 : tmp_76_fu_1476_p4);

assign tmp_78_fu_1570_p4 = {{tmp_74_fu_1552_p3[14:11]}};

assign tmp_79_fu_1598_p3 = ((tmp_1_i6_fu_1586_p2[0:0] === 1'b1) ? tmp_96_cast_fu_1591_p3 : 2'd2);

assign tmp_7_fu_434_p4 = {{SBUS_data_load_2_reg_1670[7:3]}};

assign tmp_87_cast_fu_1325_p3 = ((tmp_119_5_fu_1307_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign tmp_96_cast_fu_1591_p3 = ((icmp1_reg_1963[0:0] === 1'b1) ? 2'd0 : 2'd1);

assign tmp_9_fu_406_p2 = ((SBUS_data_q0 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_9_i1_cast_fu_571_p1 = p_Val2_2_fu_563_p3;

assign tmp_9_i2_cast_fu_813_p1 = p_Val2_4_fu_805_p3;

assign tmp_9_i3_cast_fu_956_p1 = p_Val2_6_fu_948_p3;

assign tmp_9_i4_cast_fu_1118_p1 = p_Val2_8_fu_1110_p3;

assign tmp_9_i5_cast_fu_1349_p1 = p_Val2_10_fu_1341_p3;

assign tmp_9_i_cast_fu_515_p1 = p_Val2_s_fu_507_p3;

assign tmp_fu_400_p2 = ((SBUS_data_q0 == 8'd15) ? 1'b1 : 1'b0);

assign tmp_s_fu_1622_p2 = (errors + 32'd1);

assign trunc1_fu_966_p1 = p_v_v_reg_1793;

always @ (posedge ap_clk) begin
    r_V_reg_1711[12:0] <= 13'b0000000000000;
    r_V_1_reg_1716[12:0] <= 13'b0000000000000;
    mul1_reg_1763[12:0] <= 13'b0000000000000;
    r_V_2_reg_1778[12:0] <= 13'b0000000000000;
    r_V_3_reg_1821[12:0] <= 13'b0000000000000;
    r_V_4_reg_1857[12:0] <= 13'b0000000000000;
    mul3_reg_1914[12:0] <= 13'b0000000000000;
    r_V_5_reg_1921[12:0] <= 13'b0000000000000;
    mul_reg_1947[12:0] <= 13'b0000000000000;
end

endmodule //rcReceiver
