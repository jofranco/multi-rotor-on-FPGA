// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rcReceiver,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=17.873200,HLS_SYN_LAT=24,HLS_SYN_TPT=23,HLS_SYN_MEM=12,HLS_SYN_DSP=5,HLS_SYN_FF=1259,HLS_SYN_LUT=1916,HLS_VERSION=2018_2}" *)

module rcReceiver (
        ap_clk,
        ap_rst_n,
        m_axi_OUT_r_AWVALID,
        m_axi_OUT_r_AWREADY,
        m_axi_OUT_r_AWADDR,
        m_axi_OUT_r_AWID,
        m_axi_OUT_r_AWLEN,
        m_axi_OUT_r_AWSIZE,
        m_axi_OUT_r_AWBURST,
        m_axi_OUT_r_AWLOCK,
        m_axi_OUT_r_AWCACHE,
        m_axi_OUT_r_AWPROT,
        m_axi_OUT_r_AWQOS,
        m_axi_OUT_r_AWREGION,
        m_axi_OUT_r_AWUSER,
        m_axi_OUT_r_WVALID,
        m_axi_OUT_r_WREADY,
        m_axi_OUT_r_WDATA,
        m_axi_OUT_r_WSTRB,
        m_axi_OUT_r_WLAST,
        m_axi_OUT_r_WID,
        m_axi_OUT_r_WUSER,
        m_axi_OUT_r_ARVALID,
        m_axi_OUT_r_ARREADY,
        m_axi_OUT_r_ARADDR,
        m_axi_OUT_r_ARID,
        m_axi_OUT_r_ARLEN,
        m_axi_OUT_r_ARSIZE,
        m_axi_OUT_r_ARBURST,
        m_axi_OUT_r_ARLOCK,
        m_axi_OUT_r_ARCACHE,
        m_axi_OUT_r_ARPROT,
        m_axi_OUT_r_ARQOS,
        m_axi_OUT_r_ARREGION,
        m_axi_OUT_r_ARUSER,
        m_axi_OUT_r_RVALID,
        m_axi_OUT_r_RREADY,
        m_axi_OUT_r_RDATA,
        m_axi_OUT_r_RLAST,
        m_axi_OUT_r_RID,
        m_axi_OUT_r_RUSER,
        m_axi_OUT_r_RRESP,
        m_axi_OUT_r_BVALID,
        m_axi_OUT_r_BREADY,
        m_axi_OUT_r_BRESP,
        m_axi_OUT_r_BID,
        m_axi_OUT_r_BUSER,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt,
        s_axi_TEST_AWVALID,
        s_axi_TEST_AWREADY,
        s_axi_TEST_AWADDR,
        s_axi_TEST_WVALID,
        s_axi_TEST_WREADY,
        s_axi_TEST_WDATA,
        s_axi_TEST_WSTRB,
        s_axi_TEST_ARVALID,
        s_axi_TEST_ARREADY,
        s_axi_TEST_ARADDR,
        s_axi_TEST_RVALID,
        s_axi_TEST_RREADY,
        s_axi_TEST_RDATA,
        s_axi_TEST_RRESP,
        s_axi_TEST_BVALID,
        s_axi_TEST_BREADY,
        s_axi_TEST_BRESP
);

parameter    ap_ST_iter0_fsm_state1 = 23'd1;
parameter    ap_ST_iter0_fsm_state2 = 23'd2;
parameter    ap_ST_iter0_fsm_state3 = 23'd4;
parameter    ap_ST_iter0_fsm_state4 = 23'd8;
parameter    ap_ST_iter0_fsm_state5 = 23'd16;
parameter    ap_ST_iter0_fsm_state6 = 23'd32;
parameter    ap_ST_iter0_fsm_state7 = 23'd64;
parameter    ap_ST_iter0_fsm_state8 = 23'd128;
parameter    ap_ST_iter0_fsm_state9 = 23'd256;
parameter    ap_ST_iter0_fsm_state10 = 23'd512;
parameter    ap_ST_iter0_fsm_state11 = 23'd1024;
parameter    ap_ST_iter0_fsm_state12 = 23'd2048;
parameter    ap_ST_iter0_fsm_state13 = 23'd4096;
parameter    ap_ST_iter0_fsm_state14 = 23'd8192;
parameter    ap_ST_iter0_fsm_state15 = 23'd16384;
parameter    ap_ST_iter0_fsm_state16 = 23'd32768;
parameter    ap_ST_iter0_fsm_state17 = 23'd65536;
parameter    ap_ST_iter0_fsm_state18 = 23'd131072;
parameter    ap_ST_iter0_fsm_state19 = 23'd262144;
parameter    ap_ST_iter0_fsm_state20 = 23'd524288;
parameter    ap_ST_iter0_fsm_state21 = 23'd1048576;
parameter    ap_ST_iter0_fsm_state22 = 23'd2097152;
parameter    ap_ST_iter0_fsm_state23 = 23'd4194304;
parameter    ap_ST_iter1_fsm_state24 = 3'd2;
parameter    ap_ST_iter1_fsm_state25 = 3'd4;
parameter    ap_ST_iter1_fsm_state0 = 3'd1;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_TEST_DATA_WIDTH = 32;
parameter    C_S_AXI_TEST_ADDR_WIDTH = 15;
parameter    C_M_AXI_OUT_R_ID_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_OUT_R_DATA_WIDTH = 32;
parameter    C_M_AXI_OUT_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_TARGET_ADDR = 0;
parameter    C_M_AXI_OUT_R_USER_VALUE = 0;
parameter    C_M_AXI_OUT_R_PROT_VALUE = 0;
parameter    C_M_AXI_OUT_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_TEST_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUT_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_OUT_r_AWVALID;
input   m_axi_OUT_r_AWREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_AWADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_AWID;
output  [7:0] m_axi_OUT_r_AWLEN;
output  [2:0] m_axi_OUT_r_AWSIZE;
output  [1:0] m_axi_OUT_r_AWBURST;
output  [1:0] m_axi_OUT_r_AWLOCK;
output  [3:0] m_axi_OUT_r_AWCACHE;
output  [2:0] m_axi_OUT_r_AWPROT;
output  [3:0] m_axi_OUT_r_AWQOS;
output  [3:0] m_axi_OUT_r_AWREGION;
output  [C_M_AXI_OUT_R_AWUSER_WIDTH - 1:0] m_axi_OUT_r_AWUSER;
output   m_axi_OUT_r_WVALID;
input   m_axi_OUT_r_WREADY;
output  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_WDATA;
output  [C_M_AXI_OUT_R_WSTRB_WIDTH - 1:0] m_axi_OUT_r_WSTRB;
output   m_axi_OUT_r_WLAST;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_WID;
output  [C_M_AXI_OUT_R_WUSER_WIDTH - 1:0] m_axi_OUT_r_WUSER;
output   m_axi_OUT_r_ARVALID;
input   m_axi_OUT_r_ARREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_ARADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_ARID;
output  [7:0] m_axi_OUT_r_ARLEN;
output  [2:0] m_axi_OUT_r_ARSIZE;
output  [1:0] m_axi_OUT_r_ARBURST;
output  [1:0] m_axi_OUT_r_ARLOCK;
output  [3:0] m_axi_OUT_r_ARCACHE;
output  [2:0] m_axi_OUT_r_ARPROT;
output  [3:0] m_axi_OUT_r_ARQOS;
output  [3:0] m_axi_OUT_r_ARREGION;
output  [C_M_AXI_OUT_R_ARUSER_WIDTH - 1:0] m_axi_OUT_r_ARUSER;
input   m_axi_OUT_r_RVALID;
output   m_axi_OUT_r_RREADY;
input  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_RDATA;
input   m_axi_OUT_r_RLAST;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_RID;
input  [C_M_AXI_OUT_R_RUSER_WIDTH - 1:0] m_axi_OUT_r_RUSER;
input  [1:0] m_axi_OUT_r_RRESP;
input   m_axi_OUT_r_BVALID;
output   m_axi_OUT_r_BREADY;
input  [1:0] m_axi_OUT_r_BRESP;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_BID;
input  [C_M_AXI_OUT_R_BUSER_WIDTH - 1:0] m_axi_OUT_r_BUSER;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;
input   s_axi_TEST_AWVALID;
output   s_axi_TEST_AWREADY;
input  [C_S_AXI_TEST_ADDR_WIDTH - 1:0] s_axi_TEST_AWADDR;
input   s_axi_TEST_WVALID;
output   s_axi_TEST_WREADY;
input  [C_S_AXI_TEST_DATA_WIDTH - 1:0] s_axi_TEST_WDATA;
input  [C_S_AXI_TEST_WSTRB_WIDTH - 1:0] s_axi_TEST_WSTRB;
input   s_axi_TEST_ARVALID;
output   s_axi_TEST_ARREADY;
input  [C_S_AXI_TEST_ADDR_WIDTH - 1:0] s_axi_TEST_ARADDR;
output   s_axi_TEST_RVALID;
input   s_axi_TEST_RREADY;
output  [C_S_AXI_TEST_DATA_WIDTH - 1:0] s_axi_TEST_RDATA;
output  [1:0] s_axi_TEST_RRESP;
output   s_axi_TEST_BVALID;
input   s_axi_TEST_BREADY;
output  [1:0] s_axi_TEST_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
reg   [22:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [2:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg    ap_ready;
wire    ap_CS_iter0_fsm_state23;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_state24_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state24;
reg    OUT_r_AWVALID;
wire    OUT_r_AWREADY;
reg    OUT_r_WVALID;
wire    OUT_r_WREADY;
reg   [15:0] OUT_r_WDATA;
wire    OUT_r_ARREADY;
wire    OUT_r_RVALID;
wire   [15:0] OUT_r_RDATA;
wire    OUT_r_RLAST;
wire   [0:0] OUT_r_RID;
wire   [0:0] OUT_r_RUSER;
wire   [1:0] OUT_r_RRESP;
wire    OUT_r_BVALID;
reg    OUT_r_BREADY;
wire   [1:0] OUT_r_BRESP;
wire   [0:0] OUT_r_BID;
wire   [0:0] OUT_r_BUSER;
reg    ap_block_state25_pp0_stage1_iter1;
wire    ap_CS_iter1_fsm_state25;
reg   [4:0] SBUS_data_address0;
reg    SBUS_data_ce0;
wire   [7:0] SBUS_data_q0;
reg   [11:0] test_V_address0;
reg    test_V_ce0;
reg    test_V_we0;
reg   [31:0] test_V_d0;
reg   [10:0] channels_0;
reg   [10:0] channels_1;
reg   [10:0] channels_2;
reg   [10:0] channels_3;
reg   [10:0] channels_4;
reg   [10:0] channels_5;
reg   [31:0] lost;
reg   [31:0] errors;
reg    OUT_r_blk_n_AW;
wire    ap_CS_iter0_fsm_state14;
reg    OUT_r_blk_n_W;
wire    ap_CS_iter0_fsm_state15;
wire    ap_CS_iter0_fsm_state16;
wire    ap_CS_iter0_fsm_state17;
wire    ap_CS_iter0_fsm_state18;
wire    ap_CS_iter0_fsm_state19;
wire    ap_CS_iter0_fsm_state20;
reg    OUT_r_blk_n_B;
reg   [10:0] p_Val2_11_reg_489;
reg   [10:0] p_Val2_12_reg_499;
reg   [10:0] p_Val2_13_reg_509;
reg   [10:0] p_Val2_14_reg_519;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_CS_iter0_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire   [0:0] tmp_fu_537_p2;
reg   [0:0] tmp_reg_1224;
reg   [7:0] SBUS_data_load_1_reg_1229;
wire    ap_CS_iter0_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
reg   [7:0] SBUS_data_load_2_reg_1239;
wire    ap_CS_iter0_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
reg   [7:0] SBUS_data_load_3_reg_1250;
wire    ap_CS_iter0_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
reg   [7:0] SBUS_data_load_4_reg_1261;
wire    ap_CS_iter0_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
reg   [7:0] SBUS_data_load_5_reg_1271;
wire    ap_CS_iter0_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
reg   [7:0] SBUS_data_load_6_reg_1282;
wire    ap_CS_iter0_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
reg   [7:0] SBUS_data_load_7_reg_1293;
wire    ap_CS_iter0_fsm_state9;
wire    ap_block_state9_pp0_stage8_iter0;
reg   [7:0] SBUS_data_load_8_reg_1304;
wire    ap_CS_iter0_fsm_state10;
wire    ap_block_state10_pp0_stage9_iter0;
reg   [7:0] SBUS_data_load_9_reg_1314;
wire    ap_CS_iter0_fsm_state11;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_CS_iter0_fsm_state12;
wire    ap_block_state12_pp0_stage11_iter0;
wire   [0:0] or_cond_fu_574_p2;
reg   [0:0] or_cond_reg_1359;
reg   [0:0] or_cond_reg_1359_pp0_iter0_reg;
wire   [10:0] tmp_6_fu_608_p3;
wire   [10:0] tmp_12_fu_659_p3;
wire   [10:0] tmp_14_fu_685_p3;
wire   [10:0] tmp_17_fu_711_p3;
wire   [10:0] tmp_25_fu_760_p3;
wire   [10:0] tmp_31_fu_800_p3;
reg   [10:0] tmp_31_reg_1388;
wire   [31:0] tmp_46_cast_fu_816_p1;
reg   [0:0] tmp_38_reg_1398;
wire    ap_CS_iter0_fsm_state13;
wire    ap_block_state13_pp0_stage12_iter0;
reg   [0:0] tmp_38_reg_1398_pp0_iter0_reg;
wire   [10:0] tmp_152_1_fu_855_p3;
reg   [10:0] tmp_152_1_reg_1402;
wire   [31:0] tmp_48_cast_fu_871_p1;
wire   [14:0] grp_scaleRange_fu_529_ap_return;
reg  signed [14:0] p_Val2_8_reg_1417;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_sig_ioackin_OUT_r_AWREADY;
wire   [10:0] tmp_152_2_fu_902_p3;
reg   [10:0] tmp_152_2_reg_1423;
wire   [31:0] tmp_50_cast_fu_918_p1;
reg  signed [14:0] p_Val2_9_reg_1438;
wire    ap_block_state15_pp0_stage14_iter0;
reg    ap_sig_ioackin_OUT_r_WREADY;
wire   [10:0] tmp_152_3_fu_953_p3;
reg   [10:0] tmp_152_3_reg_1444;
wire   [31:0] tmp_52_cast_fu_969_p1;
reg  signed [14:0] p_Val2_s_10_reg_1459;
wire    ap_block_state16_pp0_stage15_iter0;
wire   [10:0] tmp_148_4_fu_1004_p3;
reg   [10:0] tmp_148_4_reg_1465;
wire   [31:0] tmp_54_cast_fu_1020_p1;
reg  signed [14:0] p_Val2_1_reg_1480;
wire    ap_block_state17_pp0_stage16_iter0;
wire   [10:0] tmp_150_5_fu_1055_p3;
reg   [10:0] tmp_150_5_reg_1486;
wire   [31:0] tmp_56_cast_fu_1071_p1;
wire   [0:0] icmp_fu_1090_p2;
reg   [0:0] icmp_reg_1501;
wire    ap_block_state18_pp0_stage17_iter0;
wire  signed [31:0] tmp_45_fu_1096_p1;
wire   [13:0] p_Val2_2_fu_1100_p3;
reg   [13:0] p_Val2_2_reg_1516;
wire    ap_block_state19_pp0_stage18_iter0;
wire   [1:0] tmp_37_fu_1142_p3;
reg   [1:0] tmp_37_reg_1521;
wire  signed [31:0] tmp_46_fu_1150_p1;
wire   [14:0] p_Val2_3_fu_1154_p3;
reg   [14:0] p_Val2_3_reg_1536;
wire    ap_block_state20_pp0_stage19_iter0;
wire  signed [31:0] tmp_47_fu_1166_p1;
wire  signed [31:0] tmp_48_fu_1170_p1;
wire    ap_CS_iter0_fsm_state21;
wire    ap_block_state21_pp0_stage20_iter0;
wire   [31:0] tmp_49_fu_1174_p1;
wire    ap_CS_iter0_fsm_state22;
wire    ap_block_state22_pp0_stage21_iter0;
wire   [31:0] tmp_50_fu_1178_p1;
reg   [10:0] grp_scaleRange_fu_529_x;
reg   [14:0] grp_scaleRange_fu_529_destFrom_V;
reg    grp_scaleRange_fu_529_ap_ce;
wire    ap_block_state13_pp0_stage12_iter0_ignore_call11;
wire    ap_block_state24_pp0_stage0_iter1_ignore_call11;
reg    ap_block_state25_pp0_stage1_iter1_ignore_call11;
reg    ap_block_state14_pp0_stage13_iter0_ignore_call11;
wire    ap_block_state15_pp0_stage14_iter0_ignore_call20;
wire    ap_block_state24_pp0_stage0_iter1_ignore_call20;
reg    ap_block_state25_pp0_stage1_iter1_ignore_call20;
wire    ap_block_state16_pp0_stage15_iter0_ignore_call28;
wire    ap_block_state24_pp0_stage0_iter1_ignore_call28;
reg    ap_block_state25_pp0_stage1_iter1_ignore_call28;
wire    ap_block_state17_pp0_stage16_iter0_ignore_call36;
wire    ap_block_state24_pp0_stage0_iter1_ignore_call36;
reg    ap_block_state25_pp0_stage1_iter1_ignore_call36;
wire    ap_block_state18_pp0_stage17_iter0_ignore_call44;
wire    ap_block_state24_pp0_stage0_iter1_ignore_call44;
reg    ap_block_state25_pp0_stage1_iter1_ignore_call44;
wire    ap_block_state19_pp0_stage18_iter0_ignore_call50;
wire    ap_block_state24_pp0_stage0_iter1_ignore_call50;
reg    ap_block_state25_pp0_stage1_iter1_ignore_call50;
reg   [10:0] ap_phi_mux_p_Val2_s_phi_fu_474_p4;
wire   [10:0] tmp_2_fu_582_p3;
wire   [10:0] ap_phi_reg_pp0_iter0_p_Val2_s_reg_471;
reg   [10:0] ap_phi_reg_pp0_iter0_p_Val2_10_reg_480;
reg   [10:0] ap_phi_reg_pp0_iter0_p_Val2_11_reg_489;
reg   [10:0] ap_phi_reg_pp0_iter0_p_Val2_12_reg_499;
reg   [10:0] ap_phi_reg_pp0_iter0_p_Val2_13_reg_509;
reg   [10:0] ap_phi_reg_pp0_iter0_p_Val2_14_reg_519;
reg    ap_reg_ioackin_OUT_r_AWREADY;
reg    ap_reg_ioackin_OUT_r_WREADY;
wire  signed [15:0] p_Val2_4_fu_923_p1;
wire  signed [15:0] p_Val2_5_fu_974_p1;
wire  signed [15:0] p_Val2_6_fu_1025_p1;
wire  signed [15:0] p_Val2_7_fu_1076_p1;
wire   [15:0] p_Val2_2_cast_fu_1107_p1;
wire   [15:0] p_Val2_3_cast_fu_1161_p1;
wire   [31:0] tmp_26_fu_1202_p2;
wire   [31:0] tmp_s_fu_1186_p2;
wire   [0:0] tmp_9_fu_568_p2;
wire   [2:0] tmp_3_fu_579_p1;
wire   [5:0] tmp_10_fu_605_p1;
wire   [4:0] tmp_7_fu_596_p4;
wire   [1:0] tmp_8_fu_622_p4;
wire   [7:0] tmp_4_fu_631_p1;
wire   [9:0] tmp_1_fu_645_p3;
wire   [9:0] tmp_5_fu_635_p3;
wire   [0:0] tmp_15_fu_642_p1;
wire   [9:0] tmp_11_fu_653_p2;
wire   [3:0] tmp_18_fu_682_p1;
wire   [6:0] tmp_13_fu_673_p4;
wire   [6:0] tmp_20_fu_708_p1;
wire   [3:0] tmp_16_fu_699_p4;
wire   [0:0] tmp_23_fu_725_p3;
wire   [7:0] tmp_19_fu_732_p1;
wire   [8:0] tmp_22_fu_746_p3;
wire   [8:0] tmp_21_fu_736_p3;
wire   [1:0] tmp_27_fu_743_p1;
wire   [8:0] tmp_24_fu_754_p2;
wire   [0:0] tmp_28_fu_774_p2;
wire   [0:0] tmp_29_fu_780_p2;
wire   [0:0] tmp_30_fu_794_p2;
wire   [10:0] p_channels_load_cast_fu_786_p3;
wire   [23:0] tmp_39_fu_808_p3;
wire   [0:0] tmp_143_1_fu_829_p2;
wire   [0:0] tmp_147_1_fu_835_p2;
wire   [0:0] tmp_32_fu_849_p2;
wire   [10:0] p_channels_load_3_1_c_fu_841_p3;
wire   [23:0] tmp_40_fu_863_p3;
wire   [0:0] tmp_143_2_fu_876_p2;
wire   [0:0] tmp_147_2_fu_882_p2;
wire   [0:0] tmp_33_fu_896_p2;
wire   [10:0] p_channels_load_3_2_c_fu_888_p3;
wire   [23:0] tmp_41_fu_910_p3;
wire   [0:0] tmp_143_3_fu_927_p2;
wire   [0:0] tmp_147_3_fu_933_p2;
wire   [0:0] tmp_34_fu_947_p2;
wire   [10:0] p_channels_load_3_3_c_fu_939_p3;
wire   [23:0] tmp_42_fu_961_p3;
wire   [0:0] tmp_138_4_fu_978_p2;
wire   [0:0] tmp_140_4_fu_984_p2;
wire   [0:0] tmp_35_fu_998_p2;
wire   [10:0] p_channels_load_1_4_c_fu_990_p3;
wire   [23:0] tmp_43_fu_1012_p3;
wire   [0:0] tmp_141_5_fu_1029_p2;
wire   [0:0] tmp_146_5_fu_1035_p2;
wire   [0:0] tmp_36_fu_1049_p2;
wire   [10:0] p_channels_load_2_5_c_fu_1041_p3;
wire   [23:0] tmp_44_fu_1063_p3;
wire   [2:0] tmp_52_fu_1080_p4;
wire   [3:0] tmp_53_fu_1112_p4;
wire   [0:0] icmp1_fu_1122_p2;
wire   [0:0] tmp_1_i_fu_1128_p2;
wire   [1:0] tmp_38_cast_fu_1134_p3;
reg   [22:0] ap_NS_iter0_fsm;
reg   [2:0] ap_NS_iter1_fsm;
reg    ap_condition_1163;
reg    ap_condition_460;
reg    ap_condition_1168;
reg    ap_condition_522;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 23'd1;
#0 ap_CS_iter1_fsm = 3'd1;
#0 channels_0 = 11'd0;
#0 channels_1 = 11'd0;
#0 channels_2 = 11'd0;
#0 channels_3 = 11'd0;
#0 channels_4 = 11'd0;
#0 channels_5 = 11'd0;
#0 lost = 32'd0;
#0 errors = 32'd0;
#0 ap_reg_ioackin_OUT_r_AWREADY = 1'b0;
#0 ap_reg_ioackin_OUT_r_WREADY = 1'b0;
end

rcReceiver_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
rcReceiver_CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .SBUS_data_address0(SBUS_data_address0),
    .SBUS_data_ce0(SBUS_data_ce0),
    .SBUS_data_q0(SBUS_data_q0)
);

rcReceiver_TEST_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_TEST_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_TEST_DATA_WIDTH ))
rcReceiver_TEST_s_axi_U(
    .AWVALID(s_axi_TEST_AWVALID),
    .AWREADY(s_axi_TEST_AWREADY),
    .AWADDR(s_axi_TEST_AWADDR),
    .WVALID(s_axi_TEST_WVALID),
    .WREADY(s_axi_TEST_WREADY),
    .WDATA(s_axi_TEST_WDATA),
    .WSTRB(s_axi_TEST_WSTRB),
    .ARVALID(s_axi_TEST_ARVALID),
    .ARREADY(s_axi_TEST_ARREADY),
    .ARADDR(s_axi_TEST_ARADDR),
    .RVALID(s_axi_TEST_RVALID),
    .RREADY(s_axi_TEST_RREADY),
    .RDATA(s_axi_TEST_RDATA),
    .RRESP(s_axi_TEST_RRESP),
    .BVALID(s_axi_TEST_BVALID),
    .BREADY(s_axi_TEST_BREADY),
    .BRESP(s_axi_TEST_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .test_V_address0(test_V_address0),
    .test_V_ce0(test_V_ce0),
    .test_V_we0(test_V_we0),
    .test_V_d0(test_V_d0)
);

rcReceiver_OUT_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUT_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUT_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUT_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUT_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUT_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUT_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUT_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUT_R_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_OUT_R_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_OUT_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUT_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUT_R_CACHE_VALUE ))
rcReceiver_OUT_r_m_axi_U(
    .AWVALID(m_axi_OUT_r_AWVALID),
    .AWREADY(m_axi_OUT_r_AWREADY),
    .AWADDR(m_axi_OUT_r_AWADDR),
    .AWID(m_axi_OUT_r_AWID),
    .AWLEN(m_axi_OUT_r_AWLEN),
    .AWSIZE(m_axi_OUT_r_AWSIZE),
    .AWBURST(m_axi_OUT_r_AWBURST),
    .AWLOCK(m_axi_OUT_r_AWLOCK),
    .AWCACHE(m_axi_OUT_r_AWCACHE),
    .AWPROT(m_axi_OUT_r_AWPROT),
    .AWQOS(m_axi_OUT_r_AWQOS),
    .AWREGION(m_axi_OUT_r_AWREGION),
    .AWUSER(m_axi_OUT_r_AWUSER),
    .WVALID(m_axi_OUT_r_WVALID),
    .WREADY(m_axi_OUT_r_WREADY),
    .WDATA(m_axi_OUT_r_WDATA),
    .WSTRB(m_axi_OUT_r_WSTRB),
    .WLAST(m_axi_OUT_r_WLAST),
    .WID(m_axi_OUT_r_WID),
    .WUSER(m_axi_OUT_r_WUSER),
    .ARVALID(m_axi_OUT_r_ARVALID),
    .ARREADY(m_axi_OUT_r_ARREADY),
    .ARADDR(m_axi_OUT_r_ARADDR),
    .ARID(m_axi_OUT_r_ARID),
    .ARLEN(m_axi_OUT_r_ARLEN),
    .ARSIZE(m_axi_OUT_r_ARSIZE),
    .ARBURST(m_axi_OUT_r_ARBURST),
    .ARLOCK(m_axi_OUT_r_ARLOCK),
    .ARCACHE(m_axi_OUT_r_ARCACHE),
    .ARPROT(m_axi_OUT_r_ARPROT),
    .ARQOS(m_axi_OUT_r_ARQOS),
    .ARREGION(m_axi_OUT_r_ARREGION),
    .ARUSER(m_axi_OUT_r_ARUSER),
    .RVALID(m_axi_OUT_r_RVALID),
    .RREADY(m_axi_OUT_r_RREADY),
    .RDATA(m_axi_OUT_r_RDATA),
    .RLAST(m_axi_OUT_r_RLAST),
    .RID(m_axi_OUT_r_RID),
    .RUSER(m_axi_OUT_r_RUSER),
    .RRESP(m_axi_OUT_r_RRESP),
    .BVALID(m_axi_OUT_r_BVALID),
    .BREADY(m_axi_OUT_r_BREADY),
    .BRESP(m_axi_OUT_r_BRESP),
    .BID(m_axi_OUT_r_BID),
    .BUSER(m_axi_OUT_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(OUT_r_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(OUT_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(OUT_r_RDATA),
    .I_RID(OUT_r_RID),
    .I_RUSER(OUT_r_RUSER),
    .I_RRESP(OUT_r_RRESP),
    .I_RLAST(OUT_r_RLAST),
    .I_AWVALID(OUT_r_AWVALID),
    .I_AWREADY(OUT_r_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd6),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(OUT_r_WVALID),
    .I_WREADY(OUT_r_WREADY),
    .I_WDATA(OUT_r_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(OUT_r_BVALID),
    .I_BREADY(OUT_r_BREADY),
    .I_BRESP(OUT_r_BRESP),
    .I_BID(OUT_r_BID),
    .I_BUSER(OUT_r_BUSER)
);

scaleRange grp_scaleRange_fu_529(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x(grp_scaleRange_fu_529_x),
    .destFrom_V(grp_scaleRange_fu_529_destFrom_V),
    .ap_return(grp_scaleRange_fu_529_ap_return),
    .ap_ce(grp_scaleRange_fu_529_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_OUT_r_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_iter0_fsm_state14)) begin
            if ((1'b1 == ap_condition_522)) begin
                ap_reg_ioackin_OUT_r_AWREADY <= 1'b0;
            end else if ((1'b1 == ap_condition_1168)) begin
                ap_reg_ioackin_OUT_r_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_OUT_r_WREADY <= 1'b0;
    end else begin
        if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state15)))) begin
            ap_reg_ioackin_OUT_r_WREADY <= 1'b0;
        end else if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state15)))) begin
            ap_reg_ioackin_OUT_r_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_460)) begin
        if ((or_cond_fu_574_p2 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_Val2_10_reg_480 <= channels_1;
        end else if ((or_cond_fu_574_p2 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_Val2_10_reg_480 <= tmp_6_fu_608_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_460)) begin
        if ((or_cond_fu_574_p2 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_Val2_11_reg_489 <= channels_2;
        end else if ((or_cond_fu_574_p2 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_Val2_11_reg_489 <= tmp_12_fu_659_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_460)) begin
        if ((or_cond_fu_574_p2 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_Val2_12_reg_499 <= channels_3;
        end else if ((or_cond_fu_574_p2 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_Val2_12_reg_499 <= tmp_14_fu_685_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_460)) begin
        if ((or_cond_fu_574_p2 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_Val2_13_reg_509 <= channels_4;
        end else if ((or_cond_fu_574_p2 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_Val2_13_reg_509 <= tmp_17_fu_711_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_460)) begin
        if ((or_cond_fu_574_p2 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_Val2_14_reg_519 <= channels_5;
        end else if ((or_cond_fu_574_p2 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_Val2_14_reg_519 <= tmp_25_fu_760_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        SBUS_data_load_1_reg_1229 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        SBUS_data_load_2_reg_1239 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        SBUS_data_load_3_reg_1250 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        SBUS_data_load_4_reg_1261 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
        SBUS_data_load_5_reg_1271 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        SBUS_data_load_6_reg_1282 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
        SBUS_data_load_7_reg_1293 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
        SBUS_data_load_8_reg_1304 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
        SBUS_data_load_9_reg_1314 <= SBUS_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (or_cond_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
        channels_0 <= tmp_2_fu_582_p3;
        channels_1 <= tmp_6_fu_608_p3;
        channels_2 <= tmp_12_fu_659_p3;
        channels_3 <= tmp_14_fu_685_p3;
        channels_4 <= tmp_17_fu_711_p3;
        channels_5 <= tmp_25_fu_760_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1359_pp0_iter0_reg == 1'd0) & (1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID))) begin
        errors <= tmp_s_fu_1186_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state18))) begin
        icmp_reg_1501 <= icmp_fu_1090_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_38_reg_1398_pp0_iter0_reg == 1'd1) & (or_cond_reg_1359_pp0_iter0_reg == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID))) begin
        lost <= tmp_26_fu_1202_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
        or_cond_reg_1359 <= or_cond_fu_574_p2;
        tmp_31_reg_1388 <= tmp_31_fu_800_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state23))) begin
        or_cond_reg_1359_pp0_iter0_reg <= or_cond_reg_1359;
        tmp_38_reg_1398_pp0_iter0_reg <= tmp_38_reg_1398;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state13))) begin
        p_Val2_11_reg_489 <= ap_phi_reg_pp0_iter0_p_Val2_11_reg_489;
        p_Val2_12_reg_499 <= ap_phi_reg_pp0_iter0_p_Val2_12_reg_499;
        p_Val2_13_reg_509 <= ap_phi_reg_pp0_iter0_p_Val2_13_reg_509;
        p_Val2_14_reg_519 <= ap_phi_reg_pp0_iter0_p_Val2_14_reg_519;
        tmp_152_1_reg_1402 <= tmp_152_1_fu_855_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state17))) begin
        p_Val2_1_reg_1480 <= grp_scaleRange_fu_529_ap_return;
        tmp_150_5_reg_1486 <= tmp_150_5_fu_1055_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state19))) begin
        p_Val2_2_reg_1516[13] <= p_Val2_2_fu_1100_p3[13];
        tmp_37_reg_1521 <= tmp_37_fu_1142_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state20))) begin
        p_Val2_3_reg_1536[14 : 13] <= p_Val2_3_fu_1154_p3[14 : 13];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state14))) begin
        p_Val2_8_reg_1417 <= grp_scaleRange_fu_529_ap_return;
        tmp_152_2_reg_1423 <= tmp_152_2_fu_902_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state15))) begin
        p_Val2_9_reg_1438 <= grp_scaleRange_fu_529_ap_return;
        tmp_152_3_reg_1444 <= tmp_152_3_fu_953_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state16))) begin
        p_Val2_s_10_reg_1459 <= grp_scaleRange_fu_529_ap_return;
        tmp_148_4_reg_1465 <= tmp_148_4_fu_1004_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (or_cond_reg_1359 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state13))) begin
        tmp_38_reg_1398 <= SBUS_data_q0[32'd2];
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        tmp_reg_1224 <= tmp_fu_537_p2;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (ap_reg_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state14))) begin
        OUT_r_AWVALID = 1'b1;
    end else begin
        OUT_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID))) begin
        OUT_r_BREADY = 1'b1;
    end else begin
        OUT_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1163)) begin
        if ((1'b1 == ap_CS_iter0_fsm_state20)) begin
            OUT_r_WDATA = p_Val2_3_cast_fu_1161_p1;
        end else if ((1'b1 == ap_CS_iter0_fsm_state19)) begin
            OUT_r_WDATA = p_Val2_2_cast_fu_1107_p1;
        end else if ((1'b1 == ap_CS_iter0_fsm_state18)) begin
            OUT_r_WDATA = p_Val2_7_fu_1076_p1;
        end else if ((1'b1 == ap_CS_iter0_fsm_state17)) begin
            OUT_r_WDATA = p_Val2_6_fu_1025_p1;
        end else if ((1'b1 == ap_CS_iter0_fsm_state16)) begin
            OUT_r_WDATA = p_Val2_5_fu_974_p1;
        end else if ((1'b1 == ap_CS_iter0_fsm_state15)) begin
            OUT_r_WDATA = p_Val2_4_fu_923_p1;
        end else begin
            OUT_r_WDATA = 'bx;
        end
    end else begin
        OUT_r_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state15)))) begin
        OUT_r_WVALID = 1'b1;
    end else begin
        OUT_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state14)) begin
        OUT_r_blk_n_AW = m_axi_OUT_r_AWREADY;
    end else begin
        OUT_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter1_fsm_state25)) begin
        OUT_r_blk_n_B = m_axi_OUT_r_BVALID;
    end else begin
        OUT_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state20) | (1'b1 == ap_CS_iter0_fsm_state19) | (1'b1 == ap_CS_iter0_fsm_state18) | (1'b1 == ap_CS_iter0_fsm_state17) | (1'b1 == ap_CS_iter0_fsm_state16) | (1'b1 == ap_CS_iter0_fsm_state15))) begin
        OUT_r_blk_n_W = m_axi_OUT_r_WREADY;
    end else begin
        OUT_r_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state12)) begin
        SBUS_data_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_iter0_fsm_state11)) begin
        SBUS_data_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_iter0_fsm_state10)) begin
        SBUS_data_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_iter0_fsm_state9)) begin
        SBUS_data_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_iter0_fsm_state8)) begin
        SBUS_data_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_iter0_fsm_state7)) begin
        SBUS_data_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        SBUS_data_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        SBUS_data_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        SBUS_data_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_iter0_fsm_state3)) begin
        SBUS_data_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_iter0_fsm_state2)) begin
        SBUS_data_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        SBUS_data_address0 = 64'd0;
    end else begin
        SBUS_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state12)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state11)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state9)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state8)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state7)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        SBUS_data_ce0 = 1'b1;
    end else begin
        SBUS_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state12)) begin
        if ((or_cond_fu_574_p2 == 1'd0)) begin
            ap_phi_mux_p_Val2_s_phi_fu_474_p4 = channels_0;
        end else if ((or_cond_fu_574_p2 == 1'd1)) begin
            ap_phi_mux_p_Val2_s_phi_fu_474_p4 = tmp_2_fu_582_p3;
        end else begin
            ap_phi_mux_p_Val2_s_phi_fu_474_p4 = ap_phi_reg_pp0_iter0_p_Val2_s_reg_471;
        end
    end else begin
        ap_phi_mux_p_Val2_s_phi_fu_474_p4 = ap_phi_reg_pp0_iter0_p_Val2_s_reg_471;
    end
end

always @ (*) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state23))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_OUT_r_AWREADY == 1'b0)) begin
        ap_sig_ioackin_OUT_r_AWREADY = OUT_r_AWREADY;
    end else begin
        ap_sig_ioackin_OUT_r_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_OUT_r_WREADY == 1'b0)) begin
        ap_sig_ioackin_OUT_r_WREADY = OUT_r_WREADY;
    end else begin
        ap_sig_ioackin_OUT_r_WREADY = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state15)) | (~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state13)))) begin
        grp_scaleRange_fu_529_ap_ce = 1'b1;
    end else begin
        grp_scaleRange_fu_529_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state16) | (1'b1 == ap_CS_iter0_fsm_state15) | (1'b1 == ap_CS_iter0_fsm_state14))) begin
        grp_scaleRange_fu_529_destFrom_V = 15'd24576;
    end else if (((1'b1 == ap_CS_iter0_fsm_state13) | (1'b1 == ap_CS_iter0_fsm_state18) | (1'b1 == ap_CS_iter0_fsm_state17))) begin
        grp_scaleRange_fu_529_destFrom_V = 15'd0;
    end else begin
        grp_scaleRange_fu_529_destFrom_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state18)) begin
        grp_scaleRange_fu_529_x = tmp_150_5_reg_1486;
    end else if ((1'b1 == ap_CS_iter0_fsm_state17)) begin
        grp_scaleRange_fu_529_x = tmp_148_4_reg_1465;
    end else if ((1'b1 == ap_CS_iter0_fsm_state16)) begin
        grp_scaleRange_fu_529_x = tmp_152_3_reg_1444;
    end else if ((1'b1 == ap_CS_iter0_fsm_state15)) begin
        grp_scaleRange_fu_529_x = tmp_152_2_reg_1423;
    end else if ((1'b1 == ap_CS_iter0_fsm_state14)) begin
        grp_scaleRange_fu_529_x = tmp_152_1_reg_1402;
    end else if ((1'b1 == ap_CS_iter0_fsm_state13)) begin
        grp_scaleRange_fu_529_x = tmp_31_reg_1388;
    end else begin
        grp_scaleRange_fu_529_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state23)) begin
        test_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_iter0_fsm_state22)) begin
        test_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_iter0_fsm_state21)) begin
        test_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_iter0_fsm_state20)) begin
        test_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_iter0_fsm_state19)) begin
        test_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_iter0_fsm_state18)) begin
        test_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_iter0_fsm_state17)) begin
        test_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_iter0_fsm_state16)) begin
        test_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_iter0_fsm_state15)) begin
        test_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_iter0_fsm_state14)) begin
        test_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_iter0_fsm_state13)) begin
        test_V_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state12)) begin
        test_V_address0 = 64'd0;
    end else begin
        test_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state24) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state23)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state15)) | (~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state22)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state21)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state13)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state12)))) begin
        test_V_ce0 = 1'b1;
    end else begin
        test_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state23)) begin
        test_V_d0 = tmp_50_fu_1178_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state22)) begin
        test_V_d0 = tmp_49_fu_1174_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state21)) begin
        test_V_d0 = tmp_48_fu_1170_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state20)) begin
        test_V_d0 = tmp_47_fu_1166_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state19)) begin
        test_V_d0 = tmp_46_fu_1150_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state18)) begin
        test_V_d0 = tmp_45_fu_1096_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state17)) begin
        test_V_d0 = tmp_56_cast_fu_1071_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state16)) begin
        test_V_d0 = tmp_54_cast_fu_1020_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state15)) begin
        test_V_d0 = tmp_52_cast_fu_969_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state14)) begin
        test_V_d0 = tmp_50_cast_fu_918_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state13)) begin
        test_V_d0 = tmp_48_cast_fu_871_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state12)) begin
        test_V_d0 = tmp_46_cast_fu_816_p1;
    end else begin
        test_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state23)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state15)) | (~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state14)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state22)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state21)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state13)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state12)))) begin
        test_V_we0 = 1'b1;
    end else begin
        test_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end
        end
        ap_ST_iter0_fsm_state2 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end
        end
        ap_ST_iter0_fsm_state3 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end
        end
        ap_ST_iter0_fsm_state4 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end
        end
        ap_ST_iter0_fsm_state5 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end
        end
        ap_ST_iter0_fsm_state6 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end
        end
        ap_ST_iter0_fsm_state7 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end
        end
        ap_ST_iter0_fsm_state8 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end
        end
        ap_ST_iter0_fsm_state9 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end
        end
        ap_ST_iter0_fsm_state10 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end
        end
        ap_ST_iter0_fsm_state11 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end
        end
        ap_ST_iter0_fsm_state12 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end
        end
        ap_ST_iter0_fsm_state13 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state13))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end
        end
        ap_ST_iter0_fsm_state14 : begin
            if ((~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state14))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end
        end
        ap_ST_iter0_fsm_state15 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state15))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end
        end
        ap_ST_iter0_fsm_state16 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state16))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end
        end
        ap_ST_iter0_fsm_state17 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state17))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end
        end
        ap_ST_iter0_fsm_state18 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state18))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state19;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end
        end
        ap_ST_iter0_fsm_state19 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state19))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state20;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state19;
            end
        end
        ap_ST_iter0_fsm_state20 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == ap_CS_iter0_fsm_state20))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state21;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state20;
            end
        end
        ap_ST_iter0_fsm_state21 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state21))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state22;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state21;
            end
        end
        ap_ST_iter0_fsm_state22 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state22))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state23;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state22;
            end
        end
        ap_ST_iter0_fsm_state23 : begin
            if (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state23;
            end
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state24 : begin
            ap_NS_iter1_fsm = ap_ST_iter1_fsm_state25;
        end
        ap_ST_iter1_fsm_state25 : begin
            if (((1'b1 == ap_CS_iter0_fsm_state23) & (1'b1 == OUT_r_BVALID))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state24;
            end else if (((1'b0 == ap_CS_iter0_fsm_state23) & (1'b1 == OUT_r_BVALID))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state25;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state23))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state24;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter0_fsm_state10 = ap_CS_iter0_fsm[32'd9];

assign ap_CS_iter0_fsm_state11 = ap_CS_iter0_fsm[32'd10];

assign ap_CS_iter0_fsm_state12 = ap_CS_iter0_fsm[32'd11];

assign ap_CS_iter0_fsm_state13 = ap_CS_iter0_fsm[32'd12];

assign ap_CS_iter0_fsm_state14 = ap_CS_iter0_fsm[32'd13];

assign ap_CS_iter0_fsm_state15 = ap_CS_iter0_fsm[32'd14];

assign ap_CS_iter0_fsm_state16 = ap_CS_iter0_fsm[32'd15];

assign ap_CS_iter0_fsm_state17 = ap_CS_iter0_fsm[32'd16];

assign ap_CS_iter0_fsm_state18 = ap_CS_iter0_fsm[32'd17];

assign ap_CS_iter0_fsm_state19 = ap_CS_iter0_fsm[32'd18];

assign ap_CS_iter0_fsm_state2 = ap_CS_iter0_fsm[32'd1];

assign ap_CS_iter0_fsm_state20 = ap_CS_iter0_fsm[32'd19];

assign ap_CS_iter0_fsm_state21 = ap_CS_iter0_fsm[32'd20];

assign ap_CS_iter0_fsm_state22 = ap_CS_iter0_fsm[32'd21];

assign ap_CS_iter0_fsm_state23 = ap_CS_iter0_fsm[32'd22];

assign ap_CS_iter0_fsm_state3 = ap_CS_iter0_fsm[32'd2];

assign ap_CS_iter0_fsm_state4 = ap_CS_iter0_fsm[32'd3];

assign ap_CS_iter0_fsm_state5 = ap_CS_iter0_fsm[32'd4];

assign ap_CS_iter0_fsm_state6 = ap_CS_iter0_fsm[32'd5];

assign ap_CS_iter0_fsm_state7 = ap_CS_iter0_fsm[32'd6];

assign ap_CS_iter0_fsm_state8 = ap_CS_iter0_fsm[32'd7];

assign ap_CS_iter0_fsm_state9 = ap_CS_iter0_fsm[32'd8];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state24 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter1_fsm_state25 = ap_CS_iter1_fsm[32'd2];

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0_ignore_call11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0_ignore_call11 = ((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID));
end

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0_ignore_call20 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0_ignore_call28 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0_ignore_call44 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0_ignore_call50 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter1_ignore_call11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter1_ignore_call20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter1_ignore_call28 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter1_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter1_ignore_call44 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter1_ignore_call50 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_pp0_stage1_iter1 = (1'b0 == OUT_r_BVALID);
end

always @ (*) begin
    ap_block_state25_pp0_stage1_iter1_ignore_call11 = (1'b0 == OUT_r_BVALID);
end

always @ (*) begin
    ap_block_state25_pp0_stage1_iter1_ignore_call20 = (1'b0 == OUT_r_BVALID);
end

always @ (*) begin
    ap_block_state25_pp0_stage1_iter1_ignore_call28 = (1'b0 == OUT_r_BVALID);
end

always @ (*) begin
    ap_block_state25_pp0_stage1_iter1_ignore_call36 = (1'b0 == OUT_r_BVALID);
end

always @ (*) begin
    ap_block_state25_pp0_stage1_iter1_ignore_call44 = (1'b0 == OUT_r_BVALID);
end

always @ (*) begin
    ap_block_state25_pp0_stage1_iter1_ignore_call50 = (1'b0 == OUT_r_BVALID);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1163 = (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0));
end

always @ (*) begin
    ap_condition_1168 = (~(((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25))) & (1'b1 == OUT_r_AWREADY));
end

always @ (*) begin
    ap_condition_460 = (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)) & (1'b1 == ap_CS_iter0_fsm_state12));
end

always @ (*) begin
    ap_condition_522 = ~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state25) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state25)));
end

assign ap_phi_reg_pp0_iter0_p_Val2_s_reg_471 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign icmp1_fu_1122_p2 = (($signed(tmp_53_fu_1112_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_fu_1090_p2 = (($signed(tmp_52_fu_1080_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign or_cond_fu_574_p2 = (tmp_reg_1224 & tmp_9_fu_568_p2);

assign p_Val2_2_cast_fu_1107_p1 = p_Val2_2_fu_1100_p3;

assign p_Val2_2_fu_1100_p3 = {{icmp_reg_1501}, {13'd0}};

assign p_Val2_3_cast_fu_1161_p1 = p_Val2_3_fu_1154_p3;

assign p_Val2_3_fu_1154_p3 = {{tmp_37_reg_1521}, {13'd0}};

assign p_Val2_4_fu_923_p1 = p_Val2_8_reg_1417;

assign p_Val2_5_fu_974_p1 = p_Val2_9_reg_1438;

assign p_Val2_6_fu_1025_p1 = p_Val2_s_10_reg_1459;

assign p_Val2_7_fu_1076_p1 = p_Val2_1_reg_1480;

assign p_channels_load_1_4_c_fu_990_p3 = ((tmp_138_4_fu_978_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign p_channels_load_2_5_c_fu_1041_p3 = ((tmp_141_5_fu_1029_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign p_channels_load_3_1_c_fu_841_p3 = ((tmp_143_1_fu_829_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign p_channels_load_3_2_c_fu_888_p3 = ((tmp_143_2_fu_876_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign p_channels_load_3_3_c_fu_939_p3 = ((tmp_143_3_fu_927_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign p_channels_load_cast_fu_786_p3 = ((tmp_28_fu_774_p2[0:0] === 1'b1) ? 11'd200 : 11'd1800);

assign tmp_10_fu_605_p1 = SBUS_data_load_3_reg_1250[5:0];

assign tmp_11_fu_653_p2 = (tmp_5_fu_635_p3 | tmp_1_fu_645_p3);

assign tmp_12_fu_659_p3 = {{tmp_15_fu_642_p1}, {tmp_11_fu_653_p2}};

assign tmp_138_4_fu_978_p2 = ((p_Val2_13_reg_509 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_13_fu_673_p4 = {{SBUS_data_load_5_reg_1271[7:1]}};

assign tmp_140_4_fu_984_p2 = ((p_Val2_13_reg_509 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_141_5_fu_1029_p2 = ((p_Val2_14_reg_519 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_143_1_fu_829_p2 = ((ap_phi_reg_pp0_iter0_p_Val2_10_reg_480 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_143_2_fu_876_p2 = ((p_Val2_11_reg_489 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_143_3_fu_927_p2 = ((p_Val2_12_reg_499 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_146_5_fu_1035_p2 = ((p_Val2_14_reg_519 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_147_1_fu_835_p2 = ((ap_phi_reg_pp0_iter0_p_Val2_10_reg_480 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_147_2_fu_882_p2 = ((p_Val2_11_reg_489 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_147_3_fu_933_p2 = ((p_Val2_12_reg_499 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_148_4_fu_1004_p3 = ((tmp_35_fu_998_p2[0:0] === 1'b1) ? p_channels_load_1_4_c_fu_990_p3 : p_Val2_13_reg_509);

assign tmp_14_fu_685_p3 = {{tmp_18_fu_682_p1}, {tmp_13_fu_673_p4}};

assign tmp_150_5_fu_1055_p3 = ((tmp_36_fu_1049_p2[0:0] === 1'b1) ? p_channels_load_2_5_c_fu_1041_p3 : p_Val2_14_reg_519);

assign tmp_152_1_fu_855_p3 = ((tmp_32_fu_849_p2[0:0] === 1'b1) ? p_channels_load_3_1_c_fu_841_p3 : ap_phi_reg_pp0_iter0_p_Val2_10_reg_480);

assign tmp_152_2_fu_902_p3 = ((tmp_33_fu_896_p2[0:0] === 1'b1) ? p_channels_load_3_2_c_fu_888_p3 : p_Val2_11_reg_489);

assign tmp_152_3_fu_953_p3 = ((tmp_34_fu_947_p2[0:0] === 1'b1) ? p_channels_load_3_3_c_fu_939_p3 : p_Val2_12_reg_499);

assign tmp_15_fu_642_p1 = SBUS_data_load_5_reg_1271[0:0];

assign tmp_16_fu_699_p4 = {{SBUS_data_load_6_reg_1282[7:4]}};

assign tmp_17_fu_711_p3 = {{tmp_20_fu_708_p1}, {tmp_16_fu_699_p4}};

assign tmp_18_fu_682_p1 = SBUS_data_load_6_reg_1282[3:0];

assign tmp_19_fu_732_p1 = tmp_23_fu_725_p3;

assign tmp_1_fu_645_p3 = {{2'd0}, {tmp_4_fu_631_p1}};

assign tmp_1_i_fu_1128_p2 = (($signed(grp_scaleRange_fu_529_ap_return) < $signed(15'd6144)) ? 1'b1 : 1'b0);

assign tmp_20_fu_708_p1 = SBUS_data_load_7_reg_1293[6:0];

assign tmp_21_fu_736_p3 = {{SBUS_data_load_8_reg_1304}, {1'd0}};

assign tmp_22_fu_746_p3 = {{1'd0}, {tmp_19_fu_732_p1}};

assign tmp_23_fu_725_p3 = SBUS_data_load_7_reg_1293[32'd7];

assign tmp_24_fu_754_p2 = (tmp_22_fu_746_p3 | tmp_21_fu_736_p3);

assign tmp_25_fu_760_p3 = {{tmp_27_fu_743_p1}, {tmp_24_fu_754_p2}};

assign tmp_26_fu_1202_p2 = (lost + 32'd1);

assign tmp_27_fu_743_p1 = SBUS_data_load_9_reg_1314[1:0];

assign tmp_28_fu_774_p2 = ((ap_phi_mux_p_Val2_s_phi_fu_474_p4 < 11'd200) ? 1'b1 : 1'b0);

assign tmp_29_fu_780_p2 = ((ap_phi_mux_p_Val2_s_phi_fu_474_p4 > 11'd1800) ? 1'b1 : 1'b0);

assign tmp_2_fu_582_p3 = {{tmp_3_fu_579_p1}, {SBUS_data_load_1_reg_1229}};

assign tmp_30_fu_794_p2 = (tmp_29_fu_780_p2 | tmp_28_fu_774_p2);

assign tmp_31_fu_800_p3 = ((tmp_30_fu_794_p2[0:0] === 1'b1) ? p_channels_load_cast_fu_786_p3 : ap_phi_mux_p_Val2_s_phi_fu_474_p4);

assign tmp_32_fu_849_p2 = (tmp_147_1_fu_835_p2 | tmp_143_1_fu_829_p2);

assign tmp_33_fu_896_p2 = (tmp_147_2_fu_882_p2 | tmp_143_2_fu_876_p2);

assign tmp_34_fu_947_p2 = (tmp_147_3_fu_933_p2 | tmp_143_3_fu_927_p2);

assign tmp_35_fu_998_p2 = (tmp_140_4_fu_984_p2 | tmp_138_4_fu_978_p2);

assign tmp_36_fu_1049_p2 = (tmp_146_5_fu_1035_p2 | tmp_141_5_fu_1029_p2);

assign tmp_37_fu_1142_p3 = ((tmp_1_i_fu_1128_p2[0:0] === 1'b1) ? tmp_38_cast_fu_1134_p3 : 2'd2);

assign tmp_38_cast_fu_1134_p3 = ((icmp1_fu_1122_p2[0:0] === 1'b1) ? 2'd0 : 2'd1);

assign tmp_39_fu_808_p3 = {{ap_phi_mux_p_Val2_s_phi_fu_474_p4}, {13'd0}};

assign tmp_3_fu_579_p1 = SBUS_data_load_2_reg_1239[2:0];

assign tmp_40_fu_863_p3 = {{ap_phi_reg_pp0_iter0_p_Val2_10_reg_480}, {13'd0}};

assign tmp_41_fu_910_p3 = {{p_Val2_11_reg_489}, {13'd0}};

assign tmp_42_fu_961_p3 = {{p_Val2_12_reg_499}, {13'd0}};

assign tmp_43_fu_1012_p3 = {{p_Val2_13_reg_509}, {13'd0}};

assign tmp_44_fu_1063_p3 = {{p_Val2_14_reg_519}, {13'd0}};

assign tmp_45_fu_1096_p1 = p_Val2_8_reg_1417;

assign tmp_46_cast_fu_816_p1 = tmp_39_fu_808_p3;

assign tmp_46_fu_1150_p1 = p_Val2_9_reg_1438;

assign tmp_47_fu_1166_p1 = p_Val2_s_10_reg_1459;

assign tmp_48_cast_fu_871_p1 = tmp_40_fu_863_p3;

assign tmp_48_fu_1170_p1 = p_Val2_1_reg_1480;

assign tmp_49_fu_1174_p1 = p_Val2_2_reg_1516;

assign tmp_4_fu_631_p1 = tmp_8_fu_622_p4;

assign tmp_50_cast_fu_918_p1 = tmp_41_fu_910_p3;

assign tmp_50_fu_1178_p1 = p_Val2_3_reg_1536;

assign tmp_52_cast_fu_969_p1 = tmp_42_fu_961_p3;

assign tmp_52_fu_1080_p4 = {{grp_scaleRange_fu_529_ap_return[14:12]}};

assign tmp_53_fu_1112_p4 = {{grp_scaleRange_fu_529_ap_return[14:11]}};

assign tmp_54_cast_fu_1020_p1 = tmp_43_fu_1012_p3;

assign tmp_56_cast_fu_1071_p1 = tmp_44_fu_1063_p3;

assign tmp_5_fu_635_p3 = {{SBUS_data_load_4_reg_1261}, {2'd0}};

assign tmp_6_fu_608_p3 = {{tmp_10_fu_605_p1}, {tmp_7_fu_596_p4}};

assign tmp_7_fu_596_p4 = {{SBUS_data_load_2_reg_1239[7:3]}};

assign tmp_8_fu_622_p4 = {{SBUS_data_load_3_reg_1250[7:6]}};

assign tmp_9_fu_568_p2 = ((SBUS_data_q0 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_fu_537_p2 = ((SBUS_data_q0 == 8'd15) ? 1'b1 : 1'b0);

assign tmp_s_fu_1186_p2 = (errors + 32'd1);

always @ (posedge ap_clk) begin
    p_Val2_2_reg_1516[12:0] <= 13'b0000000000000;
    p_Val2_3_reg_1536[12:0] <= 13'b0000000000000;
end

endmodule //rcReceiver
