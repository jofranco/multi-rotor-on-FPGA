-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity scaleRange is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (10 downto 0);
    destFrom_V : IN STD_LOGIC_VECTOR (14 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (14 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of scaleRange is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv14_1FF7 : STD_LOGIC_VECTOR (13 downto 0) := "01111111110111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv77_51EB851EB9 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000101000111101011100001010001111010111001";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv24_E70000 : STD_LOGIC_VECTOR (23 downto 0) := "111001110000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal destFrom_V_read_reg_128 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal tmp_4_cast_reg_133 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_fu_56_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_fu_60_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_119_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_fu_78_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_2_fu_87_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_fu_99_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_fu_99_p2 : STD_LOGIC_VECTOR (76 downto 0);
    signal grp_fu_119_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_119_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_119_p20 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_fu_99_p10 : STD_LOGIC_VECTOR (76 downto 0);

    component rcReceiver_am_addbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (37 downto 0) );
    end component;



begin
    rcReceiver_am_addbkb_U1 : component rcReceiver_am_addbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 14,
        dout_WIDTH => 38)
    port map (
        din0 => ap_const_lv24_E70000,
        din1 => grp_fu_119_p1,
        din2 => grp_fu_119_p2,
        dout => grp_fu_119_p3);




    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                destFrom_V_read_reg_128 <= destFrom_V;
                tmp_4_cast_reg_133 <= mul_fu_99_p2(76 downto 62);
            end if;
        end if;
    end process;
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= std_logic_vector(unsigned(tmp_4_cast_reg_133) + unsigned(destFrom_V_read_reg_128));
    grp_fu_119_p1 <= (x & ap_const_lv13_0);
    grp_fu_119_p2 <= grp_fu_119_p20(14 - 1 downto 0);
    grp_fu_119_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_60_p2),38));
    mul_fu_99_p1 <= mul_fu_99_p10(38 - 1 downto 0);
    mul_fu_99_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_87_p3),77));
    mul_fu_99_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv77_51EB851EB9) * unsigned(mul_fu_99_p1), 77));
    r_V_fu_60_p2 <= std_logic_vector(unsigned(ap_const_lv14_1FF7) - unsigned(tmp_1_fu_56_p1));
    tmp_1_fu_56_p1 <= destFrom_V(14 - 1 downto 0);
    tmp_2_fu_87_p3 <= (tmp_fu_78_p4 & ap_const_lv13_0);
    tmp_fu_78_p4 <= grp_fu_119_p3(37 downto 13);
end behav;
