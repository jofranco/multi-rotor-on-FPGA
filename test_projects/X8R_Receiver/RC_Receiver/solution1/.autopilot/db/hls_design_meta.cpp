#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_AWADDR", 15, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_ARADDR", 15, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_CHAN_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_AWADDR", 15, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_ARADDR", 15, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_NORM_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_AWADDR", 15, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_ARADDR", 15, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_TEST_REV_BRESP", 2, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "RC_RECEIVER";
