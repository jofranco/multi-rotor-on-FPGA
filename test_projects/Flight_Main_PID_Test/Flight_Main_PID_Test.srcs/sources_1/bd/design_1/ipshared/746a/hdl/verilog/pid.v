// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pid,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=26,HLS_SYN_TPT=22,HLS_SYN_MEM=20,HLS_SYN_DSP=74,HLS_SYN_FF=3999,HLS_SYN_LUT=5818,HLS_VERSION=2018_2}" *)

module pid (
        ap_clk,
        ap_rst_n,
        m_axi_OUT_r_AWVALID,
        m_axi_OUT_r_AWREADY,
        m_axi_OUT_r_AWADDR,
        m_axi_OUT_r_AWID,
        m_axi_OUT_r_AWLEN,
        m_axi_OUT_r_AWSIZE,
        m_axi_OUT_r_AWBURST,
        m_axi_OUT_r_AWLOCK,
        m_axi_OUT_r_AWCACHE,
        m_axi_OUT_r_AWPROT,
        m_axi_OUT_r_AWQOS,
        m_axi_OUT_r_AWREGION,
        m_axi_OUT_r_AWUSER,
        m_axi_OUT_r_WVALID,
        m_axi_OUT_r_WREADY,
        m_axi_OUT_r_WDATA,
        m_axi_OUT_r_WSTRB,
        m_axi_OUT_r_WLAST,
        m_axi_OUT_r_WID,
        m_axi_OUT_r_WUSER,
        m_axi_OUT_r_ARVALID,
        m_axi_OUT_r_ARREADY,
        m_axi_OUT_r_ARADDR,
        m_axi_OUT_r_ARID,
        m_axi_OUT_r_ARLEN,
        m_axi_OUT_r_ARSIZE,
        m_axi_OUT_r_ARBURST,
        m_axi_OUT_r_ARLOCK,
        m_axi_OUT_r_ARCACHE,
        m_axi_OUT_r_ARPROT,
        m_axi_OUT_r_ARQOS,
        m_axi_OUT_r_ARREGION,
        m_axi_OUT_r_ARUSER,
        m_axi_OUT_r_RVALID,
        m_axi_OUT_r_RREADY,
        m_axi_OUT_r_RDATA,
        m_axi_OUT_r_RLAST,
        m_axi_OUT_r_RID,
        m_axi_OUT_r_RUSER,
        m_axi_OUT_r_RRESP,
        m_axi_OUT_r_BVALID,
        m_axi_OUT_r_BREADY,
        m_axi_OUT_r_BRESP,
        m_axi_OUT_r_BID,
        m_axi_OUT_r_BUSER,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt,
        s_axi_INPUT_AWVALID,
        s_axi_INPUT_AWREADY,
        s_axi_INPUT_AWADDR,
        s_axi_INPUT_WVALID,
        s_axi_INPUT_WREADY,
        s_axi_INPUT_WDATA,
        s_axi_INPUT_WSTRB,
        s_axi_INPUT_ARVALID,
        s_axi_INPUT_ARREADY,
        s_axi_INPUT_ARADDR,
        s_axi_INPUT_RVALID,
        s_axi_INPUT_RREADY,
        s_axi_INPUT_RDATA,
        s_axi_INPUT_RRESP,
        s_axi_INPUT_BVALID,
        s_axi_INPUT_BREADY,
        s_axi_INPUT_BRESP,
        s_axi_TEST_AWVALID,
        s_axi_TEST_AWREADY,
        s_axi_TEST_AWADDR,
        s_axi_TEST_WVALID,
        s_axi_TEST_WREADY,
        s_axi_TEST_WDATA,
        s_axi_TEST_WSTRB,
        s_axi_TEST_ARVALID,
        s_axi_TEST_ARREADY,
        s_axi_TEST_ARADDR,
        s_axi_TEST_RVALID,
        s_axi_TEST_RREADY,
        s_axi_TEST_RDATA,
        s_axi_TEST_RRESP,
        s_axi_TEST_BVALID,
        s_axi_TEST_BREADY,
        s_axi_TEST_BRESP
);

parameter    ap_ST_iter0_fsm_state1 = 22'd1;
parameter    ap_ST_iter0_fsm_state2 = 22'd2;
parameter    ap_ST_iter0_fsm_state3 = 22'd4;
parameter    ap_ST_iter0_fsm_state4 = 22'd8;
parameter    ap_ST_iter0_fsm_state5 = 22'd16;
parameter    ap_ST_iter0_fsm_state6 = 22'd32;
parameter    ap_ST_iter0_fsm_state7 = 22'd64;
parameter    ap_ST_iter0_fsm_state8 = 22'd128;
parameter    ap_ST_iter0_fsm_state9 = 22'd256;
parameter    ap_ST_iter0_fsm_state10 = 22'd512;
parameter    ap_ST_iter0_fsm_state11 = 22'd1024;
parameter    ap_ST_iter0_fsm_state12 = 22'd2048;
parameter    ap_ST_iter0_fsm_state13 = 22'd4096;
parameter    ap_ST_iter0_fsm_state14 = 22'd8192;
parameter    ap_ST_iter0_fsm_state15 = 22'd16384;
parameter    ap_ST_iter0_fsm_state16 = 22'd32768;
parameter    ap_ST_iter0_fsm_state17 = 22'd65536;
parameter    ap_ST_iter0_fsm_state18 = 22'd131072;
parameter    ap_ST_iter0_fsm_state19 = 22'd262144;
parameter    ap_ST_iter0_fsm_state20 = 22'd524288;
parameter    ap_ST_iter0_fsm_state21 = 22'd1048576;
parameter    ap_ST_iter0_fsm_state22 = 22'd2097152;
parameter    ap_ST_iter1_fsm_state23 = 6'd2;
parameter    ap_ST_iter1_fsm_state24 = 6'd4;
parameter    ap_ST_iter1_fsm_state25 = 6'd8;
parameter    ap_ST_iter1_fsm_state26 = 6'd16;
parameter    ap_ST_iter1_fsm_state27 = 6'd32;
parameter    ap_ST_iter1_fsm_state0 = 6'd1;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_ADDR_WIDTH = 6;
parameter    C_S_AXI_TEST_DATA_WIDTH = 32;
parameter    C_S_AXI_TEST_ADDR_WIDTH = 15;
parameter    C_M_AXI_OUT_R_ID_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_OUT_R_DATA_WIDTH = 32;
parameter    C_M_AXI_OUT_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_TARGET_ADDR = 0;
parameter    C_M_AXI_OUT_R_USER_VALUE = 0;
parameter    C_M_AXI_OUT_R_PROT_VALUE = 0;
parameter    C_M_AXI_OUT_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_INPUT_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_TEST_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUT_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_OUT_r_AWVALID;
input   m_axi_OUT_r_AWREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_AWADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_AWID;
output  [7:0] m_axi_OUT_r_AWLEN;
output  [2:0] m_axi_OUT_r_AWSIZE;
output  [1:0] m_axi_OUT_r_AWBURST;
output  [1:0] m_axi_OUT_r_AWLOCK;
output  [3:0] m_axi_OUT_r_AWCACHE;
output  [2:0] m_axi_OUT_r_AWPROT;
output  [3:0] m_axi_OUT_r_AWQOS;
output  [3:0] m_axi_OUT_r_AWREGION;
output  [C_M_AXI_OUT_R_AWUSER_WIDTH - 1:0] m_axi_OUT_r_AWUSER;
output   m_axi_OUT_r_WVALID;
input   m_axi_OUT_r_WREADY;
output  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_WDATA;
output  [C_M_AXI_OUT_R_WSTRB_WIDTH - 1:0] m_axi_OUT_r_WSTRB;
output   m_axi_OUT_r_WLAST;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_WID;
output  [C_M_AXI_OUT_R_WUSER_WIDTH - 1:0] m_axi_OUT_r_WUSER;
output   m_axi_OUT_r_ARVALID;
input   m_axi_OUT_r_ARREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_ARADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_ARID;
output  [7:0] m_axi_OUT_r_ARLEN;
output  [2:0] m_axi_OUT_r_ARSIZE;
output  [1:0] m_axi_OUT_r_ARBURST;
output  [1:0] m_axi_OUT_r_ARLOCK;
output  [3:0] m_axi_OUT_r_ARCACHE;
output  [2:0] m_axi_OUT_r_ARPROT;
output  [3:0] m_axi_OUT_r_ARQOS;
output  [3:0] m_axi_OUT_r_ARREGION;
output  [C_M_AXI_OUT_R_ARUSER_WIDTH - 1:0] m_axi_OUT_r_ARUSER;
input   m_axi_OUT_r_RVALID;
output   m_axi_OUT_r_RREADY;
input  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_RDATA;
input   m_axi_OUT_r_RLAST;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_RID;
input  [C_M_AXI_OUT_R_RUSER_WIDTH - 1:0] m_axi_OUT_r_RUSER;
input  [1:0] m_axi_OUT_r_RRESP;
input   m_axi_OUT_r_BVALID;
output   m_axi_OUT_r_BREADY;
input  [1:0] m_axi_OUT_r_BRESP;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_BID;
input  [C_M_AXI_OUT_R_BUSER_WIDTH - 1:0] m_axi_OUT_r_BUSER;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;
input   s_axi_INPUT_AWVALID;
output   s_axi_INPUT_AWREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_AWADDR;
input   s_axi_INPUT_WVALID;
output   s_axi_INPUT_WREADY;
input  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_WDATA;
input  [C_S_AXI_INPUT_WSTRB_WIDTH - 1:0] s_axi_INPUT_WSTRB;
input   s_axi_INPUT_ARVALID;
output   s_axi_INPUT_ARREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_ARADDR;
output   s_axi_INPUT_RVALID;
input   s_axi_INPUT_RREADY;
output  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_RDATA;
output  [1:0] s_axi_INPUT_RRESP;
output   s_axi_INPUT_BVALID;
input   s_axi_INPUT_BREADY;
output  [1:0] s_axi_INPUT_BRESP;
input   s_axi_TEST_AWVALID;
output   s_axi_TEST_AWREADY;
input  [C_S_AXI_TEST_ADDR_WIDTH - 1:0] s_axi_TEST_AWADDR;
input   s_axi_TEST_WVALID;
output   s_axi_TEST_WREADY;
input  [C_S_AXI_TEST_DATA_WIDTH - 1:0] s_axi_TEST_WDATA;
input  [C_S_AXI_TEST_WSTRB_WIDTH - 1:0] s_axi_TEST_WSTRB;
input   s_axi_TEST_ARVALID;
output   s_axi_TEST_ARREADY;
input  [C_S_AXI_TEST_ADDR_WIDTH - 1:0] s_axi_TEST_ARADDR;
output   s_axi_TEST_RVALID;
input   s_axi_TEST_RREADY;
output  [C_S_AXI_TEST_DATA_WIDTH - 1:0] s_axi_TEST_RDATA;
output  [1:0] s_axi_TEST_RRESP;
output   s_axi_TEST_BVALID;
input   s_axi_TEST_BREADY;
output  [1:0] s_axi_TEST_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
reg   [21:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [5:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg    ap_ready;
wire    ap_CS_iter0_fsm_state22;
reg    OUT_r_AWVALID;
wire    OUT_r_AWREADY;
reg    OUT_r_WVALID;
wire    OUT_r_WREADY;
reg   [15:0] OUT_r_WDATA;
wire    OUT_r_ARREADY;
wire    OUT_r_RVALID;
wire   [15:0] OUT_r_RDATA;
wire    OUT_r_RLAST;
wire   [0:0] OUT_r_RID;
wire   [0:0] OUT_r_RUSER;
wire   [1:0] OUT_r_RRESP;
wire    OUT_r_BVALID;
reg    OUT_r_BREADY;
wire   [1:0] OUT_r_BRESP;
wire   [0:0] OUT_r_BID;
wire   [0:0] OUT_r_BUSER;
wire    ap_block_state22_pp0_stage21_iter0;
reg    ap_sig_ioackin_OUT_r_WREADY;
wire    ap_block_state23_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state23;
wire    ap_block_state24_pp0_stage1_iter1;
wire    ap_block_state25_pp0_stage2_iter1;
wire    ap_block_state26_pp0_stage3_iter1;
reg    ap_block_state27_pp0_stage4_iter1;
wire    ap_CS_iter1_fsm_state27;
reg   [2:0] cmdIn_V_address0;
reg    cmdIn_V_ce0;
wire   [15:0] cmdIn_V_q0;
reg   [2:0] measured_V_address0;
reg    measured_V_ce0;
wire   [15:0] measured_V_q0;
reg   [2:0] kp_V_address0;
reg    kp_V_ce0;
wire   [31:0] kp_V_q0;
reg   [1:0] kd_V_address0;
reg    kd_V_ce0;
wire   [31:0] kd_V_q0;
reg   [1:0] ki_V_address0;
reg    ki_V_ce0;
wire   [31:0] ki_V_q0;
reg   [11:0] test_V_address0;
reg    test_V_ce0;
reg    test_V_we0;
reg   [31:0] test_V_d0;
reg   [31:0] integral_pos_V_0;
reg   [15:0] last_error_pos_V_0;
reg   [31:0] integral_pos_V_1;
reg   [15:0] last_error_pos_V_1;
reg   [31:0] integral_rate_V_0;
reg   [15:0] last_error_rate_V_0;
reg   [31:0] integral_rate_V_1;
reg   [15:0] last_error_rate_V_1;
reg    OUT_r_blk_n_AW;
wire    ap_CS_iter0_fsm_state14;
reg    OUT_r_blk_n_W;
wire    ap_CS_iter0_fsm_state15;
wire    ap_CS_iter0_fsm_state16;
wire    ap_CS_iter0_fsm_state17;
wire    ap_CS_iter0_fsm_state18;
wire    ap_CS_iter0_fsm_state19;
wire    ap_CS_iter0_fsm_state20;
wire    ap_CS_iter0_fsm_state21;
reg    OUT_r_blk_n_B;
reg   [31:0] reg_700;
wire    ap_CS_iter0_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
reg   [0:0] tmp_7_reg_2817;
wire    ap_CS_iter0_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_CS_iter0_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_CS_iter0_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
reg   [31:0] reg_704;
reg   [31:0] reg_708;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_CS_iter0_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
reg  signed [15:0] p_Val2_s_reg_2812;
wire   [0:0] tmp_7_fu_762_p2;
reg   [15:0] p_Val2_29_reg_2824;
reg   [31:0] kp_V_load_3_reg_2829;
reg   [31:0] ki_V_load_2_reg_2834;
reg   [31:0] kd_V_load_2_reg_2839;
reg  signed [15:0] p_Val2_1_reg_2844;
wire  signed [16:0] p_Val2_3_fu_800_p2;
reg  signed [16:0] p_Val2_3_reg_2855;
wire   [17:0] tmp_10_fu_818_p2;
reg   [17:0] tmp_10_reg_2861;
reg  signed [15:0] p_Val2_11_reg_2886;
wire  signed [31:0] tmp_2_fu_873_p3;
reg  signed [31:0] tmp_2_reg_2897;
wire   [48:0] p_Val2_7_fu_894_p2;
reg   [48:0] p_Val2_7_reg_2902;
wire   [49:0] p_Val2_8_fu_907_p2;
reg   [49:0] p_Val2_8_reg_2907;
wire  signed [16:0] p_Val2_13_fu_921_p2;
reg  signed [16:0] p_Val2_13_reg_2912;
wire   [17:0] tmp_27_fu_939_p2;
reg   [17:0] tmp_27_reg_2918;
reg   [31:0] ki_V_load_1_reg_2923;
wire  signed [31:0] tmp_3_1_fu_955_p1;
reg  signed [15:0] p_Val2_21_reg_2963;
wire   [63:0] p_Val2_6_fu_966_p2;
reg   [63:0] p_Val2_6_reg_2969;
wire  signed [31:0] tmp_26_fu_1011_p3;
reg  signed [31:0] tmp_26_reg_2974;
wire   [48:0] p_Val2_17_fu_1032_p2;
reg   [48:0] p_Val2_17_reg_2979;
wire   [49:0] p_Val2_18_fu_1045_p2;
reg   [49:0] p_Val2_18_reg_2984;
wire   [16:0] r_V_fu_1059_p2;
reg   [16:0] r_V_reg_2989;
reg  signed [15:0] p_Val2_49_reg_3004;
wire  signed [31:0] tmp_3_fu_1065_p1;
wire   [64:0] p_Val2_9_fu_1080_p2;
reg   [64:0] p_Val2_9_reg_3024;
wire   [63:0] p_Val2_16_fu_1092_p2;
reg   [63:0] p_Val2_16_reg_3029;
reg   [15:0] phitmp_reg_3034;
reg   [15:0] p_Val2_38_reg_3039;
wire  signed [31:0] tmp_3_2_fu_1121_p1;
wire    ap_CS_iter0_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
reg   [15:0] cmdIn_V_load_4_reg_3064;
wire   [65:0] p_Val2_20_fu_1190_p2;
reg   [65:0] p_Val2_20_reg_3069;
reg   [31:0] tmp_32_reg_3074;
wire   [15:0] phitmp5_fu_1230_p3;
reg   [15:0] phitmp5_reg_3080;
reg   [15:0] p_Val2_47_reg_3085;
reg   [31:0] kp_V_load_5_reg_3090;
wire  signed [31:0] tmp_3_3_fu_1238_p1;
wire    ap_CS_iter0_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
wire  signed [16:0] p_Val2_30_fu_1309_p2;
reg  signed [16:0] p_Val2_30_reg_3105;
wire   [15:0] tmp_62_fu_1315_p1;
reg   [15:0] tmp_62_reg_3112;
wire  signed [16:0] p_Val2_39_fu_1326_p2;
reg  signed [16:0] p_Val2_39_reg_3117;
wire   [15:0] tmp_81_fu_1332_p1;
reg   [15:0] tmp_81_reg_3124;
wire   [16:0] r_V_1_fu_1343_p2;
reg   [16:0] r_V_1_reg_3129;
wire  signed [31:0] tmp_3_4_fu_1349_p1;
wire    ap_CS_iter0_fsm_state9;
wire    ap_block_state9_pp0_stage8_iter0;
wire  signed [31:0] tmp_51_fu_1395_p3;
reg  signed [31:0] tmp_51_reg_3144;
wire   [17:0] tmp_52_fu_1417_p2;
reg   [17:0] tmp_52_reg_3149;
wire   [48:0] p_Val2_33_fu_1429_p2;
reg   [48:0] p_Val2_33_reg_3154;
wire  signed [31:0] tmp_70_fu_1482_p3;
reg  signed [31:0] tmp_70_reg_3159;
wire   [17:0] tmp_71_fu_1504_p2;
reg   [17:0] tmp_71_reg_3164;
wire   [48:0] p_Val2_42_fu_1517_p2;
reg   [48:0] p_Val2_42_reg_3169;
reg   [16:0] tmp_84_reg_3174;
wire  signed [31:0] tmp_3_5_fu_1550_p1;
wire    ap_CS_iter0_fsm_state10;
wire    ap_block_state10_pp0_stage9_iter0;
wire   [63:0] p_Val2_34_fu_1560_p2;
reg   [63:0] p_Val2_34_reg_3189;
wire   [49:0] p_Val2_36_fu_1572_p2;
reg   [49:0] p_Val2_36_reg_3194;
wire   [63:0] p_Val2_43_fu_1585_p2;
reg   [63:0] p_Val2_43_reg_3199;
wire   [49:0] p_Val2_45_fu_1598_p2;
reg   [49:0] p_Val2_45_reg_3204;
wire   [65:0] p_Val2_37_fu_1631_p2;
reg   [65:0] p_Val2_37_reg_3209;
wire    ap_CS_iter0_fsm_state11;
wire    ap_block_state11_pp0_stage10_iter0;
reg   [31:0] tmp_57_reg_3214;
wire   [65:0] p_Val2_46_fu_1674_p2;
reg   [65:0] p_Val2_46_reg_3220;
reg   [31:0] tmp_76_reg_3225;
wire   [33:0] r_V_2_fu_1871_p2;
reg   [33:0] r_V_2_reg_3231;
wire    ap_CS_iter0_fsm_state12;
wire    ap_block_state12_pp0_stage11_iter0;
wire   [33:0] r_V_2_1_fu_1887_p2;
reg   [33:0] r_V_2_1_reg_3236;
wire   [33:0] addconv2_fu_1893_p2;
reg   [33:0] addconv2_reg_3241;
wire   [33:0] r_V_2_3_fu_1909_p2;
reg   [33:0] r_V_2_3_reg_3246;
wire   [33:0] r_V_2_4_fu_1915_p2;
reg   [33:0] r_V_2_4_reg_3251;
wire   [33:0] r_V_2_5_fu_1921_p2;
reg   [33:0] r_V_2_5_reg_3256;
wire   [33:0] addconv4_fu_1927_p2;
reg   [33:0] addconv4_reg_3261;
wire   [33:0] r_V_2_7_fu_1933_p2;
reg   [33:0] r_V_2_7_reg_3266;
wire  signed [48:0] p_Val2_52_fu_1942_p2;
reg  signed [48:0] p_Val2_52_reg_3271;
wire    ap_CS_iter0_fsm_state13;
wire    ap_block_state13_pp0_stage12_iter0;
wire   [46:0] tmp_88_fu_1948_p1;
reg   [46:0] tmp_88_reg_3276;
wire  signed [48:0] p_Val2_81_1_fu_1955_p2;
reg  signed [48:0] p_Val2_81_1_reg_3281;
wire   [46:0] tmp_95_fu_1961_p1;
reg   [46:0] tmp_95_reg_3286;
wire   [48:0] p_Val2_81_2_fu_1968_p2;
reg   [48:0] p_Val2_81_2_reg_3291;
wire   [46:0] tmp_98_fu_1974_p1;
reg   [46:0] tmp_98_reg_3296;
wire  signed [48:0] p_Val2_81_3_fu_1981_p2;
reg  signed [48:0] p_Val2_81_3_reg_3301;
wire   [46:0] tmp_101_fu_1987_p1;
reg   [46:0] tmp_101_reg_3306;
wire  signed [50:0] tmp_93_cast_cast1_fu_2001_p1;
reg  signed [50:0] tmp_93_cast_cast1_reg_3311;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_sig_ioackin_OUT_r_AWREADY;
wire  signed [52:0] tmp_93_cast_cast2_fu_2005_p1;
reg  signed [52:0] tmp_93_cast_cast2_reg_3318;
wire  signed [46:0] tmp_89_fu_2017_p1;
reg  signed [46:0] tmp_89_reg_3323;
wire  signed [15:0] p_Val2_54_fu_2092_p3;
reg  signed [15:0] p_Val2_54_reg_3331;
wire  signed [15:0] p_Val2_83_1_fu_2178_p3;
reg  signed [15:0] p_Val2_83_1_reg_3337;
wire  signed [15:0] p_Val2_83_2_fu_2260_p3;
reg  signed [15:0] p_Val2_83_2_reg_3343;
wire  signed [15:0] p_Val2_83_3_fu_2346_p3;
reg  signed [15:0] p_Val2_83_3_reg_3349;
wire   [48:0] p_Val2_81_4_fu_2357_p2;
reg   [48:0] p_Val2_81_4_reg_3355;
wire   [46:0] tmp_104_fu_2363_p1;
reg   [46:0] tmp_104_reg_3360;
wire  signed [48:0] p_Val2_81_5_fu_2370_p2;
reg  signed [48:0] p_Val2_81_5_reg_3365;
wire   [46:0] tmp_108_fu_2376_p1;
reg   [46:0] tmp_108_reg_3370;
wire   [48:0] p_Val2_81_6_fu_2383_p2;
reg   [48:0] p_Val2_81_6_reg_3375;
wire   [46:0] tmp_112_fu_2389_p1;
reg   [46:0] tmp_112_reg_3380;
wire   [48:0] p_Val2_81_7_fu_2396_p2;
reg   [48:0] p_Val2_81_7_reg_3385;
wire   [46:0] tmp_114_fu_2402_p1;
reg   [46:0] tmp_114_reg_3390;
wire  signed [31:0] tmp_94_fu_2406_p1;
wire    ap_block_state15_pp0_stage14_iter0;
wire  signed [15:0] p_Val2_83_4_fu_2482_p3;
reg  signed [15:0] p_Val2_83_4_reg_3405;
wire  signed [15:0] p_Val2_83_5_fu_2566_p3;
reg  signed [15:0] p_Val2_83_5_reg_3411;
wire  signed [15:0] p_Val2_83_6_fu_2646_p3;
reg  signed [15:0] p_Val2_83_6_reg_3417;
wire  signed [15:0] p_Val2_83_7_fu_2726_p3;
reg  signed [15:0] p_Val2_83_7_reg_3423;
wire  signed [31:0] tmp_114_1_fu_2734_p1;
wire    ap_block_state16_pp0_stage15_iter0;
wire  signed [31:0] tmp_114_2_fu_2738_p1;
wire    ap_block_state17_pp0_stage16_iter0;
wire  signed [31:0] tmp_114_3_fu_2742_p1;
wire    ap_block_state18_pp0_stage17_iter0;
wire  signed [31:0] tmp_114_4_fu_2746_p1;
wire    ap_block_state19_pp0_stage18_iter0;
wire  signed [31:0] tmp_114_5_fu_2750_p1;
wire    ap_block_state20_pp0_stage19_iter0;
wire  signed [31:0] tmp_114_6_fu_2754_p1;
wire    ap_block_state21_pp0_stage20_iter0;
wire  signed [31:0] tmp_114_7_fu_2758_p1;
reg   [15:0] ap_phi_mux_p_Val2_s_16_phi_fu_671_p4;
reg   [15:0] ap_phi_mux_p_Val2_24_phi_fu_682_p4;
wire   [15:0] phitmp6_fu_1275_p3;
reg   [15:0] ap_phi_mux_p_Val2_25_phi_fu_693_p4;
reg    ap_reg_ioackin_OUT_r_AWREADY;
reg    ap_reg_ioackin_OUT_r_WREADY;
wire   [15:0] tmp_39_fu_824_p1;
wire   [15:0] tmp_42_fu_945_p1;
wire  signed [15:0] ret_V_fu_712_p1;
wire  signed [15:0] tmp_18_fu_722_p1;
wire  signed [15:0] tmp_35_fu_730_p0;
wire   [12:0] tmp_35_fu_730_p1;
wire   [2:0] ret_V_fu_712_p4;
wire   [0:0] tmp_5_fu_734_p2;
wire   [2:0] ret_V_1_fu_740_p2;
wire   [0:0] tmp_18_fu_722_p3;
wire   [2:0] p_s_fu_746_p3;
wire   [2:0] p_1_fu_754_p3;
wire  signed [15:0] tmp_8_fu_792_p0;
wire  signed [16:0] tmp_8_fu_792_p1;
wire  signed [16:0] tmp_9_fu_796_p1;
wire  signed [15:0] tmp_4_cast_fu_814_p0;
wire  signed [17:0] tmp_cast_fu_806_p1;
wire  signed [17:0] tmp_4_cast_fu_814_p1;
wire  signed [31:0] tmp_fu_838_p1;
wire   [31:0] tmp_6_fu_841_p2;
wire   [0:0] tmp_s_fu_847_p2;
wire   [0:0] tmp_1_fu_853_p2;
wire   [0:0] tmp_4_fu_867_p2;
wire   [31:0] p_tmp_6_cast_fu_859_p3;
wire  signed [16:0] p_Val2_7_fu_894_p0;
wire  signed [31:0] p_Val2_7_fu_894_p1;
wire  signed [17:0] p_Val2_8_fu_907_p0;
wire  signed [31:0] p_Val2_8_fu_907_p1;
wire  signed [15:0] tmp_19_fu_913_p0;
wire  signed [16:0] tmp_19_fu_913_p1;
wire  signed [16:0] tmp_20_fu_917_p1;
wire  signed [15:0] tmp_28_cast_fu_935_p0;
wire  signed [17:0] tmp_23_cast_fu_927_p1;
wire  signed [17:0] tmp_28_cast_fu_935_p1;
wire  signed [31:0] p_Val2_6_fu_966_p0;
wire  signed [31:0] p_Val2_6_fu_966_p1;
wire  signed [31:0] tmp_21_fu_976_p1;
wire   [31:0] tmp_22_fu_979_p2;
wire   [0:0] tmp_23_fu_985_p2;
wire   [0:0] tmp_24_fu_991_p2;
wire   [0:0] tmp_25_fu_1005_p2;
wire   [31:0] p_tmp_1_cast_fu_997_p3;
wire  signed [16:0] p_Val2_17_fu_1032_p0;
wire  signed [31:0] p_Val2_17_fu_1032_p1;
wire  signed [17:0] p_Val2_18_fu_1045_p0;
wire  signed [31:0] p_Val2_18_fu_1045_p1;
wire  signed [15:0] tmp_36_fu_1051_p0;
wire  signed [16:0] tmp_36_fu_1051_p1;
wire  signed [16:0] tmp_37_fu_1055_p1;
wire  signed [15:0] tmp_3_fu_1065_p0;
wire  signed [63:0] p_Val2_7_cast_fu_1070_p1;
wire   [64:0] tmp_11_fu_1073_p1;
wire   [64:0] tmp_12_fu_1077_p1;
wire  signed [31:0] p_Val2_16_fu_1092_p0;
wire  signed [31:0] p_Val2_16_fu_1092_p1;
wire  signed [16:0] p_Val2_23_fu_1105_p0;
wire  signed [31:0] p_Val2_23_fu_1105_p1;
wire   [48:0] p_Val2_23_fu_1105_p2;
wire  signed [63:0] p_Val2_8_cast_fu_1125_p1;
wire   [65:0] tmp_14_fu_1131_p1;
wire   [65:0] tmp_13_fu_1128_p1;
wire   [65:0] p_Val2_10_fu_1135_p2;
wire   [31:0] tmp_15_fu_1141_p4;
wire  signed [63:0] p_Val2_17_cast_fu_1163_p1;
wire   [64:0] tmp_28_fu_1166_p1;
wire   [64:0] tmp_29_fu_1170_p1;
wire   [64:0] p_Val2_19_fu_1173_p2;
wire  signed [63:0] p_Val2_18_cast_fu_1179_p1;
wire   [65:0] tmp_31_fu_1186_p1;
wire   [65:0] tmp_30_fu_1182_p1;
wire   [0:0] tmp_16_fu_1151_p2;
wire   [0:0] tmp_17_fu_1157_p2;
wire   [0:0] tmp_40_fu_1224_p2;
wire   [15:0] tmp_39_cast_fu_1216_p3;
wire   [15:0] tmp_38_fu_1206_p4;
wire   [0:0] tmp_33_fu_1242_p2;
wire   [0:0] tmp_34_fu_1247_p2;
wire   [0:0] tmp_43_fu_1269_p2;
wire   [15:0] tmp_42_cast_fu_1261_p3;
wire   [15:0] tmp_41_fu_1252_p4;
wire   [15:0] p_Val2_28_fu_1296_p3;
wire  signed [16:0] tmp_44_fu_1302_p1;
wire  signed [16:0] tmp_45_fu_1306_p1;
wire   [15:0] p_Val2_27_fu_1290_p3;
wire  signed [16:0] tmp_63_fu_1319_p1;
wire  signed [16:0] tmp_64_fu_1323_p1;
wire   [15:0] p_Val2_26_fu_1284_p3;
wire  signed [16:0] tmp_82_fu_1336_p1;
wire  signed [16:0] tmp_83_fu_1340_p1;
wire  signed [31:0] tmp_46_fu_1357_p1;
wire   [31:0] tmp_47_fu_1363_p2;
wire   [0:0] tmp_48_fu_1369_p2;
wire   [0:0] tmp_49_fu_1375_p2;
wire   [0:0] tmp_50_fu_1389_p2;
wire   [31:0] p_tmp_3_cast_fu_1381_p3;
wire  signed [15:0] tmp_52_cast_fu_1413_p0;
wire  signed [17:0] tmp_47_cast_fu_1360_p1;
wire  signed [17:0] tmp_52_cast_fu_1413_p1;
wire  signed [16:0] p_Val2_33_fu_1429_p0;
wire  signed [31:0] p_Val2_33_fu_1429_p1;
wire  signed [31:0] tmp_65_fu_1444_p1;
wire   [31:0] tmp_66_fu_1450_p2;
wire   [0:0] tmp_67_fu_1456_p2;
wire   [0:0] tmp_68_fu_1462_p2;
wire   [0:0] tmp_69_fu_1476_p2;
wire   [31:0] p_tmp_4_cast_fu_1468_p3;
wire  signed [15:0] tmp_72_cast_fu_1500_p0;
wire  signed [17:0] tmp_67_cast_fu_1447_p1;
wire  signed [17:0] tmp_72_cast_fu_1500_p1;
wire  signed [16:0] p_Val2_42_fu_1517_p0;
wire  signed [31:0] p_Val2_42_fu_1517_p1;
wire  signed [16:0] p_Val2_48_fu_1534_p0;
wire  signed [31:0] p_Val2_48_fu_1534_p1;
wire   [48:0] p_Val2_48_fu_1534_p2;
wire  signed [31:0] p_Val2_34_fu_1560_p0;
wire  signed [31:0] p_Val2_34_fu_1560_p1;
wire  signed [17:0] p_Val2_36_fu_1572_p0;
wire  signed [31:0] p_Val2_36_fu_1572_p1;
wire  signed [31:0] p_Val2_43_fu_1585_p0;
wire  signed [31:0] p_Val2_43_fu_1585_p1;
wire  signed [17:0] p_Val2_45_fu_1598_p0;
wire  signed [31:0] p_Val2_45_fu_1598_p1;
wire  signed [63:0] p_Val2_33_cast_fu_1604_p1;
wire   [64:0] tmp_53_fu_1607_p1;
wire   [64:0] tmp_54_fu_1611_p1;
wire   [64:0] p_Val2_35_fu_1614_p2;
wire  signed [63:0] p_Val2_36_cast_fu_1620_p1;
wire   [65:0] tmp_56_fu_1627_p1;
wire   [65:0] tmp_55_fu_1623_p1;
wire  signed [63:0] p_Val2_42_cast_fu_1647_p1;
wire   [64:0] tmp_72_fu_1650_p1;
wire   [64:0] tmp_73_fu_1654_p1;
wire   [64:0] p_Val2_44_fu_1657_p2;
wire  signed [63:0] p_Val2_45_cast_fu_1663_p1;
wire   [65:0] tmp_75_fu_1670_p1;
wire   [65:0] tmp_74_fu_1666_p1;
wire   [16:0] tmp_60_fu_1700_p4;
wire   [0:0] tmp_58_fu_1690_p2;
wire   [0:0] tmp_59_fu_1695_p2;
wire   [0:0] sel_tmp_fu_1717_p2;
wire   [0:0] sel_tmp2_fu_1723_p2;
wire   [16:0] tmp_79_fu_1745_p4;
wire   [0:0] tmp_77_fu_1735_p2;
wire   [0:0] tmp_78_fu_1740_p2;
wire   [0:0] sel_tmp6_fu_1762_p2;
wire   [0:0] sel_tmp7_fu_1768_p2;
wire   [0:0] tmp_61_fu_1729_p2;
wire   [18:0] tmp_85_cast_fu_1780_p3;
wire   [18:0] phitmp1_fu_1709_p3;
wire   [18:0] tmp_85_fu_1788_p3;
wire   [31:0] p_shl1_fu_1796_p3;
wire   [0:0] tmp_80_fu_1774_p2;
wire   [18:0] tmp_87_cast_fu_1808_p3;
wire   [18:0] phitmp2_fu_1754_p3;
wire   [18:0] tmp_86_fu_1816_p3;
wire   [31:0] p_Val2_50_fu_1824_p3;
wire  signed [32:0] p_Val2_50_cast_fu_1832_p1;
wire  signed [32:0] p_shl1_cast_fu_1804_p1;
wire  signed [31:0] p_shl_fu_1842_p3;
wire  signed [32:0] p_shl_cast_fu_1853_p1;
wire   [32:0] addconv_fu_1836_p2;
wire   [32:0] p_Val2_51_fu_1857_p2;
wire  signed [33:0] tmp_90_cast_fu_1863_p1;
wire  signed [33:0] p_shl_cast1_fu_1849_p1;
wire   [32:0] sum_fu_1877_p2;
wire  signed [33:0] sum_cast_fu_1883_p1;
wire   [32:0] addconv3_fu_1899_p2;
wire  signed [33:0] tmp_102_3_cast_fu_1905_p1;
wire  signed [33:0] tmp_91_cast_fu_1867_p1;
wire  signed [33:0] p_Val2_52_fu_1942_p1;
wire  signed [33:0] p_Val2_81_1_fu_1955_p1;
wire  signed [33:0] p_Val2_81_2_fu_1968_p1;
wire  signed [33:0] p_Val2_81_3_fu_1981_p1;
wire  signed [45:0] tmp_87_fu_1994_p3;
wire  signed [49:0] p_Val2_52_cast_fu_1991_p1;
wire   [51:0] tmp_90_cast9_fu_2013_p1;
wire  signed [51:0] tmp_93_cast_cast_fu_2009_p1;
wire   [46:0] p_Val2_54_cast_fu_2027_p2;
wire   [18:0] tmp_90_fu_2032_p4;
wire   [51:0] p_Val2_53_fu_2021_p2;
wire   [0:0] tmp_91_fu_2042_p3;
wire   [0:0] tmp_92_fu_2050_p2;
wire   [0:0] sel_tmp1_fu_2066_p2;
wire   [0:0] sel_tmp4_fu_2072_p2;
wire   [0:0] tmp_93_fu_2086_p2;
wire   [15:0] sel_tmp5_cast_fu_2078_p3;
wire   [15:0] phitmp4_fu_2056_p4;
wire  signed [50:0] p_Val2_81_1_cast_fu_2100_p1;
wire   [52:0] tmp_10646_1_cast_fu_2103_p1;
wire   [46:0] p_Val2_82_1_cast_fu_2113_p2;
wire   [18:0] tmp_108_1_fu_2118_p4;
wire   [52:0] p_Val2_82_1_fu_2107_p2;
wire   [0:0] tmp_96_fu_2128_p3;
wire   [0:0] tmp_110_1_fu_2136_p2;
wire   [0:0] sel_tmp9_fu_2152_p2;
wire   [0:0] sel_tmp3_fu_2158_p2;
wire   [0:0] tmp_97_fu_2172_p2;
wire   [15:0] sel_tmp8_cast_fu_2164_p3;
wire   [15:0] phitmp49_1_fu_2142_p4;
wire   [50:0] tmp_10646_2_cast_fu_2186_p1;
wire   [46:0] p_Val2_82_2_cast_fu_2195_p2;
wire   [18:0] tmp_108_2_fu_2200_p4;
wire   [50:0] p_Val2_82_2_fu_2189_p2;
wire   [0:0] tmp_99_fu_2210_p3;
wire   [0:0] tmp_110_2_fu_2218_p2;
wire   [0:0] sel_tmp5_fu_2234_p2;
wire   [0:0] sel_tmp8_fu_2240_p2;
wire   [0:0] tmp_100_fu_2254_p2;
wire   [15:0] sel_tmp12_cast_fu_2246_p3;
wire   [15:0] phitmp49_2_fu_2224_p4;
wire  signed [49:0] p_Val2_81_3_cast_fu_2268_p1;
wire   [51:0] tmp_10646_3_cast_fu_2271_p1;
wire   [46:0] p_Val2_82_3_cast_fu_2281_p2;
wire   [18:0] tmp_108_3_fu_2286_p4;
wire   [51:0] p_Val2_82_3_fu_2275_p2;
wire   [0:0] tmp_102_fu_2296_p3;
wire   [0:0] tmp_110_3_fu_2304_p2;
wire   [0:0] sel_tmp10_fu_2320_p2;
wire   [0:0] sel_tmp11_fu_2326_p2;
wire   [0:0] tmp_103_fu_2340_p2;
wire   [15:0] sel_tmp15_cast_fu_2332_p3;
wire   [15:0] phitmp49_3_fu_2310_p4;
wire  signed [33:0] p_Val2_81_4_fu_2357_p1;
wire  signed [33:0] p_Val2_81_5_fu_2370_p1;
wire  signed [33:0] p_Val2_81_6_fu_2383_p1;
wire  signed [33:0] p_Val2_81_7_fu_2396_p1;
wire   [50:0] tmp_10646_4_cast_fu_2410_p1;
wire   [46:0] p_Val2_82_4_cast_fu_2418_p2;
wire   [18:0] tmp_108_4_fu_2422_p4;
wire   [50:0] p_Val2_82_4_fu_2413_p2;
wire   [0:0] tmp_106_fu_2432_p3;
wire   [0:0] tmp_110_4_fu_2440_p2;
wire   [0:0] sel_tmp12_fu_2456_p2;
wire   [0:0] sel_tmp13_fu_2462_p2;
wire   [0:0] tmp_105_fu_2476_p2;
wire   [15:0] sel_tmp18_cast_fu_2468_p3;
wire   [15:0] phitmp49_4_fu_2446_p4;
wire  signed [50:0] p_Val2_81_5_cast_fu_2490_p1;
wire   [52:0] tmp_10646_5_cast_fu_2493_p1;
wire   [46:0] p_Val2_82_5_cast_fu_2502_p2;
wire   [18:0] tmp_108_5_fu_2506_p4;
wire   [52:0] p_Val2_82_5_fu_2497_p2;
wire   [0:0] tmp_110_fu_2516_p3;
wire   [0:0] tmp_110_5_fu_2524_p2;
wire   [0:0] sel_tmp14_fu_2540_p2;
wire   [0:0] sel_tmp15_fu_2546_p2;
wire   [0:0] tmp_107_fu_2560_p2;
wire   [15:0] sel_tmp21_cast_fu_2552_p3;
wire   [15:0] phitmp49_5_fu_2530_p4;
wire   [50:0] tmp_10646_6_cast_fu_2574_p1;
wire   [46:0] p_Val2_82_6_cast_fu_2582_p2;
wire   [18:0] tmp_108_6_fu_2586_p4;
wire   [50:0] p_Val2_82_6_fu_2577_p2;
wire   [0:0] tmp_113_fu_2596_p3;
wire   [0:0] tmp_110_6_fu_2604_p2;
wire   [0:0] sel_tmp16_fu_2620_p2;
wire   [0:0] sel_tmp17_fu_2626_p2;
wire   [0:0] tmp_109_fu_2640_p2;
wire   [15:0] sel_tmp24_cast_fu_2632_p3;
wire   [15:0] phitmp49_6_fu_2610_p4;
wire   [50:0] tmp_10646_7_cast_fu_2654_p1;
wire   [46:0] p_Val2_82_7_cast_fu_2662_p2;
wire   [18:0] tmp_108_7_fu_2666_p4;
wire   [50:0] p_Val2_82_7_fu_2657_p2;
wire   [0:0] tmp_115_fu_2676_p3;
wire   [0:0] tmp_110_7_fu_2684_p2;
wire   [0:0] sel_tmp18_fu_2700_p2;
wire   [0:0] sel_tmp19_fu_2706_p2;
wire   [0:0] tmp_111_fu_2720_p2;
wire   [15:0] sel_tmp27_cast_fu_2712_p3;
wire   [15:0] phitmp49_7_fu_2690_p4;
reg   [21:0] ap_NS_iter0_fsm;
reg   [5:0] ap_NS_iter1_fsm;
reg    ap_condition_2264;
reg    ap_condition_2267;
reg    ap_condition_729;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 22'd1;
#0 ap_CS_iter1_fsm = 6'd1;
#0 integral_pos_V_0 = 32'd0;
#0 last_error_pos_V_0 = 16'd0;
#0 integral_pos_V_1 = 32'd0;
#0 last_error_pos_V_1 = 16'd0;
#0 integral_rate_V_0 = 32'd0;
#0 last_error_rate_V_0 = 16'd0;
#0 integral_rate_V_1 = 32'd0;
#0 last_error_rate_V_1 = 16'd0;
#0 ap_reg_ioackin_OUT_r_AWREADY = 1'b0;
#0 ap_reg_ioackin_OUT_r_WREADY = 1'b0;
end

pid_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
pid_CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .kp_V_address0(kp_V_address0),
    .kp_V_ce0(kp_V_ce0),
    .kp_V_q0(kp_V_q0),
    .kd_V_address0(kd_V_address0),
    .kd_V_ce0(kd_V_ce0),
    .kd_V_q0(kd_V_q0),
    .ki_V_address0(ki_V_address0),
    .ki_V_ce0(ki_V_ce0),
    .ki_V_q0(ki_V_q0)
);

pid_INPUT_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_INPUT_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_INPUT_DATA_WIDTH ))
pid_INPUT_s_axi_U(
    .AWVALID(s_axi_INPUT_AWVALID),
    .AWREADY(s_axi_INPUT_AWREADY),
    .AWADDR(s_axi_INPUT_AWADDR),
    .WVALID(s_axi_INPUT_WVALID),
    .WREADY(s_axi_INPUT_WREADY),
    .WDATA(s_axi_INPUT_WDATA),
    .WSTRB(s_axi_INPUT_WSTRB),
    .ARVALID(s_axi_INPUT_ARVALID),
    .ARREADY(s_axi_INPUT_ARREADY),
    .ARADDR(s_axi_INPUT_ARADDR),
    .RVALID(s_axi_INPUT_RVALID),
    .RREADY(s_axi_INPUT_RREADY),
    .RDATA(s_axi_INPUT_RDATA),
    .RRESP(s_axi_INPUT_RRESP),
    .BVALID(s_axi_INPUT_BVALID),
    .BREADY(s_axi_INPUT_BREADY),
    .BRESP(s_axi_INPUT_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .cmdIn_V_address0(cmdIn_V_address0),
    .cmdIn_V_ce0(cmdIn_V_ce0),
    .cmdIn_V_q0(cmdIn_V_q0),
    .measured_V_address0(measured_V_address0),
    .measured_V_ce0(measured_V_ce0),
    .measured_V_q0(measured_V_q0)
);

pid_TEST_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_TEST_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_TEST_DATA_WIDTH ))
pid_TEST_s_axi_U(
    .AWVALID(s_axi_TEST_AWVALID),
    .AWREADY(s_axi_TEST_AWREADY),
    .AWADDR(s_axi_TEST_AWADDR),
    .WVALID(s_axi_TEST_WVALID),
    .WREADY(s_axi_TEST_WREADY),
    .WDATA(s_axi_TEST_WDATA),
    .WSTRB(s_axi_TEST_WSTRB),
    .ARVALID(s_axi_TEST_ARVALID),
    .ARREADY(s_axi_TEST_ARREADY),
    .ARADDR(s_axi_TEST_ARADDR),
    .RVALID(s_axi_TEST_RVALID),
    .RREADY(s_axi_TEST_RREADY),
    .RDATA(s_axi_TEST_RDATA),
    .RRESP(s_axi_TEST_RRESP),
    .BVALID(s_axi_TEST_BVALID),
    .BREADY(s_axi_TEST_BREADY),
    .BRESP(s_axi_TEST_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .test_V_address0(test_V_address0),
    .test_V_ce0(test_V_ce0),
    .test_V_we0(test_V_we0),
    .test_V_d0(test_V_d0)
);

pid_OUT_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUT_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUT_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUT_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUT_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUT_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUT_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUT_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUT_R_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_OUT_R_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_OUT_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUT_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUT_R_CACHE_VALUE ))
pid_OUT_r_m_axi_U(
    .AWVALID(m_axi_OUT_r_AWVALID),
    .AWREADY(m_axi_OUT_r_AWREADY),
    .AWADDR(m_axi_OUT_r_AWADDR),
    .AWID(m_axi_OUT_r_AWID),
    .AWLEN(m_axi_OUT_r_AWLEN),
    .AWSIZE(m_axi_OUT_r_AWSIZE),
    .AWBURST(m_axi_OUT_r_AWBURST),
    .AWLOCK(m_axi_OUT_r_AWLOCK),
    .AWCACHE(m_axi_OUT_r_AWCACHE),
    .AWPROT(m_axi_OUT_r_AWPROT),
    .AWQOS(m_axi_OUT_r_AWQOS),
    .AWREGION(m_axi_OUT_r_AWREGION),
    .AWUSER(m_axi_OUT_r_AWUSER),
    .WVALID(m_axi_OUT_r_WVALID),
    .WREADY(m_axi_OUT_r_WREADY),
    .WDATA(m_axi_OUT_r_WDATA),
    .WSTRB(m_axi_OUT_r_WSTRB),
    .WLAST(m_axi_OUT_r_WLAST),
    .WID(m_axi_OUT_r_WID),
    .WUSER(m_axi_OUT_r_WUSER),
    .ARVALID(m_axi_OUT_r_ARVALID),
    .ARREADY(m_axi_OUT_r_ARREADY),
    .ARADDR(m_axi_OUT_r_ARADDR),
    .ARID(m_axi_OUT_r_ARID),
    .ARLEN(m_axi_OUT_r_ARLEN),
    .ARSIZE(m_axi_OUT_r_ARSIZE),
    .ARBURST(m_axi_OUT_r_ARBURST),
    .ARLOCK(m_axi_OUT_r_ARLOCK),
    .ARCACHE(m_axi_OUT_r_ARCACHE),
    .ARPROT(m_axi_OUT_r_ARPROT),
    .ARQOS(m_axi_OUT_r_ARQOS),
    .ARREGION(m_axi_OUT_r_ARREGION),
    .ARUSER(m_axi_OUT_r_ARUSER),
    .RVALID(m_axi_OUT_r_RVALID),
    .RREADY(m_axi_OUT_r_RREADY),
    .RDATA(m_axi_OUT_r_RDATA),
    .RLAST(m_axi_OUT_r_RLAST),
    .RID(m_axi_OUT_r_RID),
    .RUSER(m_axi_OUT_r_RUSER),
    .RRESP(m_axi_OUT_r_RRESP),
    .BVALID(m_axi_OUT_r_BVALID),
    .BREADY(m_axi_OUT_r_BREADY),
    .BRESP(m_axi_OUT_r_BRESP),
    .BID(m_axi_OUT_r_BID),
    .BUSER(m_axi_OUT_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(OUT_r_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(OUT_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(OUT_r_RDATA),
    .I_RID(OUT_r_RID),
    .I_RUSER(OUT_r_RUSER),
    .I_RRESP(OUT_r_RRESP),
    .I_RLAST(OUT_r_RLAST),
    .I_AWVALID(OUT_r_AWVALID),
    .I_AWREADY(OUT_r_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd8),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(OUT_r_WVALID),
    .I_WREADY(OUT_r_WREADY),
    .I_WDATA(OUT_r_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(OUT_r_BVALID),
    .I_BREADY(OUT_r_BREADY),
    .I_BRESP(OUT_r_BRESP),
    .I_BID(OUT_r_BID),
    .I_BUSER(OUT_r_BUSER)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_OUT_r_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_iter0_fsm_state14)) begin
            if ((1'b1 == ap_condition_729)) begin
                ap_reg_ioackin_OUT_r_AWREADY <= 1'b0;
            end else if ((1'b1 == ap_condition_2267)) begin
                ap_reg_ioackin_OUT_r_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_OUT_r_WREADY <= 1'b0;
    end else begin
        if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state22)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state21)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state15)))) begin
            ap_reg_ioackin_OUT_r_WREADY <= 1'b0;
        end else if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state22)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state21)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == OUT_r_WREADY) & (1'b1 == ap_CS_iter0_fsm_state15)))) begin
            ap_reg_ioackin_OUT_r_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) begin
        if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
            integral_pos_V_0 <= tmp_2_fu_873_p3;
        end else if (((tmp_7_fu_762_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
            integral_pos_V_0 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) begin
        if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
            integral_pos_V_1 <= tmp_26_fu_1011_p3;
        end else if (((tmp_7_fu_762_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
            integral_pos_V_1 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) begin
        if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
            last_error_pos_V_0 <= tmp_39_fu_824_p1;
        end else if (((tmp_7_fu_762_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
            last_error_pos_V_0 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) begin
        if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
            last_error_pos_V_1 <= tmp_42_fu_945_p1;
        end else if (((tmp_7_fu_762_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
            last_error_pos_V_1 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
        addconv2_reg_3241[33 : 15] <= addconv2_fu_1893_p2[33 : 15];
        addconv4_reg_3261[33 : 15] <= addconv4_fu_1927_p2[33 : 15];
        r_V_2_1_reg_3236[33 : 15] <= r_V_2_1_fu_1887_p2[33 : 15];
        r_V_2_3_reg_3246[33 : 15] <= r_V_2_3_fu_1909_p2[33 : 15];
        r_V_2_4_reg_3251[33 : 15] <= r_V_2_4_fu_1915_p2[33 : 15];
        r_V_2_5_reg_3256[33 : 15] <= r_V_2_5_fu_1921_p2[33 : 15];
        r_V_2_7_reg_3266[33 : 15] <= r_V_2_7_fu_1933_p2[33 : 15];
        r_V_2_reg_3231[33 : 15] <= r_V_2_fu_1871_p2[33 : 15];
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
        cmdIn_V_load_4_reg_3064 <= cmdIn_V_q0;
        kp_V_load_5_reg_3090 <= kp_V_q0;
        p_Val2_47_reg_3085 <= measured_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
        integral_rate_V_0 <= tmp_51_fu_1395_p3;
        integral_rate_V_1 <= tmp_70_fu_1482_p3;
        last_error_rate_V_0 <= tmp_62_reg_3112;
        last_error_rate_V_1 <= tmp_81_reg_3124;
        p_Val2_33_reg_3154 <= p_Val2_33_fu_1429_p2;
        p_Val2_42_reg_3169 <= p_Val2_42_fu_1517_p2;
        tmp_51_reg_3144 <= tmp_51_fu_1395_p3;
        tmp_52_reg_3149 <= tmp_52_fu_1417_p2;
        tmp_70_reg_3159 <= tmp_70_fu_1482_p3;
        tmp_71_reg_3164 <= tmp_71_fu_1504_p2;
        tmp_84_reg_3174 <= {{p_Val2_48_fu_1534_p2[29:13]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        kd_V_load_2_reg_2839 <= kd_V_q0;
        ki_V_load_2_reg_2834 <= ki_V_q0;
        kp_V_load_3_reg_2829 <= kp_V_q0;
        p_Val2_29_reg_2824 <= measured_V_q0;
        p_Val2_s_reg_2812 <= cmdIn_V_q0;
        tmp_7_reg_2817 <= tmp_7_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        ki_V_load_1_reg_2923 <= ki_V_q0;
        p_Val2_13_reg_2912 <= p_Val2_13_fu_921_p2;
        p_Val2_7_reg_2902 <= p_Val2_7_fu_894_p2;
        p_Val2_8_reg_2907 <= p_Val2_8_fu_907_p2;
        tmp_27_reg_2918 <= tmp_27_fu_939_p2;
        tmp_2_reg_2897 <= tmp_2_fu_873_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        p_Val2_11_reg_2886 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        p_Val2_16_reg_3029 <= p_Val2_16_fu_1092_p2;
        p_Val2_9_reg_3024 <= p_Val2_9_fu_1080_p2;
        phitmp_reg_3034 <= {{p_Val2_23_fu_1105_p2[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        p_Val2_17_reg_2979 <= p_Val2_17_fu_1032_p2;
        p_Val2_18_reg_2984 <= p_Val2_18_fu_1045_p2;
        p_Val2_6_reg_2969 <= p_Val2_6_fu_966_p2;
        r_V_reg_2989 <= r_V_fu_1059_p2;
        tmp_26_reg_2974 <= tmp_26_fu_1011_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        p_Val2_1_reg_2844 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
        p_Val2_20_reg_3069 <= p_Val2_20_fu_1190_p2;
        phitmp5_reg_3080 <= phitmp5_fu_1230_p3;
        tmp_32_reg_3074 <= {{p_Val2_20_fu_1190_p2[44:13]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        p_Val2_21_reg_2963 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        p_Val2_30_reg_3105 <= p_Val2_30_fu_1309_p2;
        p_Val2_39_reg_3117 <= p_Val2_39_fu_1326_p2;
        r_V_1_reg_3129 <= r_V_1_fu_1343_p2;
        tmp_62_reg_3112 <= tmp_62_fu_1315_p1;
        tmp_81_reg_3124 <= tmp_81_fu_1332_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
        p_Val2_34_reg_3189 <= p_Val2_34_fu_1560_p2;
        p_Val2_36_reg_3194 <= p_Val2_36_fu_1572_p2;
        p_Val2_43_reg_3199 <= p_Val2_43_fu_1585_p2;
        p_Val2_45_reg_3204 <= p_Val2_45_fu_1598_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
        p_Val2_37_reg_3209 <= p_Val2_37_fu_1631_p2;
        p_Val2_46_reg_3220 <= p_Val2_46_fu_1674_p2;
        tmp_57_reg_3214 <= {{p_Val2_37_fu_1631_p2[44:13]}};
        tmp_76_reg_3225 <= {{p_Val2_46_fu_1674_p2[44:13]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        p_Val2_38_reg_3039 <= measured_V_q0;
        p_Val2_49_reg_3004 <= cmdIn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        p_Val2_3_reg_2855 <= p_Val2_3_fu_800_p2;
        tmp_10_reg_2861 <= tmp_10_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state13))) begin
        p_Val2_52_reg_3271[48 : 15] <= p_Val2_52_fu_1942_p2[48 : 15];
        p_Val2_81_1_reg_3281[48 : 15] <= p_Val2_81_1_fu_1955_p2[48 : 15];
        p_Val2_81_2_reg_3291[48 : 15] <= p_Val2_81_2_fu_1968_p2[48 : 15];
        p_Val2_81_3_reg_3301[48 : 15] <= p_Val2_81_3_fu_1981_p2[48 : 15];
        tmp_101_reg_3306[46 : 15] <= tmp_101_fu_1987_p1[46 : 15];
        tmp_88_reg_3276[46 : 15] <= tmp_88_fu_1948_p1[46 : 15];
        tmp_95_reg_3286[46 : 15] <= tmp_95_fu_1961_p1[46 : 15];
        tmp_98_reg_3296[46 : 15] <= tmp_98_fu_1974_p1[46 : 15];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state27) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state14))) begin
        p_Val2_54_reg_3331 <= p_Val2_54_fu_2092_p3;
        p_Val2_81_4_reg_3355[48 : 15] <= p_Val2_81_4_fu_2357_p2[48 : 15];
        p_Val2_81_5_reg_3365[48 : 15] <= p_Val2_81_5_fu_2370_p2[48 : 15];
        p_Val2_81_6_reg_3375[48 : 15] <= p_Val2_81_6_fu_2383_p2[48 : 15];
        p_Val2_81_7_reg_3385[48 : 15] <= p_Val2_81_7_fu_2396_p2[48 : 15];
        p_Val2_83_1_reg_3337 <= p_Val2_83_1_fu_2178_p3;
        p_Val2_83_2_reg_3343 <= p_Val2_83_2_fu_2260_p3;
        p_Val2_83_3_reg_3349 <= p_Val2_83_3_fu_2346_p3;
        tmp_104_reg_3360[46 : 15] <= tmp_104_fu_2363_p1[46 : 15];
        tmp_108_reg_3370[46 : 15] <= tmp_108_fu_2376_p1[46 : 15];
        tmp_112_reg_3380[46 : 15] <= tmp_112_fu_2389_p1[46 : 15];
        tmp_114_reg_3390[46 : 15] <= tmp_114_fu_2402_p1[46 : 15];
        tmp_89_reg_3323[46 : 30] <= tmp_89_fu_2017_p1[46 : 30];
        tmp_93_cast_cast1_reg_3311[50 : 30] <= tmp_93_cast_cast1_fu_2001_p1[50 : 30];
        tmp_93_cast_cast2_reg_3318[52 : 30] <= tmp_93_cast_cast2_fu_2005_p1[52 : 30];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state15))) begin
        p_Val2_83_4_reg_3405 <= p_Val2_83_4_fu_2482_p3;
        p_Val2_83_5_reg_3411 <= p_Val2_83_5_fu_2566_p3;
        p_Val2_83_6_reg_3417 <= p_Val2_83_6_fu_2646_p3;
        p_Val2_83_7_reg_3423 <= p_Val2_83_7_fu_2726_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        reg_700 <= kp_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        reg_704 <= ki_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        reg_708 <= kd_V_q0;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter1_fsm_state27) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (ap_reg_ioackin_OUT_r_AWREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state14))) begin
        OUT_r_AWVALID = 1'b1;
    end else begin
        OUT_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state27) & (1'b1 == OUT_r_BVALID))) begin
        OUT_r_BREADY = 1'b1;
    end else begin
        OUT_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2264)) begin
        if ((1'b1 == ap_CS_iter0_fsm_state22)) begin
            OUT_r_WDATA = p_Val2_83_7_reg_3423;
        end else if ((1'b1 == ap_CS_iter0_fsm_state21)) begin
            OUT_r_WDATA = p_Val2_83_6_reg_3417;
        end else if ((1'b1 == ap_CS_iter0_fsm_state20)) begin
            OUT_r_WDATA = p_Val2_83_5_reg_3411;
        end else if ((1'b1 == ap_CS_iter0_fsm_state19)) begin
            OUT_r_WDATA = p_Val2_83_4_reg_3405;
        end else if ((1'b1 == ap_CS_iter0_fsm_state18)) begin
            OUT_r_WDATA = p_Val2_83_3_reg_3349;
        end else if ((1'b1 == ap_CS_iter0_fsm_state17)) begin
            OUT_r_WDATA = p_Val2_83_2_reg_3343;
        end else if ((1'b1 == ap_CS_iter0_fsm_state16)) begin
            OUT_r_WDATA = p_Val2_83_1_reg_3337;
        end else if ((1'b1 == ap_CS_iter0_fsm_state15)) begin
            OUT_r_WDATA = p_Val2_54_reg_3331;
        end else begin
            OUT_r_WDATA = 'bx;
        end
    end else begin
        OUT_r_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state22)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state21)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state15)))) begin
        OUT_r_WVALID = 1'b1;
    end else begin
        OUT_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state14)) begin
        OUT_r_blk_n_AW = m_axi_OUT_r_AWREADY;
    end else begin
        OUT_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter1_fsm_state27)) begin
        OUT_r_blk_n_B = m_axi_OUT_r_BVALID;
    end else begin
        OUT_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state22) | (1'b1 == ap_CS_iter0_fsm_state21) | (1'b1 == ap_CS_iter0_fsm_state20) | (1'b1 == ap_CS_iter0_fsm_state19) | (1'b1 == ap_CS_iter0_fsm_state18) | (1'b1 == ap_CS_iter0_fsm_state17) | (1'b1 == ap_CS_iter0_fsm_state16) | (1'b1 == ap_CS_iter0_fsm_state15))) begin
        OUT_r_blk_n_W = m_axi_OUT_r_WREADY;
    end else begin
        OUT_r_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state27) & (1'b1 == OUT_r_BVALID))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        ap_phi_mux_p_Val2_24_phi_fu_682_p4 = phitmp6_fu_1275_p3;
    end else begin
        ap_phi_mux_p_Val2_24_phi_fu_682_p4 = 16'd0;
    end
end

always @ (*) begin
    if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        ap_phi_mux_p_Val2_25_phi_fu_693_p4 = phitmp5_reg_3080;
    end else begin
        ap_phi_mux_p_Val2_25_phi_fu_693_p4 = 16'd0;
    end
end

always @ (*) begin
    if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        ap_phi_mux_p_Val2_s_16_phi_fu_671_p4 = phitmp_reg_3034;
    end else begin
        ap_phi_mux_p_Val2_s_16_phi_fu_671_p4 = 16'd0;
    end
end

always @ (*) begin
    if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state22))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_OUT_r_AWREADY == 1'b0)) begin
        ap_sig_ioackin_OUT_r_AWREADY = OUT_r_AWREADY;
    end else begin
        ap_sig_ioackin_OUT_r_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_OUT_r_WREADY == 1'b0)) begin
        ap_sig_ioackin_OUT_r_WREADY = OUT_r_WREADY;
    end else begin
        ap_sig_ioackin_OUT_r_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        cmdIn_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        cmdIn_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        cmdIn_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_iter0_fsm_state3)) begin
        cmdIn_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_iter0_fsm_state2)) begin
        cmdIn_V_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        cmdIn_V_address0 = 64'd5;
    end else begin
        cmdIn_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        cmdIn_V_ce0 = 1'b1;
    end else begin
        cmdIn_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        kd_V_address0 = 64'd3;
    end else if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        kd_V_address0 = 64'd1;
    end else if (((tmp_7_fu_762_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        kd_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        kd_V_address0 = 64'd2;
    end else begin
        kd_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_fu_762_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        kd_V_ce0 = 1'b1;
    end else begin
        kd_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state4)) begin
        ki_V_address0 = 64'd3;
    end else if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        ki_V_address0 = 64'd1;
    end else if (((tmp_7_fu_762_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        ki_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        ki_V_address0 = 64'd2;
    end else begin
        ki_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_fu_762_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        ki_V_ce0 = 1'b1;
    end else begin
        ki_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        kp_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        kp_V_address0 = 64'd4;
    end else if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        kp_V_address0 = 64'd2;
    end else if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        kp_V_address0 = 64'd1;
    end else if (((tmp_7_fu_762_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        kp_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        kp_V_address0 = 64'd3;
    end else begin
        kp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_fu_762_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        kp_V_ce0 = 1'b1;
    end else begin
        kp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        measured_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        measured_V_address0 = 64'd4;
    end else if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        measured_V_address0 = 64'd2;
    end else if (((tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        measured_V_address0 = 64'd1;
    end else if (((tmp_7_fu_762_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        measured_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start == 1'b1))) begin
        measured_V_address0 = 64'd3;
    end else begin
        measured_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_fu_762_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (tmp_7_reg_2817 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        measured_V_ce0 = 1'b1;
    end else begin
        measured_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state22)) begin
        test_V_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_iter0_fsm_state21)) begin
        test_V_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_iter0_fsm_state20)) begin
        test_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_iter0_fsm_state19)) begin
        test_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_iter0_fsm_state18)) begin
        test_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_iter0_fsm_state17)) begin
        test_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_iter0_fsm_state16)) begin
        test_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_iter0_fsm_state15)) begin
        test_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_iter0_fsm_state10)) begin
        test_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_iter0_fsm_state9)) begin
        test_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_iter0_fsm_state8)) begin
        test_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_iter0_fsm_state7)) begin
        test_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        test_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        test_V_address0 = 64'd1;
    end else begin
        test_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state23) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state22)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state11)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state9)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state8)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state7)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state21)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state15)))) begin
        test_V_ce0 = 1'b1;
    end else begin
        test_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state22)) begin
        test_V_d0 = tmp_114_7_fu_2758_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state21)) begin
        test_V_d0 = tmp_114_6_fu_2754_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state20)) begin
        test_V_d0 = tmp_114_5_fu_2750_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state19)) begin
        test_V_d0 = tmp_114_4_fu_2746_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state18)) begin
        test_V_d0 = tmp_114_3_fu_2742_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state17)) begin
        test_V_d0 = tmp_114_2_fu_2738_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state16)) begin
        test_V_d0 = tmp_114_1_fu_2734_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state15)) begin
        test_V_d0 = tmp_94_fu_2406_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state10)) begin
        test_V_d0 = tmp_3_5_fu_1550_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state9)) begin
        test_V_d0 = tmp_3_4_fu_1349_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state8)) begin
        test_V_d0 = tmp_3_3_fu_1238_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state7)) begin
        test_V_d0 = tmp_3_2_fu_1121_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state6)) begin
        test_V_d0 = tmp_3_fu_1065_p1;
    end else if ((1'b1 == ap_CS_iter0_fsm_state5)) begin
        test_V_d0 = tmp_3_1_fu_955_p1;
    end else begin
        test_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state22)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state9)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state8)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state7)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state21)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state15)))) begin
        test_V_we0 = 1'b1;
    end else begin
        test_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end
        end
        ap_ST_iter0_fsm_state2 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end
        end
        ap_ST_iter0_fsm_state3 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end
        end
        ap_ST_iter0_fsm_state4 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end
        end
        ap_ST_iter0_fsm_state5 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end
        end
        ap_ST_iter0_fsm_state6 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end
        end
        ap_ST_iter0_fsm_state7 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end
        end
        ap_ST_iter0_fsm_state8 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end
        end
        ap_ST_iter0_fsm_state9 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end
        end
        ap_ST_iter0_fsm_state10 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end
        end
        ap_ST_iter0_fsm_state11 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end
        end
        ap_ST_iter0_fsm_state12 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end
        end
        ap_ST_iter0_fsm_state13 : begin
            if ((~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (1'b1 == ap_CS_iter0_fsm_state13))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end
        end
        ap_ST_iter0_fsm_state14 : begin
            if ((~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state27) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state14))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end
        end
        ap_ST_iter0_fsm_state15 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state15))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end
        end
        ap_ST_iter0_fsm_state16 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state16))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end
        end
        ap_ST_iter0_fsm_state17 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state17))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end
        end
        ap_ST_iter0_fsm_state18 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state18))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state19;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end
        end
        ap_ST_iter0_fsm_state19 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state19))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state20;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state19;
            end
        end
        ap_ST_iter0_fsm_state20 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state20))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state21;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state20;
            end
        end
        ap_ST_iter0_fsm_state21 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state21))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state22;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state21;
            end
        end
        ap_ST_iter0_fsm_state22 : begin
            if (~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state22;
            end
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state23 : begin
            ap_NS_iter1_fsm = ap_ST_iter1_fsm_state24;
        end
        ap_ST_iter1_fsm_state24 : begin
            ap_NS_iter1_fsm = ap_ST_iter1_fsm_state25;
        end
        ap_ST_iter1_fsm_state25 : begin
            ap_NS_iter1_fsm = ap_ST_iter1_fsm_state26;
        end
        ap_ST_iter1_fsm_state26 : begin
            ap_NS_iter1_fsm = ap_ST_iter1_fsm_state27;
        end
        ap_ST_iter1_fsm_state27 : begin
            if (((1'b1 == ap_CS_iter0_fsm_state22) & (ap_sig_ioackin_OUT_r_WREADY == 1'b1) & (1'b1 == OUT_r_BVALID))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state23;
            end else if (((1'b1 == OUT_r_BVALID) & ((1'b0 == ap_CS_iter0_fsm_state22) | ((ap_sig_ioackin_OUT_r_WREADY == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state22))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state27;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_sig_ioackin_OUT_r_WREADY == 1'b0) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == ap_CS_iter0_fsm_state22))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state23;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

assign addconv2_fu_1893_p2 = ($signed(p_shl_cast1_fu_1849_p1) + $signed(sum_cast_fu_1883_p1));

assign addconv3_fu_1899_p2 = ($signed(p_shl1_cast_fu_1804_p1) - $signed(p_Val2_50_cast_fu_1832_p1));

assign addconv4_fu_1927_p2 = ($signed(sum_cast_fu_1883_p1) - $signed(p_shl_cast1_fu_1849_p1));

assign addconv_fu_1836_p2 = ($signed(p_Val2_50_cast_fu_1832_p1) - $signed(p_shl1_cast_fu_1804_p1));

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter0_fsm_state10 = ap_CS_iter0_fsm[32'd9];

assign ap_CS_iter0_fsm_state11 = ap_CS_iter0_fsm[32'd10];

assign ap_CS_iter0_fsm_state12 = ap_CS_iter0_fsm[32'd11];

assign ap_CS_iter0_fsm_state13 = ap_CS_iter0_fsm[32'd12];

assign ap_CS_iter0_fsm_state14 = ap_CS_iter0_fsm[32'd13];

assign ap_CS_iter0_fsm_state15 = ap_CS_iter0_fsm[32'd14];

assign ap_CS_iter0_fsm_state16 = ap_CS_iter0_fsm[32'd15];

assign ap_CS_iter0_fsm_state17 = ap_CS_iter0_fsm[32'd16];

assign ap_CS_iter0_fsm_state18 = ap_CS_iter0_fsm[32'd17];

assign ap_CS_iter0_fsm_state19 = ap_CS_iter0_fsm[32'd18];

assign ap_CS_iter0_fsm_state2 = ap_CS_iter0_fsm[32'd1];

assign ap_CS_iter0_fsm_state20 = ap_CS_iter0_fsm[32'd19];

assign ap_CS_iter0_fsm_state21 = ap_CS_iter0_fsm[32'd20];

assign ap_CS_iter0_fsm_state22 = ap_CS_iter0_fsm[32'd21];

assign ap_CS_iter0_fsm_state3 = ap_CS_iter0_fsm[32'd2];

assign ap_CS_iter0_fsm_state4 = ap_CS_iter0_fsm[32'd3];

assign ap_CS_iter0_fsm_state5 = ap_CS_iter0_fsm[32'd4];

assign ap_CS_iter0_fsm_state6 = ap_CS_iter0_fsm[32'd5];

assign ap_CS_iter0_fsm_state7 = ap_CS_iter0_fsm[32'd6];

assign ap_CS_iter0_fsm_state8 = ap_CS_iter0_fsm[32'd7];

assign ap_CS_iter0_fsm_state9 = ap_CS_iter0_fsm[32'd8];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state23 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter1_fsm_state27 = ap_CS_iter1_fsm[32'd5];

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((1'b1 == ap_CS_iter1_fsm_state27) & (1'b1 == OUT_r_BVALID));
end

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_pp0_stage4_iter1 = (1'b0 == OUT_r_BVALID);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2264 = (~((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)) & (ap_reg_ioackin_OUT_r_WREADY == 1'b0));
end

always @ (*) begin
    ap_condition_2267 = (~(((1'b1 == ap_CS_iter1_fsm_state27) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27))) & (1'b1 == OUT_r_AWREADY));
end

always @ (*) begin
    ap_condition_729 = ~((ap_sig_ioackin_OUT_r_AWREADY == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state27) & (1'b1 == OUT_r_BVALID)) | ((1'b0 == OUT_r_BVALID) & (1'b1 == ap_CS_iter1_fsm_state27)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign p_1_fu_754_p3 = ((tmp_18_fu_722_p3[0:0] === 1'b1) ? p_s_fu_746_p3 : ret_V_fu_712_p4);

assign p_Val2_10_fu_1135_p2 = (tmp_14_fu_1131_p1 + tmp_13_fu_1128_p1);

assign p_Val2_13_fu_921_p2 = ($signed(tmp_19_fu_913_p1) - $signed(tmp_20_fu_917_p1));

assign p_Val2_16_fu_1092_p0 = tmp_26_reg_2974;

assign p_Val2_16_fu_1092_p1 = ki_V_load_1_reg_2923;

assign p_Val2_16_fu_1092_p2 = ($signed(p_Val2_16_fu_1092_p0) * $signed(p_Val2_16_fu_1092_p1));

assign p_Val2_17_cast_fu_1163_p1 = $signed(p_Val2_17_reg_2979);

assign p_Val2_17_fu_1032_p0 = p_Val2_13_reg_2912;

assign p_Val2_17_fu_1032_p1 = reg_700;

assign p_Val2_17_fu_1032_p2 = ($signed(p_Val2_17_fu_1032_p0) * $signed(p_Val2_17_fu_1032_p1));

assign p_Val2_18_cast_fu_1179_p1 = $signed(p_Val2_18_reg_2984);

assign p_Val2_18_fu_1045_p0 = tmp_27_reg_2918;

assign p_Val2_18_fu_1045_p1 = reg_708;

assign p_Val2_18_fu_1045_p2 = ($signed(p_Val2_18_fu_1045_p0) * $signed(p_Val2_18_fu_1045_p1));

assign p_Val2_19_fu_1173_p2 = (tmp_28_fu_1166_p1 + tmp_29_fu_1170_p1);

assign p_Val2_20_fu_1190_p2 = (tmp_31_fu_1186_p1 + tmp_30_fu_1182_p1);

assign p_Val2_23_fu_1105_p0 = r_V_reg_2989;

assign p_Val2_23_fu_1105_p1 = reg_700;

assign p_Val2_23_fu_1105_p2 = ($signed(p_Val2_23_fu_1105_p0) * $signed(p_Val2_23_fu_1105_p1));

assign p_Val2_26_fu_1284_p3 = ((tmp_7_reg_2817[0:0] === 1'b1) ? ap_phi_mux_p_Val2_s_16_phi_fu_671_p4 : p_Val2_21_reg_2963);

assign p_Val2_27_fu_1290_p3 = ((tmp_7_reg_2817[0:0] === 1'b1) ? ap_phi_mux_p_Val2_24_phi_fu_682_p4 : p_Val2_11_reg_2886);

assign p_Val2_28_fu_1296_p3 = ((tmp_7_reg_2817[0:0] === 1'b1) ? ap_phi_mux_p_Val2_25_phi_fu_693_p4 : p_Val2_1_reg_2844);

assign p_Val2_30_fu_1309_p2 = ($signed(tmp_44_fu_1302_p1) - $signed(tmp_45_fu_1306_p1));

assign p_Val2_33_cast_fu_1604_p1 = $signed(p_Val2_33_reg_3154);

assign p_Val2_33_fu_1429_p0 = p_Val2_30_reg_3105;

assign p_Val2_33_fu_1429_p1 = kp_V_load_3_reg_2829;

assign p_Val2_33_fu_1429_p2 = ($signed(p_Val2_33_fu_1429_p0) * $signed(p_Val2_33_fu_1429_p1));

assign p_Val2_34_fu_1560_p0 = tmp_51_reg_3144;

assign p_Val2_34_fu_1560_p1 = ki_V_load_2_reg_2834;

assign p_Val2_34_fu_1560_p2 = ($signed(p_Val2_34_fu_1560_p0) * $signed(p_Val2_34_fu_1560_p1));

assign p_Val2_35_fu_1614_p2 = (tmp_53_fu_1607_p1 + tmp_54_fu_1611_p1);

assign p_Val2_36_cast_fu_1620_p1 = $signed(p_Val2_36_reg_3194);

assign p_Val2_36_fu_1572_p0 = tmp_52_reg_3149;

assign p_Val2_36_fu_1572_p1 = kd_V_load_2_reg_2839;

assign p_Val2_36_fu_1572_p2 = ($signed(p_Val2_36_fu_1572_p0) * $signed(p_Val2_36_fu_1572_p1));

assign p_Val2_37_fu_1631_p2 = (tmp_56_fu_1627_p1 + tmp_55_fu_1623_p1);

assign p_Val2_39_fu_1326_p2 = ($signed(tmp_63_fu_1319_p1) - $signed(tmp_64_fu_1323_p1));

assign p_Val2_3_fu_800_p2 = ($signed(tmp_8_fu_792_p1) - $signed(tmp_9_fu_796_p1));

assign p_Val2_42_cast_fu_1647_p1 = $signed(p_Val2_42_reg_3169);

assign p_Val2_42_fu_1517_p0 = p_Val2_39_reg_3117;

assign p_Val2_42_fu_1517_p1 = reg_700;

assign p_Val2_42_fu_1517_p2 = ($signed(p_Val2_42_fu_1517_p0) * $signed(p_Val2_42_fu_1517_p1));

assign p_Val2_43_fu_1585_p0 = tmp_70_reg_3159;

assign p_Val2_43_fu_1585_p1 = reg_704;

assign p_Val2_43_fu_1585_p2 = ($signed(p_Val2_43_fu_1585_p0) * $signed(p_Val2_43_fu_1585_p1));

assign p_Val2_44_fu_1657_p2 = (tmp_72_fu_1650_p1 + tmp_73_fu_1654_p1);

assign p_Val2_45_cast_fu_1663_p1 = $signed(p_Val2_45_reg_3204);

assign p_Val2_45_fu_1598_p0 = tmp_71_reg_3164;

assign p_Val2_45_fu_1598_p1 = reg_708;

assign p_Val2_45_fu_1598_p2 = ($signed(p_Val2_45_fu_1598_p0) * $signed(p_Val2_45_fu_1598_p1));

assign p_Val2_46_fu_1674_p2 = (tmp_75_fu_1670_p1 + tmp_74_fu_1666_p1);

assign p_Val2_48_fu_1534_p0 = r_V_1_reg_3129;

assign p_Val2_48_fu_1534_p1 = kp_V_load_5_reg_3090;

assign p_Val2_48_fu_1534_p2 = ($signed(p_Val2_48_fu_1534_p0) * $signed(p_Val2_48_fu_1534_p1));

assign p_Val2_50_cast_fu_1832_p1 = $signed(p_Val2_50_fu_1824_p3);

assign p_Val2_50_fu_1824_p3 = {{tmp_86_fu_1816_p3}, {13'd0}};

assign p_Val2_51_fu_1857_p2 = ($signed(33'd0) - $signed(p_shl_cast_fu_1853_p1));

assign p_Val2_52_cast_fu_1991_p1 = p_Val2_52_reg_3271;

assign p_Val2_52_fu_1942_p1 = r_V_2_reg_3231;

assign p_Val2_52_fu_1942_p2 = ($signed({{1'b0}, {49'd10813}}) * $signed(p_Val2_52_fu_1942_p1));

assign p_Val2_53_fu_2021_p2 = ($signed(tmp_90_cast9_fu_2013_p1) + $signed(tmp_93_cast_cast_fu_2009_p1));

assign p_Val2_54_cast_fu_2027_p2 = ($signed(tmp_89_fu_2017_p1) + $signed(tmp_88_reg_3276));

assign p_Val2_54_fu_2092_p3 = ((tmp_93_fu_2086_p2[0:0] === 1'b1) ? sel_tmp5_cast_fu_2078_p3 : phitmp4_fu_2056_p4);

assign p_Val2_6_fu_966_p0 = tmp_2_reg_2897;

assign p_Val2_6_fu_966_p1 = reg_704;

assign p_Val2_6_fu_966_p2 = ($signed(p_Val2_6_fu_966_p0) * $signed(p_Val2_6_fu_966_p1));

assign p_Val2_7_cast_fu_1070_p1 = $signed(p_Val2_7_reg_2902);

assign p_Val2_7_fu_894_p0 = p_Val2_3_reg_2855;

assign p_Val2_7_fu_894_p1 = reg_700;

assign p_Val2_7_fu_894_p2 = ($signed(p_Val2_7_fu_894_p0) * $signed(p_Val2_7_fu_894_p1));

assign p_Val2_81_1_cast_fu_2100_p1 = p_Val2_81_1_reg_3281;

assign p_Val2_81_1_fu_1955_p1 = r_V_2_1_reg_3236;

assign p_Val2_81_1_fu_1955_p2 = ($signed({{1'b0}, {49'd10813}}) * $signed(p_Val2_81_1_fu_1955_p1));

assign p_Val2_81_2_fu_1968_p1 = addconv2_reg_3241;

assign p_Val2_81_2_fu_1968_p2 = ($signed({{1'b0}, {49'd10813}}) * $signed(p_Val2_81_2_fu_1968_p1));

assign p_Val2_81_3_cast_fu_2268_p1 = p_Val2_81_3_reg_3301;

assign p_Val2_81_3_fu_1981_p1 = r_V_2_3_reg_3246;

assign p_Val2_81_3_fu_1981_p2 = ($signed({{1'b0}, {49'd10813}}) * $signed(p_Val2_81_3_fu_1981_p1));

assign p_Val2_81_4_fu_2357_p1 = r_V_2_4_reg_3251;

assign p_Val2_81_4_fu_2357_p2 = ($signed({{1'b0}, {49'd10813}}) * $signed(p_Val2_81_4_fu_2357_p1));

assign p_Val2_81_5_cast_fu_2490_p1 = p_Val2_81_5_reg_3365;

assign p_Val2_81_5_fu_2370_p1 = r_V_2_5_reg_3256;

assign p_Val2_81_5_fu_2370_p2 = ($signed({{1'b0}, {49'd10813}}) * $signed(p_Val2_81_5_fu_2370_p1));

assign p_Val2_81_6_fu_2383_p1 = addconv4_reg_3261;

assign p_Val2_81_6_fu_2383_p2 = ($signed({{1'b0}, {49'd10813}}) * $signed(p_Val2_81_6_fu_2383_p1));

assign p_Val2_81_7_fu_2396_p1 = r_V_2_7_reg_3266;

assign p_Val2_81_7_fu_2396_p2 = ($signed({{1'b0}, {49'd10813}}) * $signed(p_Val2_81_7_fu_2396_p1));

assign p_Val2_82_1_cast_fu_2113_p2 = ($signed(tmp_89_fu_2017_p1) + $signed(tmp_95_reg_3286));

assign p_Val2_82_1_fu_2107_p2 = ($signed(tmp_10646_1_cast_fu_2103_p1) + $signed(tmp_93_cast_cast2_fu_2005_p1));

assign p_Val2_82_2_cast_fu_2195_p2 = ($signed(tmp_89_fu_2017_p1) + $signed(tmp_98_reg_3296));

assign p_Val2_82_2_fu_2189_p2 = ($signed(tmp_10646_2_cast_fu_2186_p1) + $signed(tmp_93_cast_cast1_fu_2001_p1));

assign p_Val2_82_3_cast_fu_2281_p2 = ($signed(tmp_89_fu_2017_p1) + $signed(tmp_101_reg_3306));

assign p_Val2_82_3_fu_2275_p2 = ($signed(tmp_10646_3_cast_fu_2271_p1) + $signed(tmp_93_cast_cast_fu_2009_p1));

assign p_Val2_82_4_cast_fu_2418_p2 = ($signed(tmp_89_reg_3323) + $signed(tmp_104_reg_3360));

assign p_Val2_82_4_fu_2413_p2 = ($signed(tmp_10646_4_cast_fu_2410_p1) + $signed(tmp_93_cast_cast1_reg_3311));

assign p_Val2_82_5_cast_fu_2502_p2 = ($signed(tmp_89_reg_3323) + $signed(tmp_108_reg_3370));

assign p_Val2_82_5_fu_2497_p2 = ($signed(tmp_10646_5_cast_fu_2493_p1) + $signed(tmp_93_cast_cast2_reg_3318));

assign p_Val2_82_6_cast_fu_2582_p2 = ($signed(tmp_89_reg_3323) + $signed(tmp_112_reg_3380));

assign p_Val2_82_6_fu_2577_p2 = ($signed(tmp_10646_6_cast_fu_2574_p1) + $signed(tmp_93_cast_cast1_reg_3311));

assign p_Val2_82_7_cast_fu_2662_p2 = ($signed(tmp_89_reg_3323) + $signed(tmp_114_reg_3390));

assign p_Val2_82_7_fu_2657_p2 = ($signed(tmp_10646_7_cast_fu_2654_p1) + $signed(tmp_93_cast_cast1_reg_3311));

assign p_Val2_83_1_fu_2178_p3 = ((tmp_97_fu_2172_p2[0:0] === 1'b1) ? sel_tmp8_cast_fu_2164_p3 : phitmp49_1_fu_2142_p4);

assign p_Val2_83_2_fu_2260_p3 = ((tmp_100_fu_2254_p2[0:0] === 1'b1) ? sel_tmp12_cast_fu_2246_p3 : phitmp49_2_fu_2224_p4);

assign p_Val2_83_3_fu_2346_p3 = ((tmp_103_fu_2340_p2[0:0] === 1'b1) ? sel_tmp15_cast_fu_2332_p3 : phitmp49_3_fu_2310_p4);

assign p_Val2_83_4_fu_2482_p3 = ((tmp_105_fu_2476_p2[0:0] === 1'b1) ? sel_tmp18_cast_fu_2468_p3 : phitmp49_4_fu_2446_p4);

assign p_Val2_83_5_fu_2566_p3 = ((tmp_107_fu_2560_p2[0:0] === 1'b1) ? sel_tmp21_cast_fu_2552_p3 : phitmp49_5_fu_2530_p4);

assign p_Val2_83_6_fu_2646_p3 = ((tmp_109_fu_2640_p2[0:0] === 1'b1) ? sel_tmp24_cast_fu_2632_p3 : phitmp49_6_fu_2610_p4);

assign p_Val2_83_7_fu_2726_p3 = ((tmp_111_fu_2720_p2[0:0] === 1'b1) ? sel_tmp27_cast_fu_2712_p3 : phitmp49_7_fu_2690_p4);

assign p_Val2_8_cast_fu_1125_p1 = $signed(p_Val2_8_reg_2907);

assign p_Val2_8_fu_907_p0 = tmp_10_reg_2861;

assign p_Val2_8_fu_907_p1 = reg_708;

assign p_Val2_8_fu_907_p2 = ($signed(p_Val2_8_fu_907_p0) * $signed(p_Val2_8_fu_907_p1));

assign p_Val2_9_fu_1080_p2 = (tmp_11_fu_1073_p1 + tmp_12_fu_1077_p1);

assign p_s_fu_746_p3 = ((tmp_5_fu_734_p2[0:0] === 1'b1) ? ret_V_fu_712_p4 : ret_V_1_fu_740_p2);

assign p_shl1_cast_fu_1804_p1 = $signed(p_shl1_fu_1796_p3);

assign p_shl1_fu_1796_p3 = {{tmp_85_fu_1788_p3}, {13'd0}};

assign p_shl_cast1_fu_1849_p1 = p_shl_fu_1842_p3;

assign p_shl_cast_fu_1853_p1 = p_shl_fu_1842_p3;

assign p_shl_fu_1842_p3 = {{tmp_84_reg_3174}, {15'd0}};

assign p_tmp_1_cast_fu_997_p3 = ((tmp_23_fu_985_p2[0:0] === 1'b1) ? 32'd4294148096 : 32'd819200);

assign p_tmp_3_cast_fu_1381_p3 = ((tmp_48_fu_1369_p2[0:0] === 1'b1) ? 32'd4294148096 : 32'd819200);

assign p_tmp_4_cast_fu_1468_p3 = ((tmp_67_fu_1456_p2[0:0] === 1'b1) ? 32'd4294148096 : 32'd819200);

assign p_tmp_6_cast_fu_859_p3 = ((tmp_s_fu_847_p2[0:0] === 1'b1) ? 32'd4294148096 : 32'd819200);

assign phitmp1_fu_1709_p3 = {{tmp_60_fu_1700_p4}, {2'd0}};

assign phitmp2_fu_1754_p3 = {{tmp_79_fu_1745_p4}, {2'd0}};

assign phitmp49_1_fu_2142_p4 = {{p_Val2_82_1_fu_2107_p2[45:30]}};

assign phitmp49_2_fu_2224_p4 = {{p_Val2_82_2_fu_2189_p2[45:30]}};

assign phitmp49_3_fu_2310_p4 = {{p_Val2_82_3_fu_2275_p2[45:30]}};

assign phitmp49_4_fu_2446_p4 = {{p_Val2_82_4_fu_2413_p2[45:30]}};

assign phitmp49_5_fu_2530_p4 = {{p_Val2_82_5_fu_2497_p2[45:30]}};

assign phitmp49_6_fu_2610_p4 = {{p_Val2_82_6_fu_2577_p2[45:30]}};

assign phitmp49_7_fu_2690_p4 = {{p_Val2_82_7_fu_2657_p2[45:30]}};

assign phitmp4_fu_2056_p4 = {{p_Val2_53_fu_2021_p2[45:30]}};

assign phitmp5_fu_1230_p3 = ((tmp_40_fu_1224_p2[0:0] === 1'b1) ? tmp_39_cast_fu_1216_p3 : tmp_38_fu_1206_p4);

assign phitmp6_fu_1275_p3 = ((tmp_43_fu_1269_p2[0:0] === 1'b1) ? tmp_42_cast_fu_1261_p3 : tmp_41_fu_1252_p4);

assign r_V_1_fu_1343_p2 = ($signed(tmp_82_fu_1336_p1) - $signed(tmp_83_fu_1340_p1));

assign r_V_2_1_fu_1887_p2 = ($signed(p_shl_cast1_fu_1849_p1) - $signed(sum_cast_fu_1883_p1));

assign r_V_2_3_fu_1909_p2 = ($signed(tmp_102_3_cast_fu_1905_p1) - $signed(p_shl_cast1_fu_1849_p1));

assign r_V_2_4_fu_1915_p2 = ($signed(p_shl_cast1_fu_1849_p1) + $signed(tmp_90_cast_fu_1863_p1));

assign r_V_2_5_fu_1921_p2 = ($signed(tmp_91_cast_fu_1867_p1) - $signed(sum_cast_fu_1883_p1));

assign r_V_2_7_fu_1933_p2 = ($signed(p_shl_cast1_fu_1849_p1) + $signed(tmp_102_3_cast_fu_1905_p1));

assign r_V_2_fu_1871_p2 = ($signed(tmp_90_cast_fu_1863_p1) - $signed(p_shl_cast1_fu_1849_p1));

assign r_V_fu_1059_p2 = ($signed(tmp_36_fu_1051_p1) - $signed(tmp_37_fu_1055_p1));

assign ret_V_1_fu_740_p2 = (3'd1 + ret_V_fu_712_p4);

assign ret_V_fu_712_p1 = cmdIn_V_q0;

assign ret_V_fu_712_p4 = {{ret_V_fu_712_p1[15:13]}};

assign sel_tmp10_fu_2320_p2 = (tmp_102_fu_2296_p3 ^ 1'd1);

assign sel_tmp11_fu_2326_p2 = (tmp_110_3_fu_2304_p2 & sel_tmp10_fu_2320_p2);

assign sel_tmp12_cast_fu_2246_p3 = ((sel_tmp8_fu_2240_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp12_fu_2456_p2 = (tmp_106_fu_2432_p3 ^ 1'd1);

assign sel_tmp13_fu_2462_p2 = (tmp_110_4_fu_2440_p2 & sel_tmp12_fu_2456_p2);

assign sel_tmp14_fu_2540_p2 = (tmp_110_fu_2516_p3 ^ 1'd1);

assign sel_tmp15_cast_fu_2332_p3 = ((sel_tmp11_fu_2326_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp15_fu_2546_p2 = (tmp_110_5_fu_2524_p2 & sel_tmp14_fu_2540_p2);

assign sel_tmp16_fu_2620_p2 = (tmp_113_fu_2596_p3 ^ 1'd1);

assign sel_tmp17_fu_2626_p2 = (tmp_110_6_fu_2604_p2 & sel_tmp16_fu_2620_p2);

assign sel_tmp18_cast_fu_2468_p3 = ((sel_tmp13_fu_2462_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp18_fu_2700_p2 = (tmp_115_fu_2676_p3 ^ 1'd1);

assign sel_tmp19_fu_2706_p2 = (tmp_110_7_fu_2684_p2 & sel_tmp18_fu_2700_p2);

assign sel_tmp1_fu_2066_p2 = (tmp_91_fu_2042_p3 ^ 1'd1);

assign sel_tmp21_cast_fu_2552_p3 = ((sel_tmp15_fu_2546_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp24_cast_fu_2632_p3 = ((sel_tmp17_fu_2626_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp27_cast_fu_2712_p3 = ((sel_tmp19_fu_2706_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp2_fu_1723_p2 = (tmp_59_fu_1695_p2 & sel_tmp_fu_1717_p2);

assign sel_tmp3_fu_2158_p2 = (tmp_110_1_fu_2136_p2 & sel_tmp9_fu_2152_p2);

assign sel_tmp4_fu_2072_p2 = (tmp_92_fu_2050_p2 & sel_tmp1_fu_2066_p2);

assign sel_tmp5_cast_fu_2078_p3 = ((sel_tmp4_fu_2072_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp5_fu_2234_p2 = (tmp_99_fu_2210_p3 ^ 1'd1);

assign sel_tmp6_fu_1762_p2 = (tmp_77_fu_1735_p2 ^ 1'd1);

assign sel_tmp7_fu_1768_p2 = (tmp_78_fu_1740_p2 & sel_tmp6_fu_1762_p2);

assign sel_tmp8_cast_fu_2164_p3 = ((sel_tmp3_fu_2158_p2[0:0] === 1'b1) ? 16'd8183 : 16'd0);

assign sel_tmp8_fu_2240_p2 = (tmp_110_2_fu_2218_p2 & sel_tmp5_fu_2234_p2);

assign sel_tmp9_fu_2152_p2 = (tmp_96_fu_2128_p3 ^ 1'd1);

assign sel_tmp_fu_1717_p2 = (tmp_58_fu_1690_p2 ^ 1'd1);

assign sum_cast_fu_1883_p1 = $signed(sum_fu_1877_p2);

assign sum_fu_1877_p2 = ($signed(p_shl1_cast_fu_1804_p1) + $signed(p_Val2_50_cast_fu_1832_p1));

assign tmp_100_fu_2254_p2 = (tmp_99_fu_2210_p3 | sel_tmp8_fu_2240_p2);

assign tmp_101_fu_1987_p1 = p_Val2_81_3_fu_1981_p2[46:0];

assign tmp_102_3_cast_fu_1905_p1 = $signed(addconv3_fu_1899_p2);

assign tmp_102_fu_2296_p3 = p_Val2_82_3_cast_fu_2281_p2[32'd46];

assign tmp_103_fu_2340_p2 = (tmp_102_fu_2296_p3 | sel_tmp11_fu_2326_p2);

assign tmp_104_fu_2363_p1 = p_Val2_81_4_fu_2357_p2[46:0];

assign tmp_105_fu_2476_p2 = (tmp_106_fu_2432_p3 | sel_tmp13_fu_2462_p2);

assign tmp_10646_1_cast_fu_2103_p1 = $unsigned(p_Val2_81_1_cast_fu_2100_p1);

assign tmp_10646_2_cast_fu_2186_p1 = p_Val2_81_2_reg_3291;

assign tmp_10646_3_cast_fu_2271_p1 = $unsigned(p_Val2_81_3_cast_fu_2268_p1);

assign tmp_10646_4_cast_fu_2410_p1 = p_Val2_81_4_reg_3355;

assign tmp_10646_5_cast_fu_2493_p1 = $unsigned(p_Val2_81_5_cast_fu_2490_p1);

assign tmp_10646_6_cast_fu_2574_p1 = p_Val2_81_6_reg_3375;

assign tmp_10646_7_cast_fu_2654_p1 = p_Val2_81_7_reg_3385;

assign tmp_106_fu_2432_p3 = p_Val2_82_4_cast_fu_2418_p2[32'd46];

assign tmp_107_fu_2560_p2 = (tmp_110_fu_2516_p3 | sel_tmp15_fu_2546_p2);

assign tmp_108_1_fu_2118_p4 = {{p_Val2_82_1_cast_fu_2113_p2[46:28]}};

assign tmp_108_2_fu_2200_p4 = {{p_Val2_82_2_cast_fu_2195_p2[46:28]}};

assign tmp_108_3_fu_2286_p4 = {{p_Val2_82_3_cast_fu_2281_p2[46:28]}};

assign tmp_108_4_fu_2422_p4 = {{p_Val2_82_4_cast_fu_2418_p2[46:28]}};

assign tmp_108_5_fu_2506_p4 = {{p_Val2_82_5_cast_fu_2502_p2[46:28]}};

assign tmp_108_6_fu_2586_p4 = {{p_Val2_82_6_cast_fu_2582_p2[46:28]}};

assign tmp_108_7_fu_2666_p4 = {{p_Val2_82_7_cast_fu_2662_p2[46:28]}};

assign tmp_108_fu_2376_p1 = p_Val2_81_5_fu_2370_p2[46:0];

assign tmp_109_fu_2640_p2 = (tmp_113_fu_2596_p3 | sel_tmp17_fu_2626_p2);

assign tmp_10_fu_818_p2 = ($signed(tmp_cast_fu_806_p1) - $signed(tmp_4_cast_fu_814_p1));

assign tmp_110_1_fu_2136_p2 = (($signed(tmp_108_1_fu_2118_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_110_2_fu_2218_p2 = (($signed(tmp_108_2_fu_2200_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_110_3_fu_2304_p2 = (($signed(tmp_108_3_fu_2286_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_110_4_fu_2440_p2 = (($signed(tmp_108_4_fu_2422_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_110_5_fu_2524_p2 = (($signed(tmp_108_5_fu_2506_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_110_6_fu_2604_p2 = (($signed(tmp_108_6_fu_2586_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_110_7_fu_2684_p2 = (($signed(tmp_108_7_fu_2666_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_110_fu_2516_p3 = p_Val2_82_5_cast_fu_2502_p2[32'd46];

assign tmp_111_fu_2720_p2 = (tmp_115_fu_2676_p3 | sel_tmp19_fu_2706_p2);

assign tmp_112_fu_2389_p1 = p_Val2_81_6_fu_2383_p2[46:0];

assign tmp_113_fu_2596_p3 = p_Val2_82_6_cast_fu_2582_p2[32'd46];

assign tmp_114_1_fu_2734_p1 = p_Val2_83_1_reg_3337;

assign tmp_114_2_fu_2738_p1 = p_Val2_83_2_reg_3343;

assign tmp_114_3_fu_2742_p1 = p_Val2_83_3_reg_3349;

assign tmp_114_4_fu_2746_p1 = p_Val2_83_4_reg_3405;

assign tmp_114_5_fu_2750_p1 = p_Val2_83_5_reg_3411;

assign tmp_114_6_fu_2754_p1 = p_Val2_83_6_reg_3417;

assign tmp_114_7_fu_2758_p1 = p_Val2_83_7_reg_3423;

assign tmp_114_fu_2402_p1 = p_Val2_81_7_fu_2396_p2[46:0];

assign tmp_115_fu_2676_p3 = p_Val2_82_7_cast_fu_2662_p2[32'd46];

assign tmp_11_fu_1073_p1 = $unsigned(p_Val2_7_cast_fu_1070_p1);

assign tmp_12_fu_1077_p1 = p_Val2_6_reg_2969;

assign tmp_13_fu_1128_p1 = p_Val2_9_reg_3024;

assign tmp_14_fu_1131_p1 = $unsigned(p_Val2_8_cast_fu_1125_p1);

assign tmp_15_fu_1141_p4 = {{p_Val2_10_fu_1135_p2[44:13]}};

assign tmp_16_fu_1151_p2 = (($signed(tmp_15_fu_1141_p4) < $signed(32'd4294959104)) ? 1'b1 : 1'b0);

assign tmp_17_fu_1157_p2 = (($signed(tmp_15_fu_1141_p4) > $signed(32'd8183)) ? 1'b1 : 1'b0);

assign tmp_18_fu_722_p1 = cmdIn_V_q0;

assign tmp_18_fu_722_p3 = tmp_18_fu_722_p1[32'd15];

assign tmp_19_fu_913_p0 = cmdIn_V_q0;

assign tmp_19_fu_913_p1 = tmp_19_fu_913_p0;

assign tmp_1_fu_853_p2 = (($signed(tmp_6_fu_841_p2) > $signed(32'd819200)) ? 1'b1 : 1'b0);

assign tmp_20_fu_917_p1 = $signed(measured_V_q0);

assign tmp_21_fu_976_p1 = p_Val2_13_reg_2912;

assign tmp_22_fu_979_p2 = ($signed(tmp_21_fu_976_p1) + $signed(integral_pos_V_1));

assign tmp_23_cast_fu_927_p1 = p_Val2_13_fu_921_p2;

assign tmp_23_fu_985_p2 = (($signed(tmp_22_fu_979_p2) < $signed(32'd4294148096)) ? 1'b1 : 1'b0);

assign tmp_24_fu_991_p2 = (($signed(tmp_22_fu_979_p2) > $signed(32'd819200)) ? 1'b1 : 1'b0);

assign tmp_25_fu_1005_p2 = (tmp_24_fu_991_p2 | tmp_23_fu_985_p2);

assign tmp_26_fu_1011_p3 = ((tmp_25_fu_1005_p2[0:0] === 1'b1) ? p_tmp_1_cast_fu_997_p3 : tmp_22_fu_979_p2);

assign tmp_27_fu_939_p2 = ($signed(tmp_23_cast_fu_927_p1) - $signed(tmp_28_cast_fu_935_p1));

assign tmp_28_cast_fu_935_p0 = last_error_pos_V_1;

assign tmp_28_cast_fu_935_p1 = tmp_28_cast_fu_935_p0;

assign tmp_28_fu_1166_p1 = $unsigned(p_Val2_17_cast_fu_1163_p1);

assign tmp_29_fu_1170_p1 = p_Val2_16_reg_3029;

assign tmp_2_fu_873_p3 = ((tmp_4_fu_867_p2[0:0] === 1'b1) ? p_tmp_6_cast_fu_859_p3 : tmp_6_fu_841_p2);

assign tmp_30_fu_1182_p1 = p_Val2_19_fu_1173_p2;

assign tmp_31_fu_1186_p1 = $unsigned(p_Val2_18_cast_fu_1179_p1);

assign tmp_33_fu_1242_p2 = (($signed(tmp_32_reg_3074) < $signed(32'd4294959104)) ? 1'b1 : 1'b0);

assign tmp_34_fu_1247_p2 = (($signed(tmp_32_reg_3074) > $signed(32'd8183)) ? 1'b1 : 1'b0);

assign tmp_35_fu_730_p0 = cmdIn_V_q0;

assign tmp_35_fu_730_p1 = tmp_35_fu_730_p0[12:0];

assign tmp_36_fu_1051_p0 = cmdIn_V_q0;

assign tmp_36_fu_1051_p1 = tmp_36_fu_1051_p0;

assign tmp_37_fu_1055_p1 = $signed(measured_V_q0);

assign tmp_38_fu_1206_p4 = {{p_Val2_10_fu_1135_p2[28:13]}};

assign tmp_39_cast_fu_1216_p3 = ((tmp_16_fu_1151_p2[0:0] === 1'b1) ? 16'd57344 : 16'd8183);

assign tmp_39_fu_824_p1 = p_Val2_3_fu_800_p2[15:0];

assign tmp_3_1_fu_955_p1 = p_Val2_1_reg_2844;

assign tmp_3_2_fu_1121_p1 = p_Val2_11_reg_2886;

assign tmp_3_3_fu_1238_p1 = p_Val2_21_reg_2963;

assign tmp_3_4_fu_1349_p1 = $signed(cmdIn_V_load_4_reg_3064);

assign tmp_3_5_fu_1550_p1 = p_Val2_s_reg_2812;

assign tmp_3_fu_1065_p0 = cmdIn_V_q0;

assign tmp_3_fu_1065_p1 = tmp_3_fu_1065_p0;

assign tmp_40_fu_1224_p2 = (tmp_17_fu_1157_p2 | tmp_16_fu_1151_p2);

assign tmp_41_fu_1252_p4 = {{p_Val2_20_reg_3069[28:13]}};

assign tmp_42_cast_fu_1261_p3 = ((tmp_33_fu_1242_p2[0:0] === 1'b1) ? 16'd57344 : 16'd8183);

assign tmp_42_fu_945_p1 = p_Val2_13_fu_921_p2[15:0];

assign tmp_43_fu_1269_p2 = (tmp_34_fu_1247_p2 | tmp_33_fu_1242_p2);

assign tmp_44_fu_1302_p1 = $signed(p_Val2_28_fu_1296_p3);

assign tmp_45_fu_1306_p1 = $signed(p_Val2_29_reg_2824);

assign tmp_46_fu_1357_p1 = p_Val2_30_reg_3105;

assign tmp_47_cast_fu_1360_p1 = p_Val2_30_reg_3105;

assign tmp_47_fu_1363_p2 = ($signed(tmp_46_fu_1357_p1) + $signed(integral_rate_V_0));

assign tmp_48_fu_1369_p2 = (($signed(tmp_47_fu_1363_p2) < $signed(32'd4294148096)) ? 1'b1 : 1'b0);

assign tmp_49_fu_1375_p2 = (($signed(tmp_47_fu_1363_p2) > $signed(32'd819200)) ? 1'b1 : 1'b0);

assign tmp_4_cast_fu_814_p0 = last_error_pos_V_0;

assign tmp_4_cast_fu_814_p1 = tmp_4_cast_fu_814_p0;

assign tmp_4_fu_867_p2 = (tmp_s_fu_847_p2 | tmp_1_fu_853_p2);

assign tmp_50_fu_1389_p2 = (tmp_49_fu_1375_p2 | tmp_48_fu_1369_p2);

assign tmp_51_fu_1395_p3 = ((tmp_50_fu_1389_p2[0:0] === 1'b1) ? p_tmp_3_cast_fu_1381_p3 : tmp_47_fu_1363_p2);

assign tmp_52_cast_fu_1413_p0 = last_error_rate_V_0;

assign tmp_52_cast_fu_1413_p1 = tmp_52_cast_fu_1413_p0;

assign tmp_52_fu_1417_p2 = ($signed(tmp_47_cast_fu_1360_p1) - $signed(tmp_52_cast_fu_1413_p1));

assign tmp_53_fu_1607_p1 = $unsigned(p_Val2_33_cast_fu_1604_p1);

assign tmp_54_fu_1611_p1 = p_Val2_34_reg_3189;

assign tmp_55_fu_1623_p1 = p_Val2_35_fu_1614_p2;

assign tmp_56_fu_1627_p1 = $unsigned(p_Val2_36_cast_fu_1620_p1);

assign tmp_58_fu_1690_p2 = (($signed(tmp_57_reg_3214) < $signed(32'd4294959104)) ? 1'b1 : 1'b0);

assign tmp_59_fu_1695_p2 = (($signed(tmp_57_reg_3214) > $signed(32'd8183)) ? 1'b1 : 1'b0);

assign tmp_5_fu_734_p2 = ((tmp_35_fu_730_p1 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_60_fu_1700_p4 = {{p_Val2_37_reg_3209[29:13]}};

assign tmp_61_fu_1729_p2 = (tmp_58_fu_1690_p2 | sel_tmp2_fu_1723_p2);

assign tmp_62_fu_1315_p1 = p_Val2_30_fu_1309_p2[15:0];

assign tmp_63_fu_1319_p1 = $signed(p_Val2_27_fu_1290_p3);

assign tmp_64_fu_1323_p1 = $signed(p_Val2_38_reg_3039);

assign tmp_65_fu_1444_p1 = p_Val2_39_reg_3117;

assign tmp_66_fu_1450_p2 = ($signed(tmp_65_fu_1444_p1) + $signed(integral_rate_V_1));

assign tmp_67_cast_fu_1447_p1 = p_Val2_39_reg_3117;

assign tmp_67_fu_1456_p2 = (($signed(tmp_66_fu_1450_p2) < $signed(32'd4294148096)) ? 1'b1 : 1'b0);

assign tmp_68_fu_1462_p2 = (($signed(tmp_66_fu_1450_p2) > $signed(32'd819200)) ? 1'b1 : 1'b0);

assign tmp_69_fu_1476_p2 = (tmp_68_fu_1462_p2 | tmp_67_fu_1456_p2);

assign tmp_6_fu_841_p2 = ($signed(tmp_fu_838_p1) + $signed(integral_pos_V_0));

assign tmp_70_fu_1482_p3 = ((tmp_69_fu_1476_p2[0:0] === 1'b1) ? p_tmp_4_cast_fu_1468_p3 : tmp_66_fu_1450_p2);

assign tmp_71_fu_1504_p2 = ($signed(tmp_67_cast_fu_1447_p1) - $signed(tmp_72_cast_fu_1500_p1));

assign tmp_72_cast_fu_1500_p0 = last_error_rate_V_1;

assign tmp_72_cast_fu_1500_p1 = tmp_72_cast_fu_1500_p0;

assign tmp_72_fu_1650_p1 = $unsigned(p_Val2_42_cast_fu_1647_p1);

assign tmp_73_fu_1654_p1 = p_Val2_43_reg_3199;

assign tmp_74_fu_1666_p1 = p_Val2_44_fu_1657_p2;

assign tmp_75_fu_1670_p1 = $unsigned(p_Val2_45_cast_fu_1663_p1);

assign tmp_77_fu_1735_p2 = (($signed(tmp_76_reg_3225) < $signed(32'd4294959104)) ? 1'b1 : 1'b0);

assign tmp_78_fu_1740_p2 = (($signed(tmp_76_reg_3225) > $signed(32'd8183)) ? 1'b1 : 1'b0);

assign tmp_79_fu_1745_p4 = {{p_Val2_46_reg_3220[29:13]}};

assign tmp_7_fu_762_p2 = ((p_1_fu_754_p3 != 3'd0) ? 1'b1 : 1'b0);

assign tmp_80_fu_1774_p2 = (tmp_77_fu_1735_p2 | sel_tmp7_fu_1768_p2);

assign tmp_81_fu_1332_p1 = p_Val2_39_fu_1326_p2[15:0];

assign tmp_82_fu_1336_p1 = $signed(p_Val2_26_fu_1284_p3);

assign tmp_83_fu_1340_p1 = $signed(p_Val2_47_reg_3085);

assign tmp_85_cast_fu_1780_p3 = ((tmp_58_fu_1690_p2[0:0] === 1'b1) ? 19'd491520 : 19'd32732);

assign tmp_85_fu_1788_p3 = ((tmp_61_fu_1729_p2[0:0] === 1'b1) ? tmp_85_cast_fu_1780_p3 : phitmp1_fu_1709_p3);

assign tmp_86_fu_1816_p3 = ((tmp_80_fu_1774_p2[0:0] === 1'b1) ? tmp_87_cast_fu_1808_p3 : phitmp2_fu_1754_p3);

assign tmp_87_cast_fu_1808_p3 = ((tmp_77_fu_1735_p2[0:0] === 1'b1) ? 19'd491520 : 19'd32732);

assign tmp_87_fu_1994_p3 = {{p_Val2_49_reg_3004}, {30'd0}};

assign tmp_88_fu_1948_p1 = p_Val2_52_fu_1942_p2[46:0];

assign tmp_89_fu_2017_p1 = tmp_87_fu_1994_p3;

assign tmp_8_fu_792_p0 = cmdIn_V_q0;

assign tmp_8_fu_792_p1 = tmp_8_fu_792_p0;

assign tmp_90_cast9_fu_2013_p1 = $unsigned(p_Val2_52_cast_fu_1991_p1);

assign tmp_90_cast_fu_1863_p1 = $signed(addconv_fu_1836_p2);

assign tmp_90_fu_2032_p4 = {{p_Val2_54_cast_fu_2027_p2[46:28]}};

assign tmp_91_cast_fu_1867_p1 = $signed(p_Val2_51_fu_1857_p2);

assign tmp_91_fu_2042_p3 = p_Val2_54_cast_fu_2027_p2[32'd46];

assign tmp_92_fu_2050_p2 = (($signed(tmp_90_fu_2032_p4) > $signed(19'd32735)) ? 1'b1 : 1'b0);

assign tmp_93_cast_cast1_fu_2001_p1 = tmp_87_fu_1994_p3;

assign tmp_93_cast_cast2_fu_2005_p1 = tmp_87_fu_1994_p3;

assign tmp_93_cast_cast_fu_2009_p1 = tmp_87_fu_1994_p3;

assign tmp_93_fu_2086_p2 = (tmp_91_fu_2042_p3 | sel_tmp4_fu_2072_p2);

assign tmp_94_fu_2406_p1 = p_Val2_54_reg_3331;

assign tmp_95_fu_1961_p1 = p_Val2_81_1_fu_1955_p2[46:0];

assign tmp_96_fu_2128_p3 = p_Val2_82_1_cast_fu_2113_p2[32'd46];

assign tmp_97_fu_2172_p2 = (tmp_96_fu_2128_p3 | sel_tmp3_fu_2158_p2);

assign tmp_98_fu_1974_p1 = p_Val2_81_2_fu_1968_p2[46:0];

assign tmp_99_fu_2210_p3 = p_Val2_82_2_cast_fu_2195_p2[32'd46];

assign tmp_9_fu_796_p1 = $signed(measured_V_q0);

assign tmp_cast_fu_806_p1 = p_Val2_3_fu_800_p2;

assign tmp_fu_838_p1 = p_Val2_3_reg_2855;

assign tmp_s_fu_847_p2 = (($signed(tmp_6_fu_841_p2) < $signed(32'd4294148096)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    r_V_2_reg_3231[14:0] <= 15'b000000000000000;
    r_V_2_1_reg_3236[14:0] <= 15'b000000000000000;
    addconv2_reg_3241[14:0] <= 15'b000000000000000;
    r_V_2_3_reg_3246[14:0] <= 15'b000000000000000;
    r_V_2_4_reg_3251[14:0] <= 15'b000000000000000;
    r_V_2_5_reg_3256[14:0] <= 15'b000000000000000;
    addconv4_reg_3261[14:0] <= 15'b000000000000000;
    r_V_2_7_reg_3266[14:0] <= 15'b000000000000000;
    p_Val2_52_reg_3271[14:0] <= 15'b000000000000000;
    tmp_88_reg_3276[14:0] <= 15'b000000000000000;
    p_Val2_81_1_reg_3281[14:0] <= 15'b000000000000000;
    tmp_95_reg_3286[14:0] <= 15'b000000000000000;
    p_Val2_81_2_reg_3291[14:0] <= 15'b000000000000000;
    tmp_98_reg_3296[14:0] <= 15'b000000000000000;
    p_Val2_81_3_reg_3301[14:0] <= 15'b000000000000000;
    tmp_101_reg_3306[14:0] <= 15'b000000000000000;
    tmp_93_cast_cast1_reg_3311[29:0] <= 30'b000000000000000000000000000000;
    tmp_93_cast_cast2_reg_3318[29:0] <= 30'b000000000000000000000000000000;
    tmp_89_reg_3323[29:0] <= 30'b000000000000000000000000000000;
    p_Val2_81_4_reg_3355[14:0] <= 15'b000000000000000;
    tmp_104_reg_3360[14:0] <= 15'b000000000000000;
    p_Val2_81_5_reg_3365[14:0] <= 15'b000000000000000;
    tmp_108_reg_3370[14:0] <= 15'b000000000000000;
    p_Val2_81_6_reg_3375[14:0] <= 15'b000000000000000;
    tmp_112_reg_3380[14:0] <= 15'b000000000000000;
    p_Val2_81_7_reg_3385[14:0] <= 15'b000000000000000;
    tmp_114_reg_3390[14:0] <= 15'b000000000000000;
end

endmodule //pid
