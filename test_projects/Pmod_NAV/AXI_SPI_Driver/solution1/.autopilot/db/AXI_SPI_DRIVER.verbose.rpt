

================================================================
== Vivado HLS Report for 'AXI_SPI_DRIVER'
================================================================
* Date:           Mon May 13 22:36:22 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        AXI_SPI_Driver
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    6|    1|    6|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      -|       0|      8|
|FIFO             |        -|      -|       -|      -|
|Instance         |        2|      -|     548|    620|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|    140|
|Register         |        -|      -|      18|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        2|      0|     566|    768|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |    ~0   |      0|   ~0   |      1|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +------------------------------+----------------------------+---------+-------+-----+-----+
    |           Instance           |           Module           | BRAM_18K| DSP48E|  FF | LUT |
    +------------------------------+----------------------------+---------+-------+-----+-----+
    |AXI_SPI_DRIVER_CTRL_s_axi_U   |AXI_SPI_DRIVER_CTRL_s_axi   |        0|      0|   36|   40|
    |AXI_SPI_DRIVER_OUT_r_m_axi_U  |AXI_SPI_DRIVER_OUT_r_m_axi  |        2|      0|  512|  580|
    +------------------------------+----------------------------+---------+-------+-----+-----+
    |Total                         |                            |        2|      0|  548|  620|
    +------------------------------+----------------------------+---------+-------+-----+-----+

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +--------------------+----------+-------+---+----+------------+------------+
    |    Variable Name   | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +--------------------+----------+-------+---+----+------------+------------+
    |ap_condition_245    |    and   |      0|  0|   2|           1|           1|
    |ap_condition_365    |    and   |      0|  0|   2|           1|           1|
    |ap_block_state1_io  |    or    |      0|  0|   2|           1|           1|
    |ap_block_state7     |    or    |      0|  0|   2|           1|           1|
    +--------------------+----------+-------+---+----+------------+------------+
    |Total               |          |      0|  0|   8|           4|           4|
    +--------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +------------------------------+----+-----------+-----+-----------+
    |             Name             | LUT| Input Size| Bits| Total Bits|
    +------------------------------+----+-----------+-----+-----------+
    |OUT_r_AWADDR                  |  15|          3|   32|         96|
    |OUT_r_WDATA                   |  15|          3|   32|         96|
    |OUT_r_blk_n_AW                |   9|          2|    1|          2|
    |OUT_r_blk_n_B                 |   9|          2|    1|          2|
    |OUT_r_blk_n_W                 |   9|          2|    1|          2|
    |ap_NS_fsm                     |  56|         13|    1|         13|
    |ap_sig_ioackin_OUT_r_AWREADY  |   9|          2|    1|          2|
    |ap_sig_ioackin_OUT_r_WREADY   |   9|          2|    1|          2|
    |state                         |   9|          2|    2|          4|
    +------------------------------+----+-----------+-----+-----------+
    |Total                         | 140|         31|   72|        219|
    +------------------------------+----+-----------+-----+-----------+

    * Register: 
    +------------------------------+----+----+-----+-----------+
    |             Name             | FF | LUT| Bits| Const Bits|
    +------------------------------+----+----+-----+-----------+
    |ap_CS_fsm                     |  12|   0|   12|          0|
    |ap_reg_ioackin_OUT_r_AWREADY  |   1|   0|    1|          0|
    |ap_reg_ioackin_OUT_r_WREADY   |   1|   0|    1|          0|
    |state                         |   2|   0|    4|          2|
    |state_load_reg_126            |   2|   0|    4|          2|
    +------------------------------+----+----+-----+-----------+
    |Total                         |  18|   0|   22|          4|
    +------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+----------------------+-----+-----+------------+----------------+--------------+
|       RTL Ports      | Dir | Bits|  Protocol  |  Source Object |    C Type    |
+----------------------+-----+-----+------------+----------------+--------------+
|s_axi_CTRL_AWVALID    |  in |    1|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_AWREADY    | out |    1|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_AWADDR     |  in |    4|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_WVALID     |  in |    1|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_WREADY     | out |    1|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_WDATA      |  in |   32|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_WSTRB      |  in |    4|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_ARVALID    |  in |    1|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_ARREADY    | out |    1|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_ARADDR     |  in |    4|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_RVALID     | out |    1|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_RREADY     |  in |    1|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_RDATA      | out |   32|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_RRESP      | out |    2|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_BVALID     | out |    1|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_BREADY     |  in |    1|    s_axi   |      CTRL      |  return void |
|s_axi_CTRL_BRESP      | out |    2|    s_axi   |      CTRL      |  return void |
|ap_clk                |  in |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|ap_rst_n              |  in |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|interrupt             | out |    1| ap_ctrl_hs | AXI_SPI_DRIVER | return value |
|m_axi_OUT_r_AWVALID   | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWREADY   |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWADDR    | out |   32|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWID      | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWLEN     | out |    8|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWSIZE    | out |    3|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWBURST   | out |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWLOCK    | out |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWCACHE   | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWPROT    | out |    3|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWQOS     | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWREGION  | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_AWUSER    | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WVALID    | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WREADY    |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WDATA     | out |   32|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WSTRB     | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WLAST     | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WID       | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_WUSER     | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARVALID   | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARREADY   |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARADDR    | out |   32|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARID      | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARLEN     | out |    8|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARSIZE    | out |    3|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARBURST   | out |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARLOCK    | out |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARCACHE   | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARPROT    | out |    3|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARQOS     | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARREGION  | out |    4|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_ARUSER    | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RVALID    |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RREADY    | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RDATA     |  in |   32|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RLAST     |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RID       |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RUSER     |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_RRESP     |  in |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_BVALID    |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_BREADY    | out |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_BRESP     |  in |    2|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_BID       |  in |    1|    m_axi   |      OUT_r     |    pointer   |
|m_axi_OUT_r_BUSER     |  in |    1|    m_axi   |      OUT_r     |    pointer   |
+----------------------+-----+-----+------------+----------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (state_load == 1)
	7  / (state_load != 0 & state_load != 1)
	8  / (state_load == 0)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	7  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecClockDomain([8 x i8]* @default, [1 x i8]* @empty) nounwind"   --->   Operation 13 'specclockdomain' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %OUT_r) nounwind, !map !14"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @AXI_SPI_DRIVER_str) nounwind"   --->   Operation 15 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:17]   --->   Operation 16 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %OUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 4096, [4 x i8]* @p_str4, [4 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:23]   --->   Operation 17 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i4* @state, i32 1, [1 x i8]* @p_str1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:28]   --->   Operation 18 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%state_load = load i4* @state, align 1"   --->   Operation 19 'load' 'state_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.13ns)   --->   "switch i4 %state_load, label %._crit_edge [
    i4 0, label %1
    i4 1, label %2
  ]" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:32]   --->   Operation 20 'switch' <Predicate = true> <Delay = 1.13>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%OUT_addr_1 = getelementptr inbounds i32* %OUT_r, i64 28" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:45]   --->   Operation 21 'getelementptr' 'OUT_addr_1' <Predicate = (state_load == 1)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (8.75ns)   --->   "%OUT_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %OUT_addr_1, i32 1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:45]   --->   Operation 22 'writereq' 'OUT_addr_1_req' <Predicate = (state_load == 1)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_1 : Operation 23 [1/1] (1.76ns)   --->   "store i4 2, i4* @state, align 1" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:47]   --->   Operation 23 'store' <Predicate = (state_load == 1)> <Delay = 1.76>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%OUT_addr = getelementptr inbounds i32* %OUT_r, i64 24" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:37]   --->   Operation 24 'getelementptr' 'OUT_addr' <Predicate = (state_load == 0)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (8.75ns)   --->   "%OUT_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %OUT_addr, i32 1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:37]   --->   Operation 25 'writereq' 'OUT_addr_req' <Predicate = (state_load == 0)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_1 : Operation 26 [1/1] (1.76ns)   --->   "store i4 1, i4* @state, align 1" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:40]   --->   Operation 26 'store' <Predicate = (state_load == 0)> <Delay = 1.76>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 27 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %OUT_addr_1, i32 65534, i4 -1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:45]   --->   Operation 27 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 28 [5/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr_1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:45]   --->   Operation 28 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 29 [4/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr_1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:45]   --->   Operation 29 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 30 [3/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr_1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:45]   --->   Operation 30 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 31 [2/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr_1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:45]   --->   Operation 31 'writeresp' 'OUT_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 32 [1/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr_1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:45]   --->   Operation 32 'writeresp' 'OUT_addr_1_resp' <Predicate = (state_load == 1)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 33 [1/1] (0.00ns)   --->   "br label %._crit_edge" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:48]   --->   Operation 33 'br' <Predicate = (state_load == 1)> <Delay = 0.00>
ST_7 : Operation 34 [1/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:37]   --->   Operation 34 'writeresp' 'OUT_addr_resp' <Predicate = (state_load == 0)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 35 [1/1] (0.00ns)   --->   "br label %._crit_edge" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:41]   --->   Operation 35 'br' <Predicate = (state_load == 0)> <Delay = 0.00>
ST_7 : Operation 36 [1/1] (0.00ns)   --->   "ret void" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:69]   --->   Operation 36 'ret' <Predicate = true> <Delay = 0.00>

State 8 <SV = 1> <Delay = 8.75>
ST_8 : Operation 37 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %OUT_addr, i32 6, i4 -1) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:37]   --->   Operation 37 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 2> <Delay = 8.75>
ST_9 : Operation 38 [5/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:37]   --->   Operation 38 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 3> <Delay = 8.75>
ST_10 : Operation 39 [4/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:37]   --->   Operation 39 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 4> <Delay = 8.75>
ST_11 : Operation 40 [3/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:37]   --->   Operation 40 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 5> <Delay = 8.75>
ST_12 : Operation 41 [2/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %OUT_addr) nounwind" [AXI_SPI_Driver/AXI_SPI_Driver.cpp:37]   --->   Operation 41 'writeresp' 'OUT_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ OUT_r]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ state]:  wired=0; compound=0; hidden=1; nouse=0; global=1; static=1; extern=0; dir=2; type=0; pingpong=0; private_global=1; linkage=7; visibility=0; IO mode=ap_ovld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
StgValue_13     (specclockdomain) [ 0000000000000]
StgValue_14     (specbitsmap    ) [ 0000000000000]
StgValue_15     (spectopmodule  ) [ 0000000000000]
StgValue_16     (specinterface  ) [ 0000000000000]
StgValue_17     (specinterface  ) [ 0000000000000]
StgValue_18     (specreset      ) [ 0000000000000]
state_load      (load           ) [ 0111111111111]
StgValue_20     (switch         ) [ 0000000000000]
OUT_addr_1      (getelementptr  ) [ 0011111111111]
OUT_addr_1_req  (writereq       ) [ 0000000000000]
StgValue_23     (store          ) [ 0000000000000]
OUT_addr        (getelementptr  ) [ 0011111111111]
OUT_addr_req    (writereq       ) [ 0000000000000]
StgValue_26     (store          ) [ 0000000000000]
StgValue_27     (write          ) [ 0000000000000]
OUT_addr_1_resp (writeresp      ) [ 0000000000000]
StgValue_33     (br             ) [ 0000000000000]
OUT_addr_resp   (writeresp      ) [ 0000000000000]
StgValue_35     (br             ) [ 0000000000000]
StgValue_36     (ret            ) [ 0000000000000]
StgValue_37     (write          ) [ 0000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="OUT_r">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="OUT_r"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="state">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="state"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecClockDomain"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="default"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="AXI_SPI_DRIVER_str"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecReset"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1004" name="grp_writeresp_fu_62">
<pin_list>
<pin id="63" dir="0" index="0" bw="1" slack="0"/>
<pin id="64" dir="0" index="1" bw="32" slack="0"/>
<pin id="65" dir="0" index="2" bw="1" slack="0"/>
<pin id="66" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="OUT_addr_1_req/1 OUT_addr_1_resp/3 "/>
</bind>
</comp>

<comp id="69" class="1004" name="grp_writeresp_fu_69">
<pin_list>
<pin id="70" dir="0" index="0" bw="1" slack="0"/>
<pin id="71" dir="0" index="1" bw="32" slack="0"/>
<pin id="72" dir="0" index="2" bw="1" slack="0"/>
<pin id="73" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="OUT_addr_req/1 OUT_addr_resp/9 "/>
</bind>
</comp>

<comp id="76" class="1004" name="StgValue_27_write_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="0" slack="0"/>
<pin id="78" dir="0" index="1" bw="32" slack="1"/>
<pin id="79" dir="0" index="2" bw="17" slack="0"/>
<pin id="80" dir="0" index="3" bw="1" slack="0"/>
<pin id="81" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_27/2 "/>
</bind>
</comp>

<comp id="86" class="1004" name="StgValue_37_write_fu_86">
<pin_list>
<pin id="87" dir="0" index="0" bw="0" slack="0"/>
<pin id="88" dir="0" index="1" bw="32" slack="1"/>
<pin id="89" dir="0" index="2" bw="4" slack="0"/>
<pin id="90" dir="0" index="3" bw="1" slack="0"/>
<pin id="91" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_37/8 "/>
</bind>
</comp>

<comp id="96" class="1004" name="state_load_load_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="4" slack="0"/>
<pin id="98" dir="1" index="1" bw="4" slack="6"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="state_load/1 "/>
</bind>
</comp>

<comp id="100" class="1004" name="OUT_addr_1_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="32" slack="0"/>
<pin id="102" dir="0" index="1" bw="32" slack="0"/>
<pin id="103" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="OUT_addr_1/1 "/>
</bind>
</comp>

<comp id="107" class="1004" name="StgValue_23_store_fu_107">
<pin_list>
<pin id="108" dir="0" index="0" bw="3" slack="0"/>
<pin id="109" dir="0" index="1" bw="4" slack="0"/>
<pin id="110" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_23/1 "/>
</bind>
</comp>

<comp id="113" class="1004" name="OUT_addr_fu_113">
<pin_list>
<pin id="114" dir="0" index="0" bw="32" slack="0"/>
<pin id="115" dir="0" index="1" bw="32" slack="0"/>
<pin id="116" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="OUT_addr/1 "/>
</bind>
</comp>

<comp id="120" class="1004" name="StgValue_26_store_fu_120">
<pin_list>
<pin id="121" dir="0" index="0" bw="1" slack="0"/>
<pin id="122" dir="0" index="1" bw="4" slack="0"/>
<pin id="123" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_26/1 "/>
</bind>
</comp>

<comp id="126" class="1005" name="state_load_reg_126">
<pin_list>
<pin id="127" dir="0" index="0" bw="4" slack="6"/>
<pin id="128" dir="1" index="1" bw="4" slack="2147483647"/>
</pin_list>
<bind>
<opset="state_load "/>
</bind>
</comp>

<comp id="130" class="1005" name="OUT_addr_1_reg_130">
<pin_list>
<pin id="131" dir="0" index="0" bw="32" slack="1"/>
<pin id="132" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="OUT_addr_1 "/>
</bind>
</comp>

<comp id="136" class="1005" name="OUT_addr_reg_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="32" slack="1"/>
<pin id="138" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="OUT_addr "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="67"><net_src comp="46" pin="0"/><net_sink comp="62" pin=0"/></net>

<net id="68"><net_src comp="38" pin="0"/><net_sink comp="62" pin=2"/></net>

<net id="74"><net_src comp="46" pin="0"/><net_sink comp="69" pin=0"/></net>

<net id="75"><net_src comp="38" pin="0"/><net_sink comp="69" pin=2"/></net>

<net id="82"><net_src comp="52" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="83"><net_src comp="54" pin="0"/><net_sink comp="76" pin=2"/></net>

<net id="84"><net_src comp="56" pin="0"/><net_sink comp="76" pin=3"/></net>

<net id="85"><net_src comp="58" pin="0"/><net_sink comp="62" pin=0"/></net>

<net id="92"><net_src comp="52" pin="0"/><net_sink comp="86" pin=0"/></net>

<net id="93"><net_src comp="60" pin="0"/><net_sink comp="86" pin=2"/></net>

<net id="94"><net_src comp="56" pin="0"/><net_sink comp="86" pin=3"/></net>

<net id="95"><net_src comp="58" pin="0"/><net_sink comp="69" pin=0"/></net>

<net id="99"><net_src comp="2" pin="0"/><net_sink comp="96" pin=0"/></net>

<net id="104"><net_src comp="0" pin="0"/><net_sink comp="100" pin=0"/></net>

<net id="105"><net_src comp="44" pin="0"/><net_sink comp="100" pin=1"/></net>

<net id="106"><net_src comp="100" pin="2"/><net_sink comp="62" pin=1"/></net>

<net id="111"><net_src comp="48" pin="0"/><net_sink comp="107" pin=0"/></net>

<net id="112"><net_src comp="2" pin="0"/><net_sink comp="107" pin=1"/></net>

<net id="117"><net_src comp="0" pin="0"/><net_sink comp="113" pin=0"/></net>

<net id="118"><net_src comp="50" pin="0"/><net_sink comp="113" pin=1"/></net>

<net id="119"><net_src comp="113" pin="2"/><net_sink comp="69" pin=1"/></net>

<net id="124"><net_src comp="42" pin="0"/><net_sink comp="120" pin=0"/></net>

<net id="125"><net_src comp="2" pin="0"/><net_sink comp="120" pin=1"/></net>

<net id="129"><net_src comp="96" pin="1"/><net_sink comp="126" pin=0"/></net>

<net id="133"><net_src comp="100" pin="2"/><net_sink comp="130" pin=0"/></net>

<net id="134"><net_src comp="130" pin="1"/><net_sink comp="76" pin=1"/></net>

<net id="135"><net_src comp="130" pin="1"/><net_sink comp="62" pin=1"/></net>

<net id="139"><net_src comp="113" pin="2"/><net_sink comp="136" pin=0"/></net>

<net id="140"><net_src comp="136" pin="1"/><net_sink comp="69" pin=1"/></net>

<net id="141"><net_src comp="136" pin="1"/><net_sink comp="86" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: OUT_r | {1 2 3 4 5 6 7 8 9 10 11 12 }
	Port: state | {1 }
 - Input state : 
	Port: AXI_SPI_DRIVER : state | {1 }
  - Chain level:
	State 1
		StgValue_20 : 1
		OUT_addr_1_req : 1
		OUT_addr_req : 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-------------------------|
| Operation|     Functional Unit     |
|----------|-------------------------|
| writeresp|   grp_writeresp_fu_62   |
|          |   grp_writeresp_fu_69   |
|----------|-------------------------|
|   write  | StgValue_27_write_fu_76 |
|          | StgValue_37_write_fu_86 |
|----------|-------------------------|
|   Total  |                         |
|----------|-------------------------|

Memories:
N/A

* Register list:
+------------------+--------+
|                  |   FF   |
+------------------+--------+
|OUT_addr_1_reg_130|   32   |
| OUT_addr_reg_136 |   32   |
|state_load_reg_126|    4   |
+------------------+--------+
|       Total      |   68   |
+------------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|---------------------|------|------|------|--------||---------||---------|
| grp_writeresp_fu_62 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_62 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_69 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_69 |  p1  |   2  |  32  |   64   ||    9    |
|---------------------|------|------|------|--------||---------||---------|
|        Total        |      |      |      |   132  ||  7.076  ||    18   |
|---------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    -   |    -   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    7   |    -   |   18   |
|  Register |    -   |   68   |    -   |
+-----------+--------+--------+--------+
|   Total   |    7   |   68   |   18   |
+-----------+--------+--------+--------+
